/* core_modbusConfiguration4 8.21.0 2018-01-30T22:08:57+00:00 ab57d6f7e859+ (release/8.21.0) r8.21.0 */
!function(){"use strict";function e(e,n,i,a){function t(e){function n(n,i,a,t,s){var o=i.all({hasApplication:s.isApplicationAvailable(),hasFragment:t.detailCached(n.deviceId).then(a.getResData).then(function(n){return!_.isUndefined(n[e])})});return o.then(function(e){return e.hasApplication&&e.hasFragment})}return n.$inject=["$routeParams","$q","c8yBase","c8yDevices","c8yFieldbus"],n}var s="microchip",o=i("Modbus"),r="/device/:deviceId",l="core_modbusConfiguration4/views/";n.when(r,{name:o,icon:s,templateUrl:l+"modbusConfiguration.html",showIf:t(a.MODBUS),controller:["$scope","$routeParams","c8yBase","c8yDevices",function(e,n,i,a){e.isModbusTab=!0,e.device={},a.detail(n.deviceId).then(i.getResData).then(function(n){n.c8y_SerialConfiguration&&_.defaults(n.c8y_SerialConfiguration,{baudRate:19200,dataBits:8,parity:"E",stopBits:1}),e.device=n})}]}),s="share-alt",o=i("CAN Bus"),n.when(r,{name:o,icon:s,templateUrl:l+"modbusConfiguration.html",showIf:t(a.CANBUS),controller:["$scope","$routeParams","c8yBase","c8yDevices",function(e,n,i,a){e.isModbusTab=!1,e.isCanBusTab=!0,e.device={},a.detail(n.deviceId).then(i.getResData).then(function(n){e.device=n})}]}),s="cogs",o=i("OPCUA"),n.when(r,{name:o,icon:s,templateUrl:l+"OPCUAConfig.html",showIf:t(a.OPCUA),controller:["$scope","$routeParams","c8yBase","c8yDevices",function(e,n,i,a){e.isModbusTab=!1,e.isOPCUATab=!0,e.device={},a.detail(n.deviceId).then(i.getResData).then(function(n){e.device=n})}]})}e.$inject=["$injector","c8yViewsProvider","gettext","FRAGMENTS"],angular.module("c8y.modbusConfiguration4",[]).constant("FRAGMENTS",{MODBUS:"c8y_ModbusConfiguration",CANBUS:"c8y_CanConfiguration",OPCUA:"c8y_OPCUAGateway"}).config(e)}(),function(){"use strict";function e(e,n,i,a,t,s,o,r,l,d,c,u,m){function v(){d.getAvailableDeviceTypes().then(g).then(p)}function g(n){x.types.length=0,_.forEach(n,function(n){(e.isModbusTab&&"modbus"===n.fieldbusType||e.isCanBusTab&&"canbus"===n.fieldbusType||e.isOPCUATab&&"opcua"===n.fieldbusType)&&x.types.push(n)})}function p(){return(e.devices||[]).length=0,b().then(f)}function b(){return o.childDevices(L)}function f(n){n=_.isArray(n)?n:[n],e.devices=e.devices||[],_.forEach(n,function(n){e.isModbusTab&&n.c8y_ModbusDevice?C(n):e.isCanBusTab&&n.c8y_CanDevice?y(n):e.isOPCUATab&&n.c8y_OPCUADevice&&h(n)})}function C(n){var i=_.find(x.types,function(e){return n.c8y_ModbusDevice.type==="/inventory/managedObjects/"+e.id});e.devices.push({id:n.id,name:n.name,deviceType:i&&i.name,address:n.c8y_ModbusDevice.address,ipAddress:n.c8y_ModbusDevice.ipAddress,protocol:n.c8y_ModbusDevice.protocol})}function y(n){var i=_.find(x.types,function(e){return n.c8y_CanDevice.type==="/inventory/managedObjects/"+e.id});e.devices.push({id:n.id,name:n.name,deviceType:i&&i.name})}function h(n){var i=_.find(x.types,function(e){return n.c8y_OPCUADevice.type==="/inventory/managedObjects/"+e.id});e.devices.push({id:n.id,name:n.name,deviceType:i&&i.name,directoryPath:n.c8y_OPCUADevice.browsePath})}function A(e){return w(e).then(function(){l.success(u("Operation to apply settings has been sent!"))})}function D(e){return R(e).then(function(){l.success(u("Operation to apply settings has been sent!"))})}function w(e){var n={deviceId:e.id,description:u("Set serial configuration"),c8y_SerialConfiguration:e.c8y_SerialConfiguration};return t.create(n)}function R(n){return e.isModbusTab&&n.c8y_ModbusConfiguration?T(n):e.isCanBusTab?O(n):e.isOPCUATab?P(n):void 0}function T(e){var n={deviceId:e.id,description:u("Set modbus configuration"),c8y_ModbusConfiguration:e.c8y_ModbusConfiguration};return t.create(n)}function O(e){var n={deviceId:e.id,description:u("Set CAN Bus configuration"),c8y_CanConfiguration:e.c8y_CanConfiguration};return t.create(n)}function P(e){var n=_.cloneDeep(e),i=n.c8y_OPCUAGateway.transmitRate;return n.c8y_OPCUAGateway.transmitRate=0===i?void 0:i,o.update(_.pick(n,["id","c8y_OPCUAGateway"]))}function U(e){a.url("device/"+e.id)}function S(n){r({title:u("Confirm delete?"),body:m.getString('Do you really want to remove device "{{name}}" with id {{id}}?',n),size:"sm",labels:{ok:u("Delete")},status:"danger"}).then(angular.bind(o,o.remove,n)).then(_.partial(_.pull,e.devices,n)).then(_.partial(l.success,u("Device successfully deleted!")))}function F(n,i){return(e.isModbusTab||e.isOPCUATab)&&N(n),e.isOPCUATab&&I(n),s.invalid(e,n,i)}function N(n){var i=e[n].pollingRate,a=e[n].transmitRate,t=!0,s=!0;if(i){var o=i.$modelValue<=a.$modelValue;e.isOPCUATab&&0===a.$modelValue&&(o=!0),(!_.isInteger(a.$modelValue)||a.$modelValue<=0)&&(t=!1),(!_.isInteger(i.$modelValue)||i.$modelValue<=0)&&(s=!1),a.$setValidity(k.ONLY_NATURAL_NUMBERS_ALLOWED,t),a.$setValidity(k.POLLING_RATE_LARGER_THAN_TRANSMIT_RATE,o),i.$setValidity(k.ONLY_NATURAL_NUMBERS_ALLOWED,s),i.$setValidity(k.POLLING_RATE_LARGER_THAN_TRANSMIT_RATE,o)}}function I(n){var i=e[n].OPCUAurl,a=c.validation.opcuaBrowsePath.pattern,t=i.$modelValue;i.$setValidity(k.INVALID_URL,!t||a.test(t))}function E(n){return n?e.isModbusTab?n.c8y_ModbusConfiguration:e.isCanBusTab?n.c8y_CanConfiguration:e.isOPCUATab?(n.c8y_OPCUAGateway&&(n.c8y_OPCUAGateway.transmitRate=n.c8y_OPCUAGateway.transmitRate||0,delete n.c8y_OPCUAGateway.userIdentityPassword),n.c8y_OPCUAGateway):void 0:{}}function M(e){return e?e.c8y_SerialConfiguration:{}}function B(n){return e.isModbusTab&&n.c8y_SerialConfiguration}function $(n){return e.isCanBusTab?o.supportsOperation(n,"c8y_CanConfiguration"):e.isModbusTab?o.supportsOperation(n,"c8y_ModbusConfiguration"):!!e.isOPCUATab&&o.supportsOperation(n,"c8y_OPCUAConfiguration")}var L=i.deviceId,V={baudRates:[110,300,600,1200,2400,4800,9600,14400,19200,38400,57600,115200,25e4,460800,5e5,921600,1e6],dataBits:[8],parities:["N","E","O"],stopBits:[1,2]},x={types:[]};e.isCanBusTab&&(V.baudRates=[1e5,125e3,25e4,5e5,1e6]);var k={IS_REQUIRED:"required",ADDRESS_IN_USE:"address-in-use",ADDRESSES_IN_USE:"addresses-in-use",ADDRESS_INVALID:"address-invalid",POLLING_RATE_LARGER_THAN_TRANSMIT_RATE:"polling-rate-larger-than-transmit-rate",ONLY_NATURAL_NUMBERS_ALLOWED:"only-natural-numbers-allowed",IPADDRESS_INVALID_FORMAT:"ip",INVALID_URL:"invalid-url"},q={};q[k.IS_REQUIRED]=u("This field is required!"),q[k.ADDRESS_IN_USE]=u("This address is already in use!"),q[k.ADDRESSES_IN_USE]=u("These addresses are already in use!"),q[k.ADDRESS_INVALID]=u("Addresses from 248 up to 254 are not allowed."),q[k.POLLING_RATE_LARGER_THAN_TRANSMIT_RATE]=u("Polling rate should be equal to or smaller than transmit rate!"),q[k.ONLY_NATURAL_NUMBERS_ALLOWED]=u("Only natural numbers allowed!"),q[k.IPADDRESS_INVALID_FORMAT]=u("The IP address format is invalid!"),q[k.INVALID_URL]=u("The URL format is invalid! The only supported protocols are http, https and opc.tcp."),e.getFieldValidationHints=s.validationHints,e.fieldErrors=k,e.fieldErrorsToMessages=q,e.invalid=F,e.serialConfigurationOptions=V,e.deviceConfigurationOptions=x,e.saveSerialConfig=A,e.saveFieldbusConfig=D,e.reloadDevices=p,e.navigateToDetail=U,e.onClickDelete=S,e.showSerialPanel=B,e.$watch("device",function(n){e.hasSerialConfigOperation=o.supportsOperation(n,"c8y_SerialConfiguration"),e.hasFieldBusConfigOperation=$(n),e.fieldbusConfiguration=E(n),e.serialConfiguration=M(n)}),v()}e.$inject=["$scope","$q","$routeParams","$location","c8yDeviceControl","c8yBase","c8yDevices","c8yModal","c8yAlert","c8yDeviceDatabase","c8yConfig","gettext","gettextCatalog"],angular.module("c8y.modbusConfiguration4").controller("modbusConfigCtrl",e)}(),function(){"use strict";function e(e,n,i,a,t,s,o,r){function l(i,a,t){return d(i,a),n.invalid(e,a,t)}function d(n,i){if("CAN"!==n&&"OPCUA"!==n){var a=e[i].address;if(a){var t=a.$modelValue;if("TCP"===n){var s=e[i].ipAddress,o=s.$modelValue;_.isUndefined(t)||a.$setValidity(A.ADDRESS_INVALID,c(t));var r=t&&o&&_.some(e.devices,{address:t,ipAddress:o,protocol:"TCP"});a.$setValidity(A.ADDRESSES_IN_USE,!r),s.$setValidity(A.ADDRESSES_IN_USE,!r)}else if("RTU"===n){var l=t&&_.some(e.devices,{address:t,protocol:"RTU"});a.$setValidity(A.ADDRESS_IN_USE,!l)}}}}function c(e){return e<=247||255===e}function u(){e.newDevice={name:null,deviceType:null,address:null}}function m(n,i){n.adding=!0,n.protocol=i,e.isModbusTab?a.create(e.device,n).then(_.partial(v,i),g):e.isCanBusTab?t.create(e.device,n).then(_.partial(v,i),g):e.isOPCUATab&&s.create(e.device,n).then(_.partial(v,i),g)}function v(n){p(n),e.reloadDevices(),i.success(r("New child device has been added!"))}function g(){e.newDevice.adding=!1,i.danger(r("Failed to add new child device."))}function p(n){delete e.newDevice,e["newDeviceForm"+n].$setPristine(),document.getElementsByName("newDeviceForm"+n)[0].reset()}function b(i,a){return n.validationHints(e[i][a],e.fieldErrorsToMessages)}function f(n){return e.isModbusTab?function(e){var i=C(e);return i===n}:function(){return!0}}function C(e){return e&&e.protocol}function y(n,i){if(e.isModbusTab){if("TCP"===i)return o.supportsOperation(n,"c8y_ModbusDevice");if("RTU"===i)return o.supportsOperation(n,"c8y_ModbusDevice")&&n.c8y_SerialConfiguration}else if(e.isCanBusTab&&"CAN"===i)return o.supportsOperation(n,"c8y_CanDevice")}function h(n){return e["newDeviceForm"+n].$invalid||e.newDevice&&e.newDevice.adding}var A=e.fieldErrors;e.getFieldValidationHints=b,e.invalid=l,e.startAddingNewDevice=u,e.addNewDevice=m,e.clearNewDevice=p,e.filterByMode=f,e.showSection=y,e.isFormInvalid=h}e.$inject=["$scope","c8yBase","c8yAlert","c8yModbusDevice","c8yCanbusDevice","c8yOPCUADevice","c8yDevices","gettext"],angular.module("c8y.modbusConfiguration4").controller("deviceListCtrl",e)}(),function(){"use strict";function e(e){var n;n='<div ng-controller="modbusConfigCtrl" class="row">\n\n  <div class="col-lg-4 col-xs-12">\n    <div class="card-group" style="margin-bottom: 0">\n      <div class="col-lg-12 col-sm-6 col-xs-12" ng-show="showSerialPanel(device)">\n        <div class="card">\n          <div class="card-header">\n            <h4 class="card-title" translate>Serial communication</h4>\n          </div>\n          <hr>\n          <div class="card-block">\n            <form role="form" name="serialCommunicationForm">\n              <div class="form-group" ng-class="{\'has-error\': invalid(\'serialCommunicationForm\', \'baudRate\')}">\n                <label for="baudRate" translate>Baud rate</label>\n                <div class="c8y-select-wrapper">\n                  <select class="form-control" id="baudRate" name="baudRate" ng-disabled="!hasSerialConfigOperation" ng-model="serialConfiguration.baudRate" ng-options="br for br in serialConfigurationOptions.baudRates" required>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n              <div ng-if="isModbusTab" class="form-group" ng-class="{\'has-error\': invalid(\'serialCommunicationForm\', \'dataBits\')}">\n                <label for="dataBits" translate>Data bits</label>\n                <div class="c8y-select-wrapper">\n                  <select class="form-control" id="dataBits" name="dataBits" ng-disabled="!hasSerialConfigOperation" ng-model="serialConfiguration.dataBits" ng-options="db for db in serialConfigurationOptions.dataBits" required>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n              <div ng-if="isModbusTab" class="form-group" ng-class="{\'has-error\': invalid(\'serialCommunicationForm\', \'parity\')}">\n                <label for="parity" translate>Parity</label>\n                <div class="c8y-select-wrapper">\n                  <select class="form-control" id="parity" name="parity" ng-disabled="!hasSerialConfigOperation" ng-model="serialConfiguration.parity" ng-options="p for p in serialConfigurationOptions.parities" required>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n              <div ng-if="isModbusTab" class="form-group" ng-class="{\'has-error\': invalid(\'serialCommunicationForm\', \'stopBits\')}">\n                <label for="stopBits" translate>Stop bits</label>\n                <div class="c8y-select-wrapper">\n                  <select class="form-control input-border" id="stopBits" name="stopBits" ng-disabled="!hasSerialConfigOperation" ng-model="serialConfiguration.stopBits" ng-options="sb for sb in serialConfigurationOptions.stopBits" required>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n            </form>\n            <button class="btn btn-primary" ng-if="hasSerialConfigOperation" ng-click="saveSerialConfig(device)" ng-disabled="serialCommunicationForm.$invalid" translate>\n              Save changes\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class="col-lg-12 col-sm-6 col-xs-12">\n        <div class="card">\n          <div class="card-header">\n            <h4 class="card-title">\n              <span ng-if="isModbusTab" translate>Modbus communication</span>\n              <span ng-if="!isModbusTab" translate>CAN Bus communication</span>\n            </h4>\n          </div>\n          <hr>\n          <div class="card-block">\n            <form role="form" name="fieldbusCommunicationForm">\n              <div ng-if="!isModbusTab" class="form-group" ng-class="{\'has-error\': invalid(\'fieldbusCommunicationForm\', \'baudRate\')}">\n                <label for="baudRate" translate>Baud rate</label>\n                <div class="c8y-select-wrapper">\n                  <select class="form-control" id="baudRate" name="baudRate" ng-disabled="!hasFieldBusConfigOperation" ng-model="fieldbusConfiguration.baudRate" ng-options="br for br in serialConfigurationOptions.baudRates" required>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n              <div class="form-group modbusComInputs" ng-class="{\'has-error\': invalid(\'fieldbusCommunicationForm\', \'transmitRate\')}">\n                <label for="transmitRate" translate>Transmit rate</label>\n                <div class="input-group">\n                  <input type="number" class="form-control input-border" id="transmitRate" name="transmitRate" ng-model="fieldbusConfiguration.transmitRate" ng-min="1" required ng-disabled="!hasFieldBusConfigOperation" uib-tooltip="{{getFieldValidationHints(fieldbusCommunicationForm.transmitRate, fieldErrorsToMessages)}}" aria-describedby="transmitRateUnits">\n                  <span class="input-group-addon units" id="transmitRateUnits" translate>seconds</span>\n                </div>\n              </div>\n              <div ng-if="isModbusTab" class="form-group modbusComInputs" ng-class="{\'has-error\': invalid(\'fieldbusCommunicationForm\', \'pollingRate\')}">\n                <label for="pollingRate" translate>Polling rate</label>\n                <div class="input-group">\n                  <input type="number" class="form-control input-border" id="pollingRate" name="pollingRate" ng-disabled="!hasFieldBusConfigOperation" ng-model="fieldbusConfiguration.pollingRate" ng-min="1" required uib-tooltip="{{getFieldValidationHints(fieldbusCommunicationForm.pollingRate, fieldErrorsToMessages)}}" aria-describedby="pollingRateUnits">\n                  <span class="input-group-addon units" id="pollingRateUnits" translate>seconds</span>\n                </div>\n              </div>\n            </form>\n            <button class="btn btn-primary" ng-if="hasFieldBusConfigOperation" ng-click="saveFieldbusConfig(device)" ng-disabled="fieldbusCommunicationForm.$invalid" translate>\n              Save changes\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="col-lg-8 col-xs-12">\n\n      <div ng-repeat="mode in [\'TCP\', \'RTU\', \'CAN\']">\n        <!-- I can\'t put the ng-if on the same div as ng-repeat: https://github.com/angular/angular.js/issues/4398 -->\n        <div class="card" ng-show="showSection(device, mode)" ng-controller="deviceListCtrl">\n          <div class="card-header">\n            <h4 class="card-title">{{mode}}</h4>\n          </div>\n          <hr style="margin: 0" ng-hide="filtered.length > 0">\n          <div class="list-group">\n            <div class="list-group-item hidden-xs" ng-show="filtered.length > 0">\n              <div class="flex-row">\n                <div class="col-sm-3 col-xs-12" ng-show="mode !== \'CAN\'"><label class="small" translate>Name</label></div>\n                <div class="col-sm-3 col-xs-12"><label class="small" translate>Device type</label></div>\n                <div class="col-sm-2 col-xs-12" ng-show="mode !== \'CAN\'"><label class="small" translate>Address</label></div>\n                <div class="col-sm-3 col-xs-12" ng-show="mode === \'TCP\'"><label class="small" translate>IP address</label></div>\n              </div>\n            </div>\n            <div class="list-group-item" ng-repeat="dev in devices | orderBy:\'-\' | filter: filterByMode(mode) as filtered ">\n              <div class="flex-row">\n                <div class="col-sm-3 col-xs-12" ng-show="mode !== \'CAN\'" class="interact" ng-click="navigateToDetail(dev)">\n                  <label class="small visible-xs-inline-block" translate>Name</label> {{dev.name}}\n                </div>\n                <div class="col-sm-3 col-xs-12">\n                  <label class="small visible-xs-inline-block" translate>Device type</label> {{dev.deviceType}}\n                </div>\n                <div class="col-sm-2 col-xs-12" ng-show="mode !== \'CAN\'">\n                  <label class="small visible-xs-inline-block" translate>Address</label> {{dev.address}}\n                </div>\n                <div class="col-sm-3 col-xs-12" ng-show="mode === \'TCP\'">\n                  <label class="small visible-xs-inline-block" translate>IP address</label> {{dev.ipAddress}}\n                </div>\n                <div class="col-sm-1 col-xs-12 text-right showOnHover">\n                  <button class="btn btn-link" title="{{\'Remove\' | translate}}" ng-click="onClickDelete(dev)">\n                    <i c8y-icon="minus-circle" class="text-danger"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <c8y-load-more ng-repeat-end change-page-size></c8y-load-more>\n\n          <form name="newDeviceForm{{mode}}" role="form" novalidate ng-show="newDevice" class="card-block bg-gray-white">\n            <div class="form-group" ng-if="mode !== \'CAN\'" ng-class="{\'has-error\': invalid(mode, \'newDeviceForm\' + mode, \'name\')}" uib-tooltip="{{getFieldValidationHints(\'newDeviceForm\' + mode, \'name\')}}">\n              <input type="text" class="form-control" placeholder="{{\'Name\' | translate}}" name="name" ng-model="newDevice.name" required ng-disabled="newDevice.adding">\n            </div>\n            <div class="form-group" ng-class="{\'has-error\': invalid(mode, \'newDeviceForm\' + mode, \'deviceType\')}" uib-tooltip="{{getFieldValidationHints(\'newDeviceForm\' + mode, \'deviceType\')}}">\n              <ui-select name="deviceType" ng-model="newDevice.deviceType" class="form-control" ng-disabled="newDevice.adding" required>\n                <ui-select-match placeholder="{{\'Select a device type…\' | translate}}" title="{{$select.selected.name}}" ng-bind="$select.selected.name"></ui-select-match>\n                <ui-select-choices repeat="t in deviceConfigurationOptions.types | orderBy:\'name\' | filter: $select.search">\n                  <span title="{{t.name}}" ng-bind="t.name"></span>\n                </ui-select-choices>\n              </ui-select>\n            </div>\n\n            <div class="form-group" ng-if="mode !== \'CAN\'" ng-class="{\'has-error\': invalid(mode, \'newDeviceForm\' + mode, \'address\')}" uib-tooltip="{{getFieldValidationHints(\'newDeviceForm\' + mode, \'address\')}}">\n              <input type="number" class="form-control" placeholder="{{\'Address\' | translate}}" name="address" ng-model="newDevice.address" required ng-min="0" ng-max="255" step="1" ng-disabled="newDevice.adding">\n            </div>\n\n            <div class="form-group" ng-if="mode === \'TCP\'" ng-class="{\'has-error\': invalid(mode, \'newDeviceForm\' + mode, \'ipAddress\')}" uib-tooltip="{{getFieldValidationHints(\'newDeviceForm\' + mode, \'ipAddress\')}}">\n              <input id="ipAddress" name="ipAddress" type="text" validate-ip required class="form-control" ng-model="newDevice.ipAddress" placeholder="{{\'IP address\' | translate}}" ng-maxlength="15" ng-disabled="newDevice.adding">\n            </div>\n\n            <button class="btn btn-default" ng-click="clearNewDevice(mode)" ng-disabled="newDevice.adding" translate>\n              Cancel\n            </button>\n\n            <button class="btn btn-primary" ng-click="addNewDevice(newDevice, mode)" ng-disabled="isFormInvalid(mode)">\n              <span ng-hide="newDevice.adding" translate>Add</span>\n              <span ng-show="newDevice.adding"><i c8y-icon="circle-o-notch" class="fa-spin"></i> <translate>Adding</translate>&hellip;</span>\n            </button>\n          </form>\n\n        <div class="card-block">\n          <button class="btn-add-block" ng-click="startAddingNewDevice()">\n            <i c8y-icon="plus-circle"></i> <translate>Add {{mode}} device</translate>\n          </button>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n',e.put("core_modbusConfiguration4/views/modbusConfiguration.html",n),e.put("/apps/core/modbusConfiguration4/views/modbusConfiguration.html",n),n='<div ng-controller="modbusConfigCtrl" class="modbusConfigPanel">\n  <div class="panel panel-clean panel-border">\n    <div class="panel-heading">\n      <i c8y-icon="hdd-o"></i><translate>OPCUA communication</translate>\n    </div>\n    <form role="form" name="fieldbusCommunicationForm">\n      <div class="row">\n        <div class="form-group col-lg-3" ng-class="{\'has-error\': invalid(\'fieldbusCommunicationForm\', \'OPCUAurl\')}">\n          <label for="OPCUAurl" translate>URL</label>\n          <input type="text" class="form-control input-border" id="OPCUAurl" name="OPCUAurl" ng-model="fieldbusConfiguration.url" required uib-tooltip="{{getFieldValidationHints(fieldbusCommunicationForm.OPCUAurl, fieldErrorsToMessages)}}">\n        </div>\n        <div class="form-group col-lg-3">\n          <label for="OPCUAusername" translate>Username</label>\n          <input type="text" class="form-control input-border" id="OPCUAusername" name="OPCUAusername" ng-model="fieldbusConfiguration.userIdentityName">\n        </div>\n        <div class="form-group col-lg-3">\n          <label for="OPCUAPassword" translate>Password</label>\n          <input type="password" class="form-control input-border" id="OPCUAPassword" name="OPCUAPassword" ng-model="fieldbusConfiguration.userIdentityPassword" c8y-autocomplete="new-password">\n        </div>\n      </div>\n      <div class="row">\n        <div class="form-group col-lg-3 modbusComInputs" ng-class="{\'has-error\': invalid(\'fieldbusCommunicationForm\', \'transmitRate\')}">\n          <label for="transmitRate" translate>Transmit rate</label>\n          <div class="input-group">\n            <input type="number" class="form-control input-border" id="transmitRate" name="transmitRate" ng-model="fieldbusConfiguration.transmitRate" min="0" required aria-describedby="transmitRateUnits" uib-tooltip="{{getFieldValidationHints(fieldbusCommunicationForm.transmitRate, fieldErrorsToMessages)}}">\n            <span class="input-group-addon units" id="transmitRateUnits" translate>seconds</span>\n          </div>\n        </div>\n        \n        <div class="form-group col-lg-3 modbusComInputs" ng-class="{\'has-error\': invalid(\'fieldbusCommunicationForm\', \'pollingRate\')}">\n          <label for="pollingRate" translate>Polling rate</label>\n          <div class="input-group">\n            <input type="number" class="form-control input-border" id="pollingRate" name="pollingRate" ng-model="fieldbusConfiguration.pollingRate" min="1" required aria-describedby="pollingRateUnits" uib-tooltip="{{getFieldValidationHints(fieldbusCommunicationForm.pollingRate, fieldErrorsToMessages)}}">\n            <span class="input-group-addon units" id="pollingRateUnits" translate>seconds</span>\n          </div>\n        </div>\n      </div>\n    </form>\n    <div class="saveButton" ng-if="hasFieldBusConfigOperation">\n      <button class="btn btn-primary" ng-click="saveFieldbusConfig(device)" ng-disabled="fieldbusCommunicationForm.$invalid" translate>\n        Save changes\n      </button>\n    </div>\n  </div>\n\n  <hr>\n  \n  <div ng-controller="deviceListCtrl" ng-init="mode = \'OPCUA\'">\n    <button class="btn btn-link pull-right" ng-click="startAddingNewDevice()">\n      <i c8y-icon="plus"></i><translate>Add OPCUA device</translate>\n    </button>\n    <div class="clearfix"></div>\n    <form role="form" name="newDeviceFormOPCUA" class="panel-body" novalidate ng-show="newDevice">\n      <div class="row">\n        <div class="form-group col-lg-3" ng-class="{\'has-error\': invalid(mode, \'newDeviceForm\' + mode, \'name\')}" uib-tooltip="{{getFieldValidationHints(\'newDeviceFormOPCUA\', \'name\')}}">\n          <input type="text" class="form-control input-border" placeholder="{{\'Name\' | translate}}" name="name" ng-model="newDevice.name" required ng-disabled="newDevice.adding"/>\n        </div>\n        <div class="form-group col-lg-3" ng-class="{\'has-error\': invalid(mode, \'newDeviceForm\' + mode, \'directoryPath\')}" uib-tooltip="{{getFieldValidationHints(\'newDeviceFormOPCUA\', \'directoryPath\')}}">\n          <input type="text" class="form-control input-border" placeholder="{{\'Directory path\' | translate}}" name="directoryPath" ng-model="newDevice.directoryPath" required ng-disabled="newDevice.adding"/>\n        </div>\n        <div class="form-group col-lg-3" ng-class="{\'has-error\': invalid(mode, \'newDeviceFormOPCUA\', \'deviceType\')}" uib-tooltip="{{getFieldValidationHints(\'newDeviceFormOPCUA\', \'deviceType\')}}">\n          <ui-select name="deviceType" ng-model="newDevice.deviceType" class="form-control" required ng-disabled="newDevice.adding">\n            <ui-select-match title="{{$select.selected.name}}" ng-bind="$select.selected.name"></ui-select-match>\n            <ui-select-choices repeat="t in deviceConfigurationOptions.types | orderBy:\'name\' | filter: $select.search">\n              <span title="{{t.name}}" ng-bind="t.name"></span>\n            </ui-select-choices>\n          </ui-select>\n        </div>\n        <div class="form-group col-lg-3">\n          <button class="btn btn-primary" ng-click="addNewDevice(newDevice, mode)" ng-disabled="isFormInvalid(mode)">\n            <span ng-hide="newDevice.adding" translate>Add</span>\n            <span ng-show="newDevice.adding"><i c8y-icon="spinner" class="fa-spin"></i> <translate>Adding</translate>&hellip;</span>\n          </button>\n          <button class="btn btn-default" ng-click="clearNewDevice(mode)" ng-disabled="newDevice.adding" translate>Cancel</button>\n        </div>\n      </div>\n    </form>\n\n    <table class="table table-hover">\n      <tr>\n        <th translate>Name</th>\n        <th translate>Directory path</th>\n        <th translate>Device type</th>\n        <th>&nbsp;</th>\n      </tr>\n      <tr ng-repeat="dev in devices | filter:filterByMode(mode) | orderBy:\'-\'">\n        <td class="interact" ng-click="navigateToDetail(dev)">{{dev.name}}</td>\n        <td>{{dev.directoryPath}}</td>\n        <td>{{dev.deviceType}}</td>\n        <td class="text-right">\n          <button class="btn btn-danger btn-xs showOnHover" title="{{\'Remove\' | translate}}" ng-click="onClickDelete(dev)">\n            <i c8y-icon="times"></i>\n          </button>\n        </td>\n      </tr>\n    </table>\n\n    <c8y-load-more ng-repeat-end change-page-size></c8y-load-more>\n  </div>\n\n</div>\n',e.put("core_modbusConfiguration4/views/OPCUAConfig.html",n),e.put("/apps/core/modbusConfiguration4/views/OPCUAConfig.html",n)}angular.module("c8y.modbusConfiguration4").run(["$templateCache",e])}();