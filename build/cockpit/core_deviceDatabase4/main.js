/* core_deviceDatabase4 9.3.0 2018-03-26T16:25:04+00:00 796b68a031b1+ (release/9.3.0) tip */
function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function _asyncToGenerator(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,n){function a(i,r){try{var s=t[i](r),o=s.value}catch(e){return void n(e)}return s.done?void e(o):Promise.resolve(o).then(function(e){a("next",e)},function(e){a("throw",e)})}return a("next")})}}function _asyncToGenerator(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,n){function a(i,r){try{var s=t[i](r),o=s.value}catch(e){return void n(e)}return s.done?void e(o):Promise.resolve(o).then(function(e){a("next",e)},function(e){a("throw",e)})}return a("next")})}}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _asyncToGenerator(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,n){function a(i,r){try{var s=t[i](r),o=s.value}catch(e){return void n(e)}return s.done?void e(o):Promise.resolve(o).then(function(e){a("next",e)},function(e){a("throw",e)})}return a("next")})}}function _asyncToGenerator(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,n){function a(i,r){try{var s=t[i](r),o=s.value}catch(e){return void n(e)}return s.done?void e(o):Promise.resolve(o).then(function(e){a("next",e)},function(e){a("throw",e)})}return a("next")})}}function _asyncToGenerator(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,n){function a(i,r){try{var s=t[i](r),o=s.value}catch(e){return void n(e)}return s.done?void e(o):Promise.resolve(o).then(function(e){a("next",e)},function(e){a("throw",e)})}return a("next")})}}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function _asyncToGenerator(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,n){function a(i,r){try{var s=t[i](r),o=s.value}catch(e){return void n(e)}return s.done?void e(o):Promise.resolve(o).then(function(e){a("next",e)},function(e){a("throw",e)})}return a("next")})}}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function _asyncToGenerator(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,n){function a(i,r){try{var s=t[i](r),o=s.value}catch(e){return void n(e)}return s.done?void e(o):Promise.resolve(o).then(function(e){a("next",e)},function(e){a("throw",e)})}return a("next")})}}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _asyncToGenerator(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,n){function a(i,r){try{var s=t[i](r),o=s.value}catch(e){return void n(e)}return s.done?void e(o):Promise.resolve(o).then(function(e){a("next",e)},function(e){a("throw",e)})}return a("next")})}}!function(){"use strict";function e(e,t,n,a){e.registerFeaturesManifest(),t.registerFeaturesManifest(),n.registerFeaturesManifest(),a.registerFeaturesManifest()}e.$inject=["c8yModbusDevice","c8yCanbusDevice","c8yOPCUADevice","c8yActilityDevice"],angular.module("c8y.deviceDatabase4",[]).run(e)}(),function(){"use strict";function e(e){function t(e){var t=[],a=_.get(e,"c8y_CoilStatus"),i=_.get(e,"c8y_RegisterStatus");return a&&(t.push(["c8y_CoilStatus"]),n(a,["c8y_CoilStatus"],t)),i&&(t.push(["c8y_RegisterStatus"]),n(i,["c8y_RegisterStatus"],t)),t}function n(e,t,a){_.isPlainObject(e)&&_.forEach(e,function(e,i){var r=t.concat([i]);a.push(r),n(e,r,a)})}function a(t){return{keyPath:t,label:e("humanize2")(_.last(t)),id:"c8yFieldbusProps!!"+t.join("!!"),fieldbus:!0}}var i={generatePaths:t,createProperty:a};return i}e.$inject=["$filter"],angular.module("c8y.deviceDatabase4").factory("fieldbusPropertyGenerator",e)}();var _extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e};!function(){"use strict";function e(e,t,n,a,i,r,s,o,l,c){function u(e,t){var n=void 0,a=_.get(e,"meta.type");if(a){var i=_.get(e,"input");if(a===Nt.DISCRETE_IO)n=l(i?"Discrete input":"Coil (discrete output)");else if(a===Nt.REGISTER)if(i)n=l("Input register");else{var r=vt(t);n=_.get(r,"holdingRegisters.elementTypeLabel",l("Holding register"))}}return n}function d(){return Gt}function m(){var e=qt.common,t=qt.deviceType;return _.cloneDeep(_extends({},e,t))}function p(t){var n=_.at(t,kt),a=_.head(n),i=a&&a.match(/\/inventory\/managedObjects\/(\d+)/),r=_.nth(i,1);return r?wt(r):e.resolve(null)}function v(e){return _.flow([g,f,y,T])(e)}function g(e){return _.forEach(e.c8y_Coils,function(e){!e.enumValues&&e.statusMapping&&_.isArray(e.statusMapping.enumValues)&&(e.enumValues={0:e.statusMapping.enumValues[0],1:e.statusMapping.enumValues[1]},_.unset(e,"statusMapping.enumValues")),_.isUndefined(e.input)&&(e.input=qt.discreteOutput.input)}),e}function f(e){return _.forEach(e.c8y_Registers,function(e){e.startBit=e.startBit||qt.register.startBit,e.noBits=e.noBits||qt.register.noBits,e.signed=e.signed||qt.register.signed,!e.unit&&e.measurementMapping&&e.measurementMapping.unit&&(e.unit=e.measurementMapping.unit,_.unset(e,"measurementMapping.unit")),_.isUndefined(e.input)&&(e.input=qt.holdingRegister.input)}),e}function y(e){return e.fieldbusType=gt(e),e}function b(){return o({component:"c8yImportDeviceTypeModal"}).then(St)}function h(e){if(!e.type){var t=vt(e);e.type=_.get(t,"type",Pt)}return e}function T(e){return _.set(e,$t,{})}function R(e){return"canbus"===e.fieldbusType&&(e.c8y_useServerTime=!0),e}function I(e){return e.c8y_Coils=_.map(e.c8y_Coils,D),e.c8y_Registers=_.map(e.c8y_Registers,D),e}function D(e){return e.id||(e.id=String(Math.random()).substr(2)),e}function x(e){return e.c8y_Coils=_.orderBy(e.c8y_Coils,["number","input"]),e.c8y_Registers=_.orderBy(e.c8y_Registers,["startBit","number","input"]),e}function w(e){var t=vt(e),n=_.get(t,"configuration.messageIdConfiguration");return n&&(e.c8y_MessageTypes=S(e)),e}function S(e){var t=["c8y_Registers","c8y_Coils"];return _.reduce(t,function(t,n){return _.merge(t,M(e,n))},{})}function M(e,t){var n=_.groupBy(e[t],"messageTypeId"),a=_.mapValues(n,function(n){return _.map(n,function(n){return _.indexOf(e[t],n)})});return _.reduce(a,function(e,n,a){return e[a]={},e[a][t]=n,e},{})}function E(e){var t=A(e);return _.set(e,"com_cumulocity_model_smartrest_SmartRestTemplate",t)}function A(e){return{requestTemplates:_.flattenDeep([C(e),V(e),k(e),P(e)]),responseTemplates:_.flattenDeep([Y(),X(),K(),Z()])}}function C(e){return{msgId:100,method:"PUT",contentType:"application/vnd.com.nsn.cumulocity.managedObject+json",placeholder:Ft,resourceUri:"/inventory/managedObjects/"+Ft,templateString:z([{key:"c8y_CoilStatus",value:new Q(O(e.c8y_Coils).map(function(e){return{key:e.name,value:Ft,raw:!0}}).value())}]),values:["UNSIGNED"].concat(_toConsumableArray(O(e.c8y_Coils).map(function(){return"UNSIGNED"}).value()))}}function V(e){return{msgId:101,method:"PUT",contentType:"application/vnd.com.nsn.cumulocity.managedObject+json",placeholder:Ft,resourceUri:"/inventory/managedObjects/"+Ft,templateString:z([{key:"c8y_RegisterStatus",value:new Q(O(e.c8y_Registers).map(function(e){return{key:e.name,value:Ft,raw:!0}}).value())}]),values:["UNSIGNED"].concat(_toConsumableArray(O(e.c8y_Registers).map(function(){return"NUMBER"}).value()))}}function O(e){return _(e).filter("statusMapping.status")}function k(){return[$(102,"EXECUTING"),$(103,"SUCCESSFUL"),$(104,"FAILED")]}function $(e,t){return{msgId:e,method:"PUT",contentType:"application/vnd.com.nsn.cumulocity.operation+json",placeholder:Ft,resourceUri:"/devicecontrol/operations/"+Ft,templateString:z({status:t}),values:["UNSIGNED"]}}function P(e){return _.flow([F,q,G])({deviceType:e,msgId:300,templates:[]}).templates}function F(e){var t=e.deviceType,n=e.msgId,a=e.templates,i=_.filter(t.c8y_Coils,"alarmMapping"),r=_.filter(t.c8y_Registers,"alarmMapping"),s=n;return _.forEach(i,function(e){a.push(N(s,t,e.alarmMapping,B(e))),e.alarmMapping.raiseAlarmTemplate=s,s+=1}),_.forEach(r,function(e){a.push(N(s,t,e.alarmMapping,U(e))),e.alarmMapping.raiseAlarmTemplate=s,s+=1}),{deviceType:t,templates:a,msgId:s}}function N(e,t,n,a){return{msgId:e,method:"POST",contentType:"application/vnd.com.nsn.cumulocity.alarm+json",accept:"application/vnd.com.nsn.cumulocity.alarm+json",placeholder:Ft,resourceUri:"/alarm/alarms",templateString:z([{key:"source",value:{id:Ft}},{key:"type",value:n.type},{key:"status",value:r.status.ACTIVE},{key:"severity",value:n.severity},{key:"time",value:Ft},{key:"text",value:n.text},{key:"c8y_ModbusSource",value:a.c8y_ModbusSource}]),values:["UNSIGNED",L(t)]}}function B(e){return{c8y_ModbusSource:{coil:_.pick(e,"input","number")}}}function U(e){return{c8y_ModbusSource:{register:_.pick(e,["input","number","startBit","noBits"])}}}function q(e){var t=e.deviceType,n=e.msgId,a=e.templates,i=_([].concat(_toConsumableArray(t.c8y_Coils),_toConsumableArray(t.c8y_Registers))).filter("measurementMapping").groupBy("measurementMapping.type").value(),r=n;return _.forEach(i,function(e,n){var i=_.map(e,function(e){return _.set(e.measurementMapping,"unit",e.unit||e.measurementMapping.unit)});a.push(j(r,t,n,i)),_.forEach(i,function(e){e.sendMeasurementTemplate=r,_.unset(e,"unit")}),r+=1}),{deviceType:t,templates:a,msgId:r}}function j(e,t,n,a){return{msgId:e,method:"POST",contentType:"application/vnd.com.nsn.cumulocity.measurement+json",placeholder:Ft,resourceUri:"/measurement/measurements",templateString:z(function(){var e=n,t=_defineProperty({source:{id:Ft},time:Ft,type:e},e,{});return _.forEach(a,function(n){var a=n.series,i=n.unit;t[e][a]={value:"%n",unit:i}}),t}()),values:["UNSIGNED",L(t)].concat(_toConsumableArray(_.map(a,function(){return"NUMBER"})))}}function G(e){var t=e.deviceType,n=e.msgId,a=e.templates,i=[].concat(_toConsumableArray(t.c8y_Coils),_toConsumableArray(t.c8y_Registers)),r=n;return _.forEach(i,function(e){_.isUndefined(e.eventMapping)||(a.push(H(r,t,e,e.eventMapping)),e.eventMapping.eventTemplate=r,r+=1)}),{deviceType:t,templates:a,msgId:r}}function H(e,t,n,a){return{msgId:e,method:"POST",contentType:"application/vnd.com.nsn.cumulocity.event+json",placeholder:Ft,resourceUri:"/event/events",templateString:z([{key:"source",value:{id:Ft}},{key:"time",value:Ft},{key:"type",value:a.type},{key:"text",value:a.text},{key:n.name,value:Ft}]),values:["UNSIGNED",L(t),"STRING"]}}function L(e){return e.c8y_useServerTime?"NOW":"DATE"}function z(e,t){var n=void 0;return e instanceof Q?n=W(e.kvObj):_.isArray(e)?n=W(e):_.isObjectLike(e)&&(n=angular.toJson(e)),n=n.replace(/"%n"/g,t||Ft)}function W(e){var t=_.map(e,J);return"{"+t.join(",")+"}"}function J(e){var t=e.key,n=e.value,a=e.raw,i={},r=void 0;return n instanceof Q?(i[t]=":::INNER_OBJECT_STRING:::",r=JSON.stringify(i).replace('":::INNER_OBJECT_STRING:::"',W(n.kvObj))):a?(i[t]=":::RAW_VALUE:::",r=JSON.stringify(i).replace('":::RAW_VALUE:::"',n)):(i[t]=n,r=JSON.stringify(i)),r.substr(1,r.length-2)}function Q(e){this.kvObj=e}function Y(){return{msgId:200,condition:"$.c8y_SetCoil",pattern:["$.id","$.c8y_SetCoil.address","$.c8y_SetCoil.input","$.c8y_SetCoil.coil","$.c8y_SetCoil.value"]}}function X(){return{msgId:201,condition:"$.c8y_SetRegister",pattern:["$.id","$.c8y_SetRegister.ipAddress","$.c8y_SetRegister.address","$.c8y_SetRegister.input","$.c8y_SetRegister.register","$.c8y_SetRegister.startBit","$.c8y_SetRegister.noBits","$.c8y_SetRegister.value"]}}function K(){return{msgId:202,condition:"$.c8y_ModbusDevice",pattern:["$.id","$.deviceId","$.c8y_ModbusDevice.id","$.c8y_ModbusDevice.address","$.c8y_ModbusDevice.type","$.c8y_ModbusDevice.protocol"]}}function Z(){return{msgId:203,condition:"$.c8y_ModbusSource",pattern:["$.id"]}}function ee(e){var t=e.name+".json",n="application/json",a=JSON.stringify(te(e),null,2),i=new Blob([a],{type:n});window.saveAs(i,t)}function te(e){return e.c8y_ModbusDeviceTypeInfo=ne(e),e.c8y_Coils=_.map(e.c8y_Coils,ae),e.c8y_Registers=_.map(e.c8y_Registers,ae),_.pick(e,["c8y_ModbusDeviceTypeInfo","c8y_Coils","c8y_Registers","c8y_useServerTime","c8y_MessageIdConfiguration"])}function ne(e){return _.omit(_extends({},_.get(e,"c8y_ModbusDeviceTypeInfo",{}),{name:e.name,minFieldbusUI:Ot,fieldbusType:e.fieldbusType}),["id","category","description"])}function ae(e){return e.eventMapping&&(e.eventMapping=_.omit(e.eventMapping,["eventTemplate"])),e.alarmMapping&&(e.alarmMapping=_.omit(e.alarmMapping,["raiseAlarmTemplate"])),e.measurementMapping&&(e.measurementMapping=_.omit(e.measurementMapping,["sendMeasurementTemplate"])),_.omit(e,["id","originalName","originalNumber","originalStartBit","meta"])}function ie(){var e=Tt();return e&&_.map(e)}function re(e){return _.filter(e,function(e){var t=e.minFieldbusUI;return Ot>=t})}function se(e){var t=_.get(e,"c8y_Coils",[]),n=_.get(e,"c8y_Registers",[]);return _.union(_.map(t,le),_.map(n,Te))}function oe(e){if(e)return e.c8y_Coils=_.map(e.c8y_Coils,le),e}function le(e){return e.meta=e.meta||{},_.flow([ce,ue,de,me,pe])(e)}function ce(e){return e.meta.type=e.meta.type||Nt.DISCRETE_IO,e}function ue(e){return e.meta.enumType=e.meta.enumType||!!e.enumValues,e.meta.enumValues=e.meta.enumValues||e.enumValues&&_.map(e.enumValues,De),e}function de(e){var t=_.get(e,"statusMapping.status");return e.meta.showStatus=e.meta.showStatus||"read"===t||"write"===t,e.meta.updateStatus=e.meta.updateStatus||"write"===t,e}function me(e){var t=_.get(e,"alarmMapping.raiseAlarmTemplate");return e.meta.raiseAlarm=e.meta.raiseAlarm||!_.isUndefined(t),e}function pe(e){var t=_.get(e,"eventMapping.eventTemplate");return e.meta.sendEvent=e.meta.sendEvent||!_.isUndefined(t),e}function ve(e){var t=e;return t.meta&&(t=_.flow([ge,fe,ye,be,he])(t),_.unset(t,"meta")),t}function ge(e){return e.meta.type=void 0,e}function fe(e){return e.meta.enumType?(e.enumValues={},_.forEach(e.meta.enumValues,function(t){var n=t.value,a=t.label;e.enumValues[n]=a})):e.enumValues=void 0,e}function ye(e){return e.meta.showStatus||e.meta.updateStatus?(e.statusMapping=e.statusMapping||{},e.meta.showStatus&&(e.statusMapping.status="read"),e.meta.updateStatus&&(e.statusMapping.status="write")):e.statusMapping=void 0,e}function be(e){return e.meta.raiseAlarm?(e.alarmMapping=e.alarmMapping||{},e.alarmMapping.raiseAlarmTemplate=null):e.alarmMapping=void 0,e}function he(e){return e.meta.sendEvent?(e.eventMapping=e.eventMapping||{},e.eventMapping.eventTemplate=null):e.eventMapping=void 0,e}function _e(e){if(e)return e.c8y_Registers=_.map(e.c8y_Registers,Te),e}function Te(e){return e.meta=e.meta||{},_.flow([Re,Ie,xe,we,Se,Me,Ee,Ae])(e)}function Re(e){return e.meta.type=e.meta.type||Nt.REGISTER,e}function Ie(e){return e.meta.enumType=e.meta.enumType||!!e.enumValues,e.meta.enumValues=e.meta.enumValues||e.enumValues&&_.map(e.enumValues,De),e}function De(e,t){return{label:e,value:parseFloat(t)}}function xe(e){var t=_.get(e,"statusMapping.status");return e.meta.showStatus=e.meta.showStatus||"read"===t||"write"===t,e.meta.updateStatus=e.meta.updateStatus||"write"===t,e}function we(e){var t=_.get(e,"measurementMapping.sendMeasurementTemplate");return e.meta.sendMeasurement=e.meta.sendMeasurement||!_.isUndefined(t),e}function Se(e){var t=_.get(e,"alarmMapping.raiseAlarmTemplate");return e.meta.raiseAlarm=e.meta.raiseAlarm||!_.isUndefined(t),e}function Me(e){var t=_.get(e,"eventMapping.eventTemplate");return e.meta.sendEvent=e.meta.sendEvent||!_.isUndefined(t),e}function Ee(e){return e.meta.sendManagedObjectUpdate=e.meta.sendManagedObjectUpdate||!!e.managedObjectMapping,e}function Ae(e){return e.meta.valuesRange=e.meta.valuesRange||Ce(e),e}function Ce(e){var t=e.decimalPlaces,n=Ve(e.multiplier*Math.pow(10,-e.decimalPlaces)/e.divisor),a=Ve((e.signed?-Math.pow(2,e.noBits-1):0)*n),i=Ve((e.signed?Math.pow(2,e.noBits-1)-1:Math.pow(2,e.noBits)-1)*n);return{base:{decimalPlaces:t,step:n,min:a,max:i},custom:{decimalPlaces:t,step:n,min:Math.max(a,e.min||a),max:Math.min(i,e.max||i)}}}function Ve(e){var t=Math.pow(10,10);return Math.round(e*t)/t}function Oe(e){var t=e;return e.meta&&(t=_.flow([ke,$e,Pe,Fe,Ne,Be,Ue,qe])(e),_.unset(t,"meta")),t}function ke(e){return e.meta.type=void 0,e}function $e(e){return e.meta.enumType?(e.enumValues={},_.forEach(e.meta.enumValues,function(t){var n=t.value,a=t.label;e.enumValues[n]=a})):e.enumValues=void 0,e}function Pe(e){return e.meta.showStatus||e.meta.updateStatus?(e.statusMapping=e.statusMapping||{},e.meta.showStatus&&(e.statusMapping.status="read"),e.meta.updateStatus&&(e.statusMapping.status="write")):e.statusMapping=void 0,e}function Fe(e){return e.meta.sendMeasurement?(e.measurementMapping=e.measurementMapping||{},e.measurementMapping.sendMeasurementTemplate=null):e.measurementMapping=void 0,e}function Ne(e){return e.meta.raiseAlarm?(e.alarmMapping=e.alarmMapping||{},e.alarmMapping.raiseAlarmTemplate=null):e.alarmMapping=void 0,e}function Be(e){return e.meta.sendEvent?(e.eventMapping=e.eventMapping||{},e.eventMapping.eventTemplate=null):e.eventMapping=void 0,e}function Ue(e){return e.meta.sendManagedObjectUpdate?e.managedObjectMapping=e.managedObjectMapping||{}:e.managedObjectMapping=void 0,e}function qe(e){return e.meta.valuesRange=void 0,e}function je(e){e.c8y_Registers=[],e.c8y_Coils=[]}function Ge(e){var t=_.compact(ze(e));return _.head(t)}function He(e,t,n){return _(e).chain().map(function(e){return{score:Le(e,t,n),element:e}}).reject(function(e){return _.isUndefined(e.score)}).orderBy("score").head().get("element").value()}function Le(e,t,n){var a=e.meta.type.value===n,i=ze(e),r=_.findIndex(i,_.negate(_.isUndefined)),s=_.indexOf(i,t);return a&&s>=0?r-s:void 0}function ze(e){return[We(e),Je(e),Qe(e),Ye(e)]}function We(e){return _.get(e,"id")}function Je(e){return Xe(e,["input","number","startBit"])}function Qe(e){return Xe(e,["input","number"])}function Ye(e){return Xe(e,["number"])}function Xe(e,t){var n=_.map(t,_.propertyOf(e)),a=_.every(n,_.negate(_.isUndefined));if(a)return n.join(",")}function Ke(e){return _(e.c8y_Coils).reject("input").groupBy(nt).value()}function Ze(e){return _(e.c8y_Coils).filter("input").groupBy(nt).value()}function et(e){return _(e.c8y_Registers).reject("input").groupBy(nt).value()}function tt(e){return _(e.c8y_Registers).filter("input").groupBy(nt).value()}function nt(e){return e.category||""}function at(){return _.cloneDeep(_extends({},qt.common,qt.element,qt.discreteIO,qt.discreteOutput))}function it(){return _.cloneDeep(_extends({},qt.common,qt.element,qt.discreteIO,qt.discreteInput))}function rt(e){return"canbus"===e.fieldbusType?_.cloneDeep(_extends({},qt.common,qt.element,qt.register,qt.canbusRegister,qt.holdingRegister)):_.cloneDeep(_extends({},qt.common,qt.element,qt.register,qt.holdingRegister))}function st(){return _.cloneDeep(_extends({},qt.common,qt.element,qt.register,qt.inputRegister))}function ot(e,t){return o({component:"c8yConfigureDiscreteIOModal",title:lt(e),resolve:_extends({title:function(){return lt(e)}},dt(e,t.c8y_Coils,t))})}function lt(e){return e.input?e.name?c.getString('Edit discrete input: "{{name}}"',e):l("New discrete input"):e.name?c.getString('Edit coil: "{{name}}"',e):l("New coil")}function ct(e,t){return o({component:"c8yConfigureRegisterModal",resolve:_extends({title:function(){return ut(e,t)}},dt(e,t.c8y_Registers,t))})}function ut(e,t){var n=vt(t);return e.input?e.name?c.getString('Edit input register: "{{name}}"',e):l("New input register"):e.name?c.getString(_.get(n,"holdingRegisters.editRegisterModalTitle",l('Edit holding register: "{{name}}"')),e):_.get(n,"holdingRegisters.newRegisterModalTitle",l("New holding register"))}function dt(e,t,n){return{element:function(){return _.cloneDeep(mt(e))},existingElements:function(){return _.cloneDeep(t)},existingCategories:function(){return _.cloneDeep(pt(n))},deviceType:function(){return _.cloneDeep(n)},fieldbusType:function(){return gt(n)},features:function(){return vt(n)}}}function mt(e){if(e)return _extends({},e,{meta:{original:_.cloneDeep(e)}})}function pt(e){return _([].concat(_toConsumableArray(_.get(e,"c8y_Coils",[])),_toConsumableArray(_.get(e,"c8y_Registers",[])))).filter("category").map("category").uniq().map(function(e){return{name:e}}).value()}function vt(e){return _.find(Gt,{fieldbusType:gt(e)})}function gt(e){return e.fieldbusType||"modbus"}function ft(e){e.meta.enumValues=e.meta.enumValues||[],e.meta.enumValues.push({value:null,label:null})}function yt(e,t){e.meta.enumValues=_.without(e.meta.enumValues,t)}function bt(e,t){var n=e.startBit+e.noBits-1,a=t.startBit+t.noBits-1;return Math.max(e.startBit,t.startBit)<=Math.min(n,a)}function ht(e){return o({component:"c8ySelectFieldbusPropertyModal",resolve:{modalParams:function(){return _.defaults(e,{})}}})}function _t(e){var t=(Tt()||{})[e];return t&&_.clone(t._item)}function Tt(){return _.get(window,"c8y.collections.devicetypes")}function Rt(e){return window.btoa(JSON.stringify(e,null,2))}function It(e){return e.id+".json"}function Dt(e){return _.some(["c8y_ModbusDevice","c8y_CanDevice","c8y_OPCUADevice","c8y_OPCUAGateway"],function(t){return _.has(e,t)})}var xt=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(t){var n,a,r,s;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=!0,a={},r={__and:[{__or:[{__has:$t},{type:Pt}]}]},t&&(r.__and=[].concat(_toConsumableArray(r.__and),[t])),e.next=6,i.listQuery(r,a,n);case 6:return s=e.sent,e.abrupt("return",_.map(s,v));case 8:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),wt=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(t){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=a,e.next=3,i.detail(t);case 3:return e.t1=e.sent,n=e.t0.getResData.call(e.t0,e.t1),e.abrupt("return",v(n));case 6:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),St=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(t){var n,r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=_.flow([h,T,R,I,x,w,E])(t),!t.id){e.next=3;break}return e.abrupt("return",i.save(n));case 3:return e.t0=a,e.next=6,i.createConfirm(n);case 6:return e.t1=e.sent,r=e.t0.getResData.call(e.t0,e.t1),e.abrupt("return",Mt(r));case 9:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),Mt=function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function t(n){var a;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,s.createIdentity(n,{type:"c8y_SmartRestDeviceIdentifier",externalId:n.name},{silentError:!0});case 3:return t.abrupt("return",t.sent);case 6:return t.prev=6,t.t0=t.catch(0),a=e.reject.bind(e,{errorMessage:t.t0.data.message}),t.abrupt("return",i.remove(n).then(a,a));case 10:case"end":return t.stop()}},t,this,[[0,6]])}));return function(e){return t.apply(this,arguments)}}(),Et=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(){var n,i;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=ie()){e.next=8;break}return i=Ut+"/index.json",e.t0=a,e.next=6,t.get(i);case 6:e.t1=e.sent,n=e.t0.getResData.call(e.t0,e.t1);case 8:return e.abrupt("return",re(n));case 9:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}(),At=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(n){var a,i,r,s,o,l;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return a=n+".json",i="predefinedDeviceTypesUrl/"+a,e.next=4,t.get(i);case 4:r=e.sent,s=JSON.stringify(r.data,null,2),o=r.headers("Content-Type"),l=new Blob([s],{type:o}),window.saveAs(l,a);case 9:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),Ct=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(t){var n,a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.id||t,e.next=3,Vt(n);case 3:return a=e.sent,e.abrupt("return",Rt(a));case 5:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),Vt=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(n){var i,r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(i=_t(n)){e.next=8;break}return r=Ut+"/"+n+".json",e.t0=a,e.next=6,t.get(r);case 6:return e.t1=e.sent,e.abrupt("return",e.t0.getResData.call(e.t0,e.t1));case 8:return e.abrupt("return",i);case 9:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),Ot=n.has("FIELDBUS_UI_VERSION")?n.get("FIELDBUS_UI_VERSION"):4,kt=["c8y_ModbusDevice.type","c8y_CanBus.type","c8y_OPCUADevice.type"],$t="c8y_IsDeviceType",Pt="c8y_ModbusDeviceType",Ft="%%",Nt=a.createEnum(["DISCRETE_IO","REGISTER"]),Bt=a.createEnum([{name:"FPORT",label:"FPort"},{name:"PAYLOAD",label:"Payload"}]),Ut=a.dataFilePath("devicetypes"),qt={common:{name:null},deviceType:{c8y_Coils:[],c8y_Registers:[]},element:{number:null},discreteIO:{},discreteOutput:{input:!1},discreteInput:{input:!0},register:{multiplier:1,divisor:1,offset:0,decimalPlaces:0,startBit:0,noBits:16,unit:"",signed:!1},canbusRegister:{noBits:64,offset:0},holdingRegister:{input:!1},inputRegister:{input:!0}},jt={discreteIO:{enumValues:[{value:0,label:"0"},{value:1,label:"1"}]}},Gt=[],Ht={ElementType:Nt,MessageIdSources:Bt,metaDefaults:jt,featuresManifests:Gt,getElementTypeLabel:u,getDeviceTypesFeatures:d,getDeviceTypeFeatures:vt,getEmptyDeviceType:m,getAvailableDeviceTypes:xt,getDeviceTypeFromDevice:p,getDeviceType:wt,save:St,exportDeviceTypeAndSaveAs:ee,importDeviceTypeWithUI:b,getPredefinedDeviceTypeInfos:Et,getPredefinedDeviceType:Vt,downloadPredefinedDeviceTypeAndSaveAs:At,upgradeDeviceType:v,getElementsWithMeta:se,addDiscreteIOsMeta:oe,addDiscreteIOMeta:le,removeDiscreteIOMeta:ve,addRegistersMeta:_e,addRegisterMeta:Te,removeRegisterMeta:Oe,removeAllElements:je,getElementRefId:Ge,findElementBestMatchingRefId:He,getDiscreteOutputsCategorized:Ke,getDiscreteInputsCategorized:Ze,getHoldingRegistersCategorized:et,getInputRegistersCategorized:tt,getEmptyDiscreteOutput:at,getEmptyDiscreteInput:it,getEmptyHoldingRegister:rt,getEmptyInputRegister:st,editDiscreteIOWithUI:ot,editRegisterWithUI:ct,addEmptyEnumValue:ft,removeEnumValue:yt,areOverlappingRegisters:bt,getValuesRange:Ce,openFieldbusSelector:ht,downloadPredefinedDeviceTypeHref:Ct,predefinedDeviceTypeHrefFilename:It,isFieldbusDevice:Dt};return Ht}e.$inject=["$q","$http","$injector","c8yBase","c8yInventory","c8yAlarms","c8yIdentity","c8yModal","gettext","gettextCatalog"],angular.module("c8y.deviceDatabase4").factory("c8yDeviceDatabase",e)}(),function(){"use strict";function e(e,t,n,a,i,r,s,o,l,c,u){function d(){r.featuresManifests.push(A)}function m(e,t,n){return{deviceId:e.id,description:u.getString("Added new child device to {{name}} ({{id}})",e),c8y_ModbusDevice:{id:n.id,name:n.name,address:n.c8y_ModbusDevice.address,ipAddress:n.c8y_ModbusDevice.ipAddress,type:"/inventory/managedObjects/"+t.id,protocol:n.c8y_ModbusDevice.protocol}}}function p(e){return e.changePending}function v(e,t){var n=E[t.meta.type.value];return e&&e[n]&&parseFloat(e[n][t.name])}function g(e,t){var n=v(e,t);return t.meta.enumType&&(n=t.meta.enumValues[n].label),n}function f(e,t){var n=!s.isOpcua(e),a=t.statusMapping;return n&&!e.c8y_ModbusReadOnlyDevice&&a&&"write"===a.status}function y(e,t,n){var a=t.meta.type;return a===S?b(e,t,n):a===M?h(e,t,n):void 0}function b(e,t,n){return{deviceId:e.id,description:u.getString("{{name}} status changed to {{label}}",{name:t.name,label:n.label}),c8y_SetCoil:{address:e.c8y_ModbusDevice.address,input:t.input,coil:t.number,value:n.value}}}function h(e,t,n){return{deviceId:e.id,description:u.getString("{{name}} value changed to {{value}}{{unit}}",{name:t.name,value:n.label||n.value,unit:!n.label&&t.unit?" "+t.unit:""}),c8y_SetRegister:{ipAddress:e.c8y_ModbusDevice.ipAddress,address:e.c8y_ModbusDevice.address,input:t.input,register:t.number,startBit:t.startBit,noBits:t.noBits,value:n.value}}}function _(e,t,n){var a=t.meta.type;a===S?(e.c8y_CoilStatus=e.c8y_CoilStatus||{},e.c8y_CoilStatus[t.name]=n.value):a===M&&(e.c8y_RegisterStatus=e.c8y_RegisterStatus||{},e.c8y_RegisterStatus[t.name]=n.value)}var T,R=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(n,a){var r,s;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,I(n,a);case 2:return r=e.sent,e.t0=t,e.next=6,i.createConfirm(r);case 6:return e.t1=e.sent,s=e.t0.getResData.call(e.t0,e.t1),e.next=10,i.addChildDevice(n,s);case 10:return s.owner=n.owner,e.next=13,i.save(s);case 13:return e.abrupt("return",o.create(m(n,a.deviceType,s)));case 14:case"end":return e.stop()}},e,this)}));return function(t,n){return e.apply(this,arguments)}}(),I=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(t,n){var i;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,a.current();case 2:return i=e.sent,e.abrupt("return",{name:n.name,type:n.deviceType.name,c8y_IsDevice:{},c8y_ModbusDevice:{address:n.address,ipAddress:n.ipAddress,type:"/inventory/managedObjects/"+n.deviceType.id,protocol:n.protocol},owner:i.id});case 4:case"end":return e.stop()}},e,this)}));return function(t,n){return e.apply(this,arguments)}}(),D=function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function t(n,a,i){var r,s;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(!f(n,a)){t.next=8;break}return r=y(n,a,i),a.changePending=!0,t.next=5,x(r);case 5:return s=t.sent,s.status===o.status.SUCCESSFUL?(_(n,a,i),a.changePending=!1):s.status===o.status.FAILED&&(a.changePending=!1),t.abrupt("return",s);case 8:return t.abrupt("return",e.reject());case 9:case"end":return t.stop()}},t,this)}));return function(e,n,a){return t.apply(this,arguments)}}(),x=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(t){var n,a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,o.createWithNotifications(t);case 2:return n=e.sent,n.created.then(function(){return l.success(u.getString('Operation "{{description | translate}}" has been created!',t))}),e.next=6,n.completed;case 6:return a=e.sent,a.status===o.status.SUCCESSFUL?l.success(u.getString('Operation "{{description | translate}}" has been completed!',t)):a.status===o.status.FAILED&&(a.failureReason?l.danger(u.getString('Operation "{{description | translate}}" has failed because of reason: "{{failureReason}}"!',a)):l.danger(u.getString('Operation "{{description | translate}}" has failed!',a))),e.abrupt("return",a);case 9:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),w=r.ElementType,S=w.DISCRETE_IO,M=w.REGISTER,E=(T={},_defineProperty(T,S.value,"c8y_CoilStatus"),_defineProperty(T,M.value,"c8y_RegisterStatus"),T),A={label:c("Modbus"),fieldbusType:"modbus",discreteOutputs:{functionalities:{showStatus:!0,updateStatus:!0}},discreteInputs:{functionalities:{showStatus:!0,updateStatus:!0}},holdingRegisters:{number:!0,startBit:{max:15},noBits:{max:16},multiplier:{min:1,step:1},divisor:!0,decimalPlaces:!0,options:{enumType:!0},functionalities:{showStatus:!0,updateStatus:!0}},inputRegisters:{number:!0,startBit:{max:15},noBits:{
max:16},decimalPlaces:!0,options:{enumType:!0},functionalities:{showStatus:!0,updateStatus:!0}},options:{serverTime:!0}},C={registerFeaturesManifest:d,create:R,canUpdateElement:f,isElementChangePending:p,getCurrentElementValue:v,getCurrentElementValueFormatted:g,updateElement:D};return C}e.$inject=["$q","c8yBase","c8yInventory","c8yUser","c8yDevices","c8yDeviceDatabase","c8yOPCUADevice","c8yDeviceControl","c8yAlert","gettext","gettextCatalog"],angular.module("c8y.deviceDatabase4").factory("c8yModbusDevice",e)}(),function(){"use strict";function e(e,t,n,a,i,r,s,o){function l(){r.featuresManifests.push(m)}function c(e,t,n){return{deviceId:e.id,description:o.getString("Added new child device to {{name}} ({{id}})",e),c8y_CanDevice:{id:n.id,name:n.name,type:"/inventory/managedObjects/"+t.id}}}var u=function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function t(n,r){var s,o;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,d(n,r);case 2:return s=t.sent,t.t0=e,t.next=6,a.createConfirm(s);case 6:return t.t1=t.sent,o=t.t0.getResData.call(t.t0,t.t1),t.next=10,a.addChildDevice(n,o);case 10:return o.owner=n.owner,t.next=13,a.save(o);case 13:return t.abrupt("return",i.create(c(n,r.deviceType,o)));case 14:case"end":return t.stop()}},t,this)}));return function(e,n){return t.apply(this,arguments)}}(),d=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(t,a){var i;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n.current();case 2:return i=e.sent,e.abrupt("return",{name:t.name+" - "+a.deviceType.name,type:a.deviceType.name,c8y_IsDevice:{},c8y_CanDevice:{type:"/inventory/managedObjects/"+a.deviceType.id},owner:i.id});case 4:case"end":return e.stop()}},e,this)}));return function(t,n){return e.apply(this,arguments)}}(),m={label:s("CAN Bus"),fieldbusType:"canbus",options:!1,discreteOutputs:!1,discreteInputs:!1,holdingRegisters:{number:{label:s("Message ID"),useHex:!0},startBit:{max:63},noBits:{max:64},multiplier:{min:1,step:1},divisor:!0,decimalPlaces:!0,offset:{min:Number.MIN_SAFE_INTEGER||-(Math.pow(2,53)-1),max:Number.MAX_SAFE_INTEGER||Math.pow(2,53)-1,step:1},options:{enumType:!0},functionalities:{showStatus:!0,updateStatus:!0}},inputRegisters:!1},p={registerFeaturesManifest:l,create:u};return p}e.$inject=["c8yBase","c8yInventory","c8yUser","c8yDevices","c8yDeviceControl","c8yDeviceDatabase","gettext","gettextCatalog"],angular.module("c8y.deviceDatabase4").factory("c8yCanbusDevice",e)}(),function(){"use strict";function e(e,t,n,a,i,r,s,o){function l(){r.featuresManifests.push(v)}function c(e,t,n){return{deviceId:e.id,description:o.getString("Added new child device to {{name}} ({{id}})",e),c8y_OPCUADevice:{id:n.id,name:n.name,browsePath:n.c8y_OPCUADevice.browsePath,type:"/inventory/managedObjects/"+t.id}}}function u(e){return!!(e||{})[p]}var d=function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function t(n,r){var s,o;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,m(n,r);case 2:return s=t.sent,t.t0=e,t.next=6,a.createConfirm(s);case 6:return t.t1=t.sent,o=t.t0.getResData.call(t.t0,t.t1),t.next=10,a.addChildDevice(n,o);case 10:return o.owner=n.owner,t.next=13,a.save(o);case 13:return t.abrupt("return",i.create(c(n,r.deviceType,o)));case 14:case"end":return t.stop()}},t,this)}));return function(e,n){return t.apply(this,arguments)}}(),m=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(t,a){var i;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n.current();case 2:return i=e.sent,e.abrupt("return",{name:a.name,type:a.deviceType.name,c8y_IsDevice:{},c8y_OPCUADevice:{browsePath:a.directoryPath,type:"/inventory/managedObjects/"+a.deviceType.id},owner:i.id});case 4:case"end":return e.stop()}},e,this)}));return function(t,n){return e.apply(this,arguments)}}(),p="c8y_OPCUADevice",v={label:s("OPCUA"),fieldbusType:"opcua",options:!1,discreteOutputs:!1,discreteInputs:!1,holdingRegisters:{sectionTitle:s("Variables"),noRegistersDefinedMessage:s("No variables defined."),elementTypeLabel:s("Variable"),newRegisterModalTitle:s("New variable"),editRegisterModalTitle:s('Edit variable: "{{name}}"'),validation:{invalidName:s("Name should be unique among variables!"),invalidMeasurement:s("Chosen measurement type and series are already used by another variable!")},browsePath:!0,nodeType:!0,attributeType:!0,multiplier:{min:1,step:1},divisor:!0,decimalPlaces:!0,options:{enumType:!0},functionalities:{showStatus:!0,updateStatus:!0}},inputRegisters:!1},g={registerFeaturesManifest:l,create:d,isOpcua:u};return g}e.$inject=["c8yBase","c8yInventory","c8yUser","c8yDevices","c8yDeviceControl","c8yDeviceDatabase","gettext","gettextCatalog"],angular.module("c8y.deviceDatabase4").factory("c8yOPCUADevice",e)}(),function(){"use strict";function e(e,t,n){function a(){return e.isAvailable(r)}var i=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(){var n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,a();case 2:n=e.sent,n&&t.featuresManifests.push(s);case 4:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}(),r={name:"actility-device-provider-agent"},s={label:n("LoRa"),fieldbusType:"actility",type:"c8y_ActilityDeviceType",configuration:{messageIdConfiguration:!0},discreteOutputs:!1,discreteInputs:!1,holdingRegisters:{sectionTitle:n("Values"),noRegistersDefinedMessage:n("No values defined."),newRegisterModalTitle:n("New value"),editRegisterModalTitle:n('Edit value: "{{name}}"'),validation:{invalidName:n("Name should be unique among values!"),invalidMeasurement:n("Chosen measurement type and series are already used by another value in the same message type!")},messageTypeId:!0,startBit:!0,noBits:!0,multiplier:!0,offset:!0,decimalPlaces:!1,options:{bcd:!0,littleEndian:!0},functionalities:{showStatus:!1,updateStatus:!1,raiseAlarm:{alarmStatus:!0},sendEvent:{fragmentType:!0,innerType:!0},sendManagedObjectUpdate:!0}},inputRegisters:!1,options:!1},o={registerFeaturesManifest:i,isAvailable:a};return o}e.$inject=["c8yApplication","c8yDeviceDatabase","gettext"],angular.module("c8y.deviceDatabase4").factory("c8yActilityDevice",e)}(),function(){"use strict";function e(){var e={restrict:"A",require:"ngModel",link:function(e,t,n,a){function i(){var t=a.$modelValue;if(!_.isUndefined(t)){var n=e.$eval(r),i=_(n).chain().filter(_defineProperty({},s,t)).size().lte(1).value();a.$setValidity("unique",i)}}var r=n.uniqueInArray,s=n.uniquePropName;e.$watch(r,i,!0),n.$observe(s,i),e.$watch(function(){return a.$modelValue},i)}};return e}angular.module("c8y.deviceDatabase4").directive("unique",e)}(),function(){"use strict";function e(){var e={restrict:"A",require:"ngModel",link:function(e,t,n,a){function i(e){return!_.isUndefined(e)&&r(e)}function r(t){var n=e.$eval(s);if(n){var a=Math.pow(10,n.decimalPlaces),i=(((t*a).toFixed(6)-(n.min*a).toFixed(6))/(n.step*a).toFixed(6)).toFixed(6);return i>=0&&i%1===0&&t<=n.max}return!1}var s=n.validateValueInRegisterRange;a.$validators["value-in-register-range"]=i,e.$watch(function(){return e.$eval(s)},function(){return a.$validate()},!0)}};return e}angular.module("c8y.deviceDatabase4").directive("validateValueInRegisterRange",e)}(),function(){"use strict";function e(e,t,n,a,i,r,s,o,l,c,u){function d(){r.changeTitle({title:c("Device database")})}function m(e){var t=_.get(e,"id","new");n.path("/device-types/"+t)}function p(e){if(_.isObjectLike(e)){var t=e.errorMessage;t?o.danger(u.getString('Could not import device type due to: "{{errorMessage}}"!',{errorMessage:l.getTranslatedServerMessage(t)})):o.danger(c("Could not import device type!"))}}function v(){return i.getAvailableDeviceTypes()}function g(n){I.deviceTypes||(I.deviceTypes=[]),I.deviceTypes=[].concat(_toConsumableArray(I.deviceTypes),_toConsumableArray(n)),t.paging=n.paging||{refresh:!0},e.$apply()}function f(e){return i.exportDeviceTypeAndSaveAs(e)}var y=function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return d(),t.t0=g,t.next=4,v();case 4:t.t1=t.sent,(0,t.t0)(t.t1),e.$apply();case 7:case"end":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}(),b=function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,i.importDeviceTypeWithUI();case 3:return o.success(c("New device type imported!")),t.next=6,h();case 6:t.next=11;break;case 8:t.prev=8,t.t0=t.catch(0),p(t.t0);case 11:e.$apply();case 12:case"end":return t.stop()}},t,this,[[0,8]])}));return function(){return t.apply(this,arguments)}}(),h=function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function n(){return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return I.deviceTypes=void 0,t.refreshLoading=!0,n.prev=2,n.t0=g,n.next=6,v();case 6:n.t1=n.sent,(0,n.t0)(n.t1);case 8:return n.prev=8,t.refreshLoading=!1,n.finish(8);case 11:e.$apply();case 12:case"end":return n.stop()}},n,this,[[2,,8,11]])}));return function(){return n.apply(this,arguments)}}(),T=function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function n(){return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return t.paging.loading=!0,n.prev=1,n.t0=g,n.next=5,v();case 5:n.t1=n.sent,(0,n.t0)(n.t1);case 7:return n.prev=7,t.paging.loading=!1,n.finish(7);case 10:e.$apply();case 11:case"end":return n.stop()}},n,this,[[1,,7,10]])}));return function(){return n.apply(this,arguments)}}(),R=function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function t(n){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,s({title:c("Confirm delete?"),body:u.getString('Do you really want to remove device type "{{name}}"? Connected devices of this type will become unavailable.',n),status:"danger"});case 3:return t.next=5,a.remove(n);case 5:I.deviceTypes=_.without(I.deviceTypes,n),o.success(c("Device type removed!")),t.next=12;break;case 9:t.prev=9,t.t0=t.catch(0),t.t0&&o.danger(t.t0);case 12:e.$apply();case 13:case"end":return t.stop()}},t,this,[[0,9]])}));return function(e){return t.apply(this,arguments)}}(),I=this;_.assign(I,{$onInit:y,addDeviceType:m,importDeviceType:b,navigateToDetails:m,onClickExport:f,onClickDelete:R}),t.paging={},t.loadNext=T,t.refresh=h}e.$inject=["$rootScope","$scope","$location","c8yInventory","c8yDeviceDatabase","c8yTitle","c8yModal","c8yAlert","c8yLocales","gettext","gettextCatalog"],angular.module("c8y.deviceDatabase4").component("c8yDeviceTypeList",{templateUrl:"core_deviceDatabase4/device-type-list.html",bindings:{},controllerAs:"vm",controller:e})}(),function(){"use strict";function e(e,t,n,a,i){function r(){return n.getPredefinedDeviceTypeInfos()}function s(e){return n.downloadPredefinedDeviceTypeAndSaveAs(e.id)}function o(e,t){T.predefined.info=e,T.predefined.deviceType=t}function l(e){return T.predefined.info===e}function c(t){if(!_.isEmpty(t)){var n=_.head(t),r=new FileReader;r.onload=function(t){var r=t.target;e.$apply(function(){try{var e=JSON.parse(r.result),t=e.c8y_ModbusDeviceTypeInfo,s=_.get(t,"name"),o=_.get(t,"fieldbusType");u(),m(n,e),p(s,o)}catch(e){d(),a.danger(i("Cannot load device type from selected file!"))}})},r.readAsText(n)}}function u(){T.predefined.info=null,T.predefined.deviceType=null}function d(){T.custom.file=null,T.custom.deviceType=null}function m(e,t){T.custom.file=e,T.custom.deviceType=t}function p(e,t){T.newName.edited||(T.newName.value=e),T.fieldbusType=t}function v(){T.newName.edited=!0}function g(){var e=T.predefined,t=T.custom,n=T.newName,a=T.fieldbusType,i=_.cloneDeep(e.deviceType||t.deviceType);i.name=n.value,i.fieldbusType=a,h.close({$value:i})}function f(e){var t=f._cache||{};f._cache=t;var a=t[e.id];return a||(a=n.downloadPredefinedDeviceTypeHref(e).then(function(n){t[e.id]=n}),t[e.id]=a),a.then?"":a}var y=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=[],e.t1=_toConsumableArray(h.predefinedDeviceTypeInfos),e.t2=_toConsumableArray,e.next=5,r();case 5:e.t3=e.sent,e.t4=(0,e.t2)(e.t3),h.predefinedDeviceTypeInfos=e.t0.concat.call(e.t0,e.t1,e.t4),t.$apply();case 9:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}(),b=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(a){var i,r,s,l;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return i=a.id,r=a.name,s=a.fieldbusType,d(),e.next=4,n.getPredefinedDeviceType(i);case 4:l=e.sent,o(a,l),p(r,s),t.$apply();case 8:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),h=this,T={predefined:{info:null,deviceType:null},custom:{file:null,deviceType:null},newName:{value:null,edited:!1}};_.assign(h,{$onInit:y,selection:T,predefinedDeviceTypeInfos:[],downloadPredefinedDeviceType:s,onPredefinedDeviceTypeInfoSelected:b,isPredefinedDeviceTypeInfoSelected:l,onCustomDeviceTypeFileSelected:c,onNewNameEdited:v,import:g,downloadFileName:n.predefinedDeviceTypeHrefFilename,downloadFileHref:f})}e.$inject=["$scope","$rootScope","c8yDeviceDatabase","c8yAlert","gettext"],angular.module("c8y.deviceDatabase4").component("c8yImportDeviceTypeModal",{templateUrl:"core_deviceDatabase4/modals/import-device-type.html",bindings:{close:"&",dismiss:"&"},controllerAs:"vm",controller:e})}(),function(){"use strict";function e(e,t,n,a,i,r){function s(){var e=b.resolve;I=e.element,D=e.existingElements,x=e.existingCategories,u(),o(),l(),c()}function o(){b.element=a.addDiscreteIOMeta(I)}function l(){b.categories=x}function c(){var e;e={},_defineProperty(e,T.IS_REQUIRED,r("This field is required!")),_defineProperty(e,T.IS_VALID_NAME,r("Name should be unique among coils and discrete inputs!")),_defineProperty(e,T.IS_VALID_NUMBER,r(I.input?"Number should be unique among discrete inputs!":"Number should be unique among coils!")),w=e}function u(){R=b.resolve.features[I.input?"discreteInputs":"discreteOutputs"],b.features=R}function d(){I.meta.updateStatus&&(I.meta.showStatus=!0)}function m(e){return p(),v(),n.invalid(b,h,e)}function p(){var e=b[h],t=e.name,n=_.get(I,"meta"),a=_.isUndefined(t.$modelValue)||_.every(D,function(e){return e.name===_.get(n,"original.name")||e.name!==t.$modelValue});t.$setValidity(T.IS_VALID_NAME,a)}function v(){var e=b[h],t=e.number,n=_.get(I,"meta"),a=_.isUndefined(t.$modelValue)||_.every(D,function(e){return e.number===_.get(n,"original.number")||e.number!==t.$modelValue});t.$setValidity(T.IS_VALID_NUMBER,a)}function g(e){return n.validationHints(e,w)}function f(){b.close({$value:a.removeDiscreteIOMeta(I)})}function y(){if(I){var e=_.get(I,"meta",{});I.meta=e;var t=e.showStatus,n=e.enumValues;t?n&&_.assign(e,{enumType:!0,enumValues:_.cloneDeep(a.metaDefaults.discreteIO.enumValues)}):_.assign(e,{enumType:!1,enumValues:void 0})}}var b=this,h="elementForm",T={IS_REQUIRED:"required",IS_VALID_NAME:"valid-name",IS_VALID_NUMBER:"valid-number"},R=void 0,I=void 0,D=void 0,x=void 0,w=void 0;_.assign(b,{$onInit:s,onUpdateStatusCheckboxClicked:d,alarmSeverities:i.severityList,invalid:m,validationHints:g,save:f}),e.$watch("vm.element.meta.showStatus",y)}e.$inject=["$scope","$q","c8yBase","c8yDeviceDatabase","c8yAlarms","gettext"],angular.module("c8y.deviceDatabase4").component("c8yConfigureDiscreteIOModal",{templateUrl:"core_deviceDatabase4/modals/configure-discrete-io.html",bindings:{resolve:"<",close:"&",dismiss:"&"},controllerAs:"vm",controller:e})}(),function(){"use strict";function e(e,t,n,a,i,r,s){function o(){var e=C.resolve;P=e.element,F=e.existingElements,N=e.existingCategories,B=e.deviceType,U=e.fieldbusType,l(),c(),u(),d(),m(),p()}function l(){$=C.resolve.features[P.input?"inputRegisters":"holdingRegisters"],C.features=$}function c(){C.element=a.addRegisterMeta(P)}function u(){C.categories=N}function d(){C.deviceType=B}function m(){C.fieldbusType=U}function p(){var e;e={},_defineProperty(e,O.IS_REQUIRED,r("This field is required!")),_defineProperty(e,O.IS_VALID_NAME,_.get($,"validation.invalidName",r("Name should be unique among registers!"))),_defineProperty(e,O.IS_VALID_BIT_RANGE,r("Chosen number, start bit or number of bits overlap with another register!")),_defineProperty(e,O.IS_VALID_MEASUREMENT,_.get($,"validation.invalidMeasurement",r("Chosen measurement type and series are already used by another register!"))),_defineProperty(e,O.IS_MIN,r("Value cannot be lower than minimum!")),_defineProperty(e,O.IS_MAX,r("Value cannot be greater than maximum!")),_defineProperty(e,O.IS_UNIQUE,r("Value cannot be used more than once!")),_defineProperty(e,O.IS_VALID_NO_BITS_FOR_SIGNED_REGISTER,r("At least two bits needed for signed register!")),_defineProperty(e,O.IS_VALID_MESSAGEID,r("Invalid hexadecimal number!")),_defineProperty(e,O.IS_VALID_BROWSEPATH,r("Invalid browse path!")),_defineProperty(e,O.PATTERN,r("Dots not allowed.")),q=e}function v(e){var t=s.getString("no value");return _.isUndefined(e)||_.isNaN(e)||(t=e),"("+t+")"}function g(e){return f(e),y(e),b(),h(),T(),R(),n.invalid(C,V,e)}function f(e){if("number"===e&&_.get($,"number.useHex")){var t=_.get(C,V+".number"),n=_.get(t,"$modelValue");if(n){n.startsWith("0x")&&(n=n.substring(2));var a=parseInt(n,16),i=a.toString(16)===n.toLowerCase();t.$setValidity(O.IS_VALID_MESSAGEID,i),t.$setValidity(O.IS_MIN,!i||a>=0),t.$setValidity(O.IS_MAX,!i||a<=268435455)}else t.$setValidity(O.IS_VALID_MESSAGEID,!0)}}function y(e){var t=C[V];if("browsePath"===e){var n=t.browsePath.$viewValue,a=/^|((\d)+:[^\/]+)([\/](\d)+:[^\/]+)*$/;t.browsePath.$setValidity(O.IS_VALID_BROWSEPATH,a.test(n))}}function b(){var e=C[V],t=e.name,n=_.get(P,"meta"),a=_.isUndefined(t.$modelValue)||_.every(F,function(e){return e.name===_.get(n,"original.name")||e.name!==t.$modelValue});t.$setValidity(O.IS_VALID_NAME,a)}function h(){var e=C[V],t=e.number,n=e.startBit,i=e.noBits,r=_.get(P,"meta"),s=!t||_.isUndefined(t.$modelValue)||_.isUndefined(n.$modelValue)||_.isUndefined(i.$modelValue)||!_.some(F,function(e){var s=t.$modelValue;return _.get($,"number.useHex")&&s&&s.indexOf("0x")===-1&&(s="0x"+s),(!r||!(_.get(r,"original.number")===e.number&&r.original.startBit===e.startBit))&&e.input===P.input&&e.number===s&&(e.startBit===n.$modelValue&&e.noBits===i.$modelValue||a.areOverlappingRegisters(e,{startBit:n.$modelValue,noBits:i.$modelValue}))});t&&t.$setValidity(O.IS_VALID_BIT_RANGE,s),n&&n.$setValidity(O.IS_VALID_BIT_RANGE,s),i&&i.$setValidity(O.IS_VALID_BIT_RANGE,s)}function T(){var e=C[V],t=_.get(e,"messageTypeId.$modelValue"),n=e.measurementType,a=_.get(n,"$modelValue"),i=e.measurementSeries,r=_.get(i,"$modelValue"),s=_.get(P,"meta"),o=_.get(s,"sendMeasurement"),l=!o||_.isUndefined(a)||_.isUndefined(r)||!_.some(F,function(e){var n=!1,i=_.get(P,"id")===_.get(e,"id"),o=$.number&&_.get(s,"original.number")===e.number&&_.get(s,"original.startBit")===e.startBit&&_.get(s,"original.input")===e.input;return i||o||(n=(!$.messageTypeId||_.get(e,"messageTypeId")===t)&&_.get(e,"measurementMapping.type")===a&&_.get(e,"measurementMapping.series")===r),n});n&&n.$setValidity(O.IS_VALID_MEASUREMENT,l),i&&i.$setValidity(O.IS_VALID_MEASUREMENT,l)}function R(){var e=_.get(C,V+".noBits");if(e){var t=!P.signed||P.signed&&!_.isUndefined(e.$modelValue)&&e.$modelValue>1;e.$setValidity(O.IS_VALID_NO_BITS_FOR_SIGNED_REGISTER,t)}}function I(e,t){var a=_.cloneDeep(q),i=_.get(t,"validateValueInRegisterRange");return i&&(a[O.IS_VALUE_IN_REGISTER_RANGE]=s.getString(k,i)),n.validationHints(e,a)}function D(){P.meta.updateStatus&&(P.meta.showStatus=!0)}function x(){C.close({$value:a.removeRegisterMeta(P)})}function w(){var e=void 0,t=_.get(B,"c8y_MessageIdConfiguration.source")===a.MessageIdSources.PAYLOAD.value;if(t){var n=_.get(B,"c8y_MessageIdConfiguration.messageIdMapping.noBits");return Math.pow(2,n)-1}return e}function S(){return _.get($,"startBit.max")}function M(e){var t=_.get($,"noBits.max");return _.isNumber(t)&&_.isNumber(e)?t-e:t}function E(){var e=M(P.startBit);P.noBits>e&&(P.noBits=e)}function A(){var e=P,t=e.meta;t&&(t.valuesRange=a.getValuesRange(P))}var C=this,V="elementForm",O={IS_REQUIRED:"required",IS_VALID_NAME:"valid-name",IS_VALID_BIT_RANGE:"valid-bit-range",IS_VALID_MEASUREMENT:"valid-measurement",IS_VALUE_IN_REGISTER_RANGE:"value-in-register-range",IS_VALID_NO_BITS_FOR_SIGNED_REGISTER:"no-bits-for-signed-register",IS_VALID_MESSAGEID:"valid-messageID",IS_VALID_BROWSEPATH:"valid-browsePath",IS_MIN:"min",IS_MAX:"max",IS_UNIQUE:"unique",PATTERN:"pattern"},k=r("Value out of range! Allowed values from {{min | number}} to {{max | number}} with step {{step | number}}. Use up/down arrows to find nearest possible value."),$=void 0,P=void 0,F=void 0,N=void 0,B=void 0,U=void 0,q=void 0;_.assign(C,{$onInit:o,PATTERN_VALIDATE_FRAGMENT_SERIES:"^[^.]*$",alarmSeverities:i.severityList,getValuePlaceholder:v,addEnumValue:a.addEmptyEnumValue,removeEnumValue:a.removeEnumValue,invalid:g,validationHints:I,onUpdateStatusCheckboxClicked:D,save:x,messageTypeIdMax:w,startBitMax:S,noBitsMax:M}),e.$watch("vm.element.startBit",E),e.$watchGroup(["vm.element.min","vm.element.max","vm.element.noBits","vm.element.multiplier","vm.element.divisor","vm.element.decimalPlaces","vm.element.signed"],A)}e.$inject=["$scope","$q","c8yBase","c8yDeviceDatabase","c8yAlarms","gettext","gettextCatalog"],angular.module("c8y.deviceDatabase4").component("c8yConfigureRegisterModal",{templateUrl:"core_deviceDatabase4/modals/configure-register.html",bindings:{resolve:"<",close:"&",dismiss:"&"},controllerAs:"vm",controller:e})}(),function(){"use strict";function e(e,t){function n(){var e=r.resolve.modalParams,n=e.selectSingle,a=e.device,i=t.generatePaths(a);_.assign(r,{selectSingle:n,properties:_.map(i,t.createProperty)})}function a(e){return 1===e.keyPath.length}function i(e){return e.keyPath.join(".")}var r=this;_.assign(r,{$onInit:n,humanize:e("humanize2"),isParent:a,orderByFn:i})}e.$inject=["$filter","fieldbusPropertyGenerator"],angular.module("c8y.deviceDatabase4").component("c8ySelectFieldbusPropertyModal",{templateUrl:"core_deviceDatabase4/modals/select-fieldbus-property.html",bindings:{resolve:"<",close:"&",dismiss:"&"},controllerAs:"vm",controller:e})}(),function(){"use strict";angular.module("c8y.deviceDatabase4").component("c8yDeviceTypeBasicInfo",{templateUrl:"core_deviceDatabase4/detail/basic-info.html",bindings:{deviceTypeForm:"<",formValue:"<",deviceType:"<",deviceTypesFeatures:"<",isNew:"<",onDeviceTypeChange:"<"},controllerAs:"vm"})}(),function(){"use strict";angular.module("c8y.deviceDatabase4").component("c8yDeviceTypeMessageIdConfiguration",{templateUrl:"core_deviceDatabase4/detail/message-id-configuration.html",bindings:{featureLabel:"<",deviceTypeForm:"<",deviceType:"<",messageIdSources:"<"},controllerAs:"vm"})}(),function(){"use strict";angular.module("c8y.deviceDatabase4").component("c8yDeviceTypeDiscreteInputs",{templateUrl:"core_deviceDatabase4/detail/discrete-inputs.html",bindings:{discreteInputsCategorized:"<",isEmpty:"<",addDiscreteInput:"<",editDiscreteInput:"<",removeDiscreteInput:"<"},controllerAs:"vm"})}(),function(){"use strict";angular.module("c8y.deviceDatabase4").component("c8yDeviceTypeDiscreteOutputs",{templateUrl:"core_deviceDatabase4/detail/discrete-outputs.html",bindings:{discreteOutputsCategorized:"<",isEmpty:"<",addDiscreteOutput:"<",editDiscreteOutput:"<",removeDiscreteOutput:"<"},controllerAs:"vm"})}(),function(){"use strict";angular.module("c8y.deviceDatabase4").component("c8yDeviceTypeHoldingRegisters",{templateUrl:"core_deviceDatabase4/detail/holding-registers.html",bindings:{features:"<",holdingRegistersCategorized:"<",isEmpty:"<",addHoldingRegister:"<",editHoldingRegister:"<",removeHoldingRegister:"<"},controllerAs:"vm"})}(),function(){"use strict";angular.module("c8y.deviceDatabase4").component("c8yDeviceTypeInputRegisters",{templateUrl:"core_deviceDatabase4/detail/input-registers.html",bindings:{inputRegistersCategorized:"<",isEmpty:"<",addInputRegister:"<",editInputRegister:"<",removeInputRegister:"<"},controllerAs:"vm"})}(),function(){"use strict";angular.module("c8y.deviceDatabase4").component("c8yDeviceTypeOptions",{templateUrl:"core_deviceDatabase4/detail/options.html",bindings:{options:"<",deviceType:"<"},controllerAs:"vm"})}(),function(){"use strict";function e(e,t,n,a,i,r,s,o,l,c,u,d,m){function p(){B.deviceTypesFeatures=o.getDeviceTypesFeatures()}function v(e){return g()?o.getEmptyDeviceType():o.getDeviceType(e)}function g(){return"new"===U}function f(){l.changeTitle({title:B.deviceType.name||d("New device type")})}function y(e){return R(e,o.getEmptyDiscreteOutput(),B.deviceType.c8y_Coils)}function b(e){return R(e,o.getEmptyDiscreteInput(),B.deviceType.c8y_Coils)}function h(e){return I(e,o.getEmptyHoldingRegister(B.deviceType),B.deviceType.c8y_Registers)}function T(e){return I(e,o.getEmptyInputRegister(),B.deviceType.c8y_Registers)}function R(e,t,n){return $("DiscreteIO",e,t,n)}function I(e,t,n){return $("Register",e,t,n)}function D(e,t,n){if(_.get(B.features,"holdingRegisters.number.useHex",!1)&&!n.number.startsWith("0x")&&(n.number="0x"+n.number),e){var a=_.indexOf(t,e);t[a]=n}else t.push(n)}function x(e){return P(e,B.deviceType.c8y_Coils,d('Do you really want to remove "{{name}}"?'))}function w(e){return P(e,B.deviceType.c8y_Coils,d('Do you really want to remove "{{name}}"?'))}function S(e){return P(e,B.deviceType.c8y_Registers,d('Do you really want to remove "{{name}}"?'))}function M(e){return P(e,B.deviceType.c8y_Registers,d('Do you really want to remove "{{name}}"?'))}function E(){var e=B.deviceType;return _.get(B,"deviceTypeForm.$invalid")||!e||_.isEmpty(e.c8y_Coils)&&_.isEmpty(e.c8y_Registers)}function A(){var e=this;if(B.deviceType.fieldbusType)_asyncToGenerator(regeneratorRuntime.mark(function n(){var a;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,N();case 2:a=e.sent,B.features=_.find(B.deviceTypesFeatures,{fieldbusType:a}),t.$apply();case 5:case"end":return e.stop()}},n,e)}))();else{var n=B.formValue.fieldbusType;B.deviceType.fieldbusType=n,B.features=_.find(B.deviceTypesFeatures,{fieldbusType:n})}}function C(){var e=B.deviceType;_.assign(B,{discreteOutputsCategorized:o.getDiscreteOutputsCategorized(e),discreteInputsCategorized:o.getDiscreteInputsCategorized(e),holdingRegistersCategorized:o.getHoldingRegistersCategorized(e),inputRegistersCategorized:o.getInputRegistersCategorized(e)})}var V=this,O=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return p(),e.next=3,k(U);case 3:C(),f(),t.$apply();case 6:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}(),k=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(n){var a,i;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,v(n);case 2:a=e.sent,i=a.fieldbusType,_.assign(B,{deviceType:a,formValue:{fieldbusType:i},features:_.find(B.deviceTypesFeatures,{fieldbusType:i})}),t.$apply();case 6:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),$=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(n,a,i,r){var s;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,o["edit"+n+"WithUI"](a||i,B.deviceType);case 3:s=e.sent,D(a,r,s),C(),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),e.t0&&u.danger(e.t0);case 11:t.$apply();case 12:case"end":return e.stop()}},e,this,[[0,8]])}));return function(t,n,a,i){return e.apply(this,arguments)}}(),P=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(n,a,i){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,c({title:d("Confirm delete?"),body:m.getString(i,n),labels:{ok:d("Delete")},status:"danger"});case 3:s.removeFromList(a,n),C(),e.next=10;break;case 7:e.prev=7,e.t0=e.catch(0),e.t0&&u.danger(e.t0);case 10:t.$apply();case 11:case"end":return e.stop()}},e,this,[[0,7]])}));return function(t,n,a){return e.apply(this,arguments)}}(),F=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(n){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,o.save(n);case 3:u.success(d("Device type saved!")),q=!0,r.path("/device-types"),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),u.danger(e.t0.errorMessage);case 11:t.$apply();case 12:case"end":return e.stop()}},e,this,[[0,8]])}));return function(t){return e.apply(this,arguments)}}(),N=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(){var t,n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,c({title:d("Confirm device type change?"),body:m.getString("By changing device type, all changes will be lost. Do you really want to proceed?")});case 3:return o.removeAllElements(B.deviceType),C(),t=B.formValue.fieldbusType,B.deviceType.fieldbusType=t,e.abrupt("return",t);case 10:return e.prev=10,e.t0=e.catch(0),n=B.deviceType.fieldbusType,B.formValue.fieldbusType=n,e.abrupt("return",n);case 15:case"end":return e.stop()}},e,this,[[0,10]])}));return function(){return e.apply(this,arguments)}}(),B=this,U=e.deviceTypeId,q=!0;_.assign(B,{$onInit:O,isNew:g,isEmpty:_.isEmpty,editDiscreteOutput:y,editDiscreteInput:b,editHoldingRegister:h,editInputRegister:T,addDiscreteOutput:y,addDiscreteInput:b,addHoldingRegister:h,addInputRegister:T,removeDiscreteOutput:x,removeDiscreteInput:w,removeHoldingRegister:S,removeInputRegister:M,save:F,saveDisabled:E,changeDeviceType:A,messageIdSources:o.MessageIdSources}),n.$watch("vm.deviceType",function(e,t){t&&e!==t&&(q=!1)},!0),n.$on("$locationChangeStart",function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(n,a){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(q){e.next=13;break}return n.preventDefault(),e.prev=2,e.next=5,c({title:d("Changes not saved"),body:d("Do you want to leave this page and discard the changes made?"),status:"warning",labels:{ok:d("Yes"),cancel:d("No")}});case 5:q=!0,i.location.href=a,t.$apply(),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(2),e.t0&&u.danger(e.t0);case 13:case"end":return e.stop()}},e,V,[[2,10]])}));return function(t,n){return e.apply(this,arguments)}}())}e.$inject=["$routeParams","$rootScope","$scope","$q","$window","$location","c8yBase","c8yDeviceDatabase","c8yTitle","c8yModal","c8yAlert","gettext","gettextCatalog"],angular.module("c8y.deviceDatabase4").component("c8yDeviceTypeDetail",{templateUrl:"core_deviceDatabase4/detail/device-type-detail.html",controllerAs:"vm",controller:e})}(),function(){"use strict";function e(e){var t;t='<div class="row">\n  <div class="form-group col-lg-4" ng-class="{\'has-error\': vm.deviceTypeForm.deviceType.$dirty && vm.deviceTypeForm.deviceType.$invalid}">\n    <label translate>Device type</label>\n    <select class="form-control" name="deviceType" ng-model="vm.formValue.fieldbusType" ng-options="deviceTypeFeatures.fieldbusType as deviceTypeFeatures.label for deviceTypeFeatures in vm.deviceTypesFeatures" ng-change="vm.onDeviceTypeChange()" ng-disabled="!vm.isNew()" required>\n    </select>\n  </div>\n  <div class="form-group col-lg-4" ng-class="{\'has-error\': vm.deviceTypeForm.name.$dirty && vm.deviceTypeForm.name.$invalid}">\n    <label translate>Name</label>\n    <input class="form-control" name="name" ng-model="vm.deviceType.name" ng-disabled="!vm.isNew()" ng-maxlength="650" required>\n  </div>\n</div>\n',e.put("core_deviceDatabase4/detail/basic-info.html",t),e.put("/apps/core/deviceDatabase4/detail/basic-info.html",t),t='<div>\n  <form ng-if="vm.deviceType" class="panel-body device-type-form" name="vm.deviceTypeForm" novalidate>\n    <c8y-device-type-basic-info device-type-form="vm.deviceTypeForm" form-value="vm.formValue" device-type="vm.deviceType" device-types-features="vm.deviceTypesFeatures" is-new="vm.isNew" on-device-type-change="vm.changeDeviceType">\n    </c8y-device-type-basic-info>\n\n    <c8y-device-type-message-id-configuration ng-if="vm.features.configuration.messageIdConfiguration" feature-label="vm.features.label" device-type-form="vm.deviceTypeForm" device-type="vm.deviceType" message-id-sources="vm.messageIdSources">\n    </c8y-device-type-message-id-configuration>\n\n    <div class="row">\n      <c8y-device-type-discrete-outputs ng-if="vm.features.discreteOutputs" ng-class="{\n          \'col-lg-6\': vm.features.discreteOutputs && vm.features.discreteInputs,\n          \'col-lg-12\': !vm.features.discreteInputs\n        }" discrete-outputs-categorized="vm.discreteOutputsCategorized" is-empty="vm.isEmpty" add-discrete-output="vm.addDiscreteOutput" edit-discrete-output="vm.editDiscreteOutput" remove-discrete-output="vm.removeDiscreteOutput">\n      </c8y-device-type-discrete-outputs>\n\n      <c8y-device-type-discrete-inputs ng-if="vm.features.discreteInputs" ng-class="{\n          \'col-lg-6\': vm.features.discreteOutputs && vm.features.discreteInputs,\n          \'col-lg-12\': !vm.features.discreteOutputs\n        }" discrete-inputs-categorized="vm.discreteInputsCategorized" is-empty="vm.isEmpty" add-discrete-input="vm.addDiscreteInput" edit-discrete-input="vm.editDiscreteInput" remove-discrete-input="vm.removeDiscreteInput">\n      </c8y-device-type-discrete-inputs>\n    </div>\n\n    <div class="row">\n      <c8y-device-type-holding-registers ng-if="vm.features.holdingRegisters" ng-class="{\n          \'col-lg-6\': vm.features.holdingRegisters && vm.features.inputRegisters,\n          \'col-lg-12\': !vm.features.inputRegisters\n        }" features="vm.features" holding-registers-categorized="vm.holdingRegistersCategorized" is-empty="vm.isEmpty" add-holding-register="vm.addHoldingRegister" edit-holding-register="vm.editHoldingRegister" remove-holding-register="vm.removeHoldingRegister">\n      </c8y-device-type-holding-registers>\n\n      <c8y-device-type-input-registers ng-if="vm.features.inputRegisters" ng-class="{\n          \'col-lg-6\': vm.features.holdingRegisters && vm.features.inputRegisters,\n          \'col-lg-12\': !vm.features.holdingRegisters\n        }" input-registers-categorized="vm.inputRegistersCategorized" is-empty="vm.isEmpty" add-input-register="vm.addInputRegister" edit-input-register="vm.editInputRegister" remove-input-register="vm.removeInputRegister">\n      </c8y-device-type-input-registers>\n    </div>\n\n    <c8y-device-type-options ng-if="vm.features.options" options="vm.features.options" device-type="vm.deviceType">\n    </c8y-device-type-options>\n\n    <c8y-if-allowed admin-mos="[vm.deviceType.id]">\n      <button class="btn btn-primary" ng-click="vm.save(vm.deviceType)" ng-disabled="vm.saveDisabled()" translate>\n        Save\n      </button>\n    </c8y-if-allowed>\n  </form>\n</div>\n',
e.put("core_deviceDatabase4/detail/device-type-detail.html",t),e.put("/apps/core/deviceDatabase4/detail/device-type-detail.html",t),t='<div class="panel panel-clean">\n  <div class="panel-heading">\n    <i c8y-icon="sliders"></i>\n    <span translate>Discrete inputs</span>\n    <button class="btn btn-link pull-right" ng-click="vm.addDiscreteInput()">\n      <i c8y-icon="plus"></i>\n      <span translate>Add</span>\n    </button>\n  </div>\n  <div class="panel-body">\n    <div class="alert alert-warning" ng-if="vm.isEmpty(vm.discreteInputsCategorized)" translate>\n      No discrete inputs defined.\n    </div>\n    <table class="table table-hover elements-table" ng-if="!vm.isEmpty(vm.discreteInputsCategorized)">\n      <colgroup>\n        <col>\n        <col class="buttons">\n      </colgroup>\n      <thead ng-repeat-start="(category, discreteInputs) in vm.discreteInputsCategorized">\n      <tr>\n        <th colspan="2" class="category-header" ng-class="{\'text-muted\': !category}">\n          <span ng-if="category" title="{{category}}">{{category}}</span>\n          <span ng-if="!category">{{\'Uncategorized\' | translate}}</span>\n        </th>\n      </tr>\n      </thead>\n      <tbody ng-repeat-end>\n      <tr ng-repeat="discreteInput in discreteInputs | orderBy:\'number\'">\n        <td class="interact info" ng-click="vm.editDiscreteInput(discreteInput)">\n          <span>{{discreteInput.name}}</span>\n          <small class="text-muted hidden-sm hidden-xs" style="margin-right: 10px">\n            <strong><span translate>Number</span>:</strong>\n            <span>{{discreteInput.number}}</span>\n          </small>\n        </td>\n        <td class="text-right">\n          <button class="btn btn-danger btn-xs showOnHover" uib-tooltip="{{\'Remove\' | translate}}" ng-click="vm.removeDiscreteInput(discreteInput)">\n            <i c8y-icon="times"></i>\n          </button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n',e.put("core_deviceDatabase4/detail/discrete-inputs.html",t),e.put("/apps/core/deviceDatabase4/detail/discrete-inputs.html",t),t='<div class="panel panel-clean">\n  <div class="panel-heading">\n    <i c8y-icon="sliders"></i>\n    <span translate>Coils (discrete outputs)</span>\n    <button class="btn btn-link pull-right" ng-click="vm.addDiscreteOutput()">\n      <i c8y-icon="plus"></i>\n      <span translate>Add</span>\n    </button>\n  </div>\n  <div class="panel-body">\n    <div class="alert alert-warning" ng-if="vm.isEmpty(vm.discreteOutputsCategorized)" translate>\n      No coils defined.\n    </div>\n    <table class="table table-hover elements-table" ng-if="!vm.isEmpty(vm.discreteOutputsCategorized)">\n      <colgroup>\n        <col>\n        <col class="buttons">\n      </colgroup>\n      <thead ng-repeat-start="(category, discreteOutputs) in vm.discreteOutputsCategorized">\n      <tr>\n        <th colspan="2" class="category-header" ng-class="{\'text-muted\': !category}">\n          <span ng-if="category" title="{{category}}">{{category}}</span>\n          <span ng-if="!category">{{\'Uncategorized\' | translate}}</span>\n        </th>\n      </tr>\n      </thead>\n      <tbody ng-repeat-end>\n      <tr ng-repeat="discreteOutput in discreteOutputs | orderBy:\'number\'">\n        <td class="interact info" ng-click="vm.editDiscreteOutput(discreteOutput)">\n          <span>{{discreteOutput.name}}</span>\n          <small class="text-muted hidden-sm hidden-xs" style="margin-right: 10px">\n            <strong><span translate>Number</span>:</strong>\n            <span>{{discreteOutput.number}}</span>\n          </small>\n        </td>\n        <td class="text-right">\n          <button class="btn btn-danger btn-xs showOnHover" uib-tooltip="{{\'Remove\' | translate}}" ng-click="vm.removeDiscreteOutput(discreteOutput)">\n            <i c8y-icon="times"></i>\n          </button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n',e.put("core_deviceDatabase4/detail/discrete-outputs.html",t),e.put("/apps/core/deviceDatabase4/detail/discrete-outputs.html",t),t='<div class="panel panel-clean">\n  <div class="panel-heading">\n    <i c8y-icon="tasks"></i>\n    <span ng-if="vm.features.holdingRegisters.sectionTitle">\n      {{vm.features.holdingRegisters.sectionTitle | translate}}\n    </span>\n    <span ng-if="!vm.features.holdingRegisters.sectionTitle">\n      {{\'Holding registers\' | translate}}\n    </span>\n    <button class="btn btn-link pull-right" ng-click="vm.addHoldingRegister()">\n      <i c8y-icon="plus"></i>\n      <span translate>Add</span>\n    </button>\n  </div>\n  <div class="panel-body">\n    <div class="alert alert-warning" ng-if="vm.isEmpty(vm.holdingRegistersCategorized)">\n      <span ng-if="vm.features.holdingRegisters.noRegistersDefinedMessage">\n        {{vm.features.holdingRegisters.noRegistersDefinedMessage | translate}}\n      </span>\n      <span ng-if="!vm.features.holdingRegisters.noRegistersDefinedMessage">\n        {{\'No holding registers defined.\' | translate}}\n      </span>\n    </div>\n    <table class="table table-hover elements-table" ng-if="!vm.isEmpty(vm.holdingRegistersCategorized)">\n      <colgroup>\n        <col>\n        <col class="buttons">\n      </colgroup>\n      <thead ng-repeat-start="(category, holdingRegisters) in vm.holdingRegistersCategorized">\n      <tr>\n        <th colspan="2" class="category-header" ng-class="{\'text-muted\': !category}">\n          <span ng-if="category" title="{{category}}">{{category}}</span>\n          <span ng-if="!category">{{\'Uncategorized\' | translate}}</span>\n        </th>\n      </tr>\n      </thead>\n      <tbody ng-repeat-end>\n      <tr ng-repeat="holdingRegister in holdingRegisters | orderBy:[\'number\', \'startBit\', \'browsePath\']">\n        <td class="interact info" ng-click="vm.editHoldingRegister(holdingRegister)">\n          <span>{{holdingRegister.name}}</span>\n          <small class="text-muted hidden-sm hidden-xs registerDescription" ng-if="vm.features.holdingRegisters.number">\n            <strong>\n              <span>{{(vm.features.holdingRegisters.number.label | translate) || (\'Number\' | translate)}}</span>:\n            </strong>\n            <span>{{holdingRegister.number}}</span>\n          </small>\n          <small class="text-muted hidden-sm hidden-xs registerDescription" ng-if="vm.features.holdingRegisters.messageTypeId">\n            <strong>\n              <span>{{(vm.features.holdingRegisters.messageTypeId.label | translate) || (\'Message ID\' | translate)}}</span>:\n            </strong>\n            <span>{{holdingRegister.messageTypeId}}</span>\n          </small>\n          <small class="text-muted hidden-sm hidden-xs registerDescription" ng-if="vm.features.holdingRegisters.startBit">\n            <strong><span translate>Start bit</span>:</strong>\n            <span>{{holdingRegister.startBit}}</span>\n          </small>\n          <small class="text-muted hidden-sm hidden-xs registerDescription" ng-if="vm.features.holdingRegisters.noBits">\n            <strong><span translate>Number of bits</span>:</strong>\n            <span>{{holdingRegister.noBits}}</span>\n          </small>\n          <small class="text-muted hidden-sm hidden-xs registerDescription" ng-if="vm.features.holdingRegisters.browsePath">\n            <strong><span translate>Browse path</span>:</strong>\n            <span>{{holdingRegister.browsePath}}</span>\n          </small>\n          <small class="text-muted hidden-sm hidden-xs registerDescription" ng-if="vm.features.holdingRegisters.nodeType">\n            <strong><span translate>Node type</span>:</strong>\n            <span>{{holdingRegister.nodeType}}</span>\n          </small>\n          <small class="text-muted hidden-sm hidden-xs registerDescription" ng-if="vm.features.holdingRegisters.attributeType">\n            <strong><span translate>Attribute type</span>:</strong>\n            <span>{{holdingRegister.attributeType}}</span>\n          </small>\n        </td>\n        <td class="text-right">\n          <button class="btn btn-danger btn-xs showOnHover" uib-tooltip="{{\'Remove\' | translate}}" ng-click="vm.removeHoldingRegister(holdingRegister)">\n            <i c8y-icon="times"></i>\n          </button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n',e.put("core_deviceDatabase4/detail/holding-registers.html",t),e.put("/apps/core/deviceDatabase4/detail/holding-registers.html",t),t='<div class="panel panel-clean">\n  <div class="panel-heading">\n    <i c8y-icon="tasks"></i>\n    <span translate>Input registers</span>\n    <button class="btn btn-link pull-right" ng-click="vm.addInputRegister()">\n      <i c8y-icon="plus"></i>\n      <span translate>Add</span>\n    </button>\n  </div>\n  <div class="panel-body">\n    <div class="alert alert-warning" ng-if="vm.isEmpty(vm.inputRegistersCategorized)" translate>\n      No input registers defined.\n    </div>\n    <table class="table table-hover elements-table" ng-if="!vm.isEmpty(vm.inputRegistersCategorized)">\n      <colgroup>\n        <col>\n        <col class="buttons">\n      </colgroup>\n      <thead ng-repeat-start="(category, inputRegisters) in vm.inputRegistersCategorized">\n      <tr>\n        <th colspan="2" class="category-header" ng-class="{\'text-muted\': !category}">\n          <span ng-if="category" title="{{category}}">{{category}}</span>\n          <span ng-if="!category">{{\'Uncategorized\' | translate}}</span>\n        </th>\n      </tr>\n      </thead>\n      <tbody ng-repeat-end>\n      <tr ng-repeat="inputRegister in inputRegisters | orderBy:[\'number\', \'startBit\']">\n        <td class="interact info" ng-click="vm.editInputRegister(inputRegister)">\n          <span>{{inputRegister.name}}</span>\n          <small class="text-muted hidden-sm hidden-xs" style="margin-right: 10px">\n            <strong><span translate>Number</span>:</strong>\n            <span>{{inputRegister.number}}</span>\n          </small>\n          <small class="text-muted hidden-sm hidden-xs" style="margin-right: 10px">\n            <strong><span translate>Start bit</span>:</strong>\n            <span>{{inputRegister.startBit}}</span>\n          </small>\n          <small class="text-muted hidden-sm hidden-xs" style="margin-right: 10px">\n            <strong><span translate>Number of bits</span>:</strong>\n            <span>{{inputRegister.noBits}}</span>\n          </small>\n        </td>\n        <td class="text-right">\n          <button class="btn btn-danger btn-xs showOnHover" title="{{\'Remove\' | translate}}" ng-click="vm.removeInputRegister(inputRegister)">\n            <i c8y-icon="times"></i>\n          </button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n',e.put("core_deviceDatabase4/detail/input-registers.html",t),e.put("/apps/core/deviceDatabase4/detail/input-registers.html",t),t='<div class="panel panel-clean">\n  <div class="panel-heading">\n    <i c8y-icon="tasks"></i>\n    <span translate>Message types</span>\n  </div>\n  <div class="panel-body">\n    <div class="row">\n      <div class="col-lg-6">\n        <div class="alert alert-info" style="width: 100%" translate>\n          {{vm.featureLabel | translate}} devices can send messages of different types with different encodings per type.\n          Depending on the device, the type can be determined by looking either\n          at the FPort parameter of a message (<b>Source</b>: <i>FPort</i>)\n          or at the subset of the message payload itself (<b>Source</b>:\n          <i>Payload</i>).\n          If the type is inside the message payload,\n          indicate where the type information starts in the payload (<b>Start bit</b>)\n          and how long this information is (<b>Number of bits</b>).\n        </div>\n      </div>\n      <div class="col-lg-6">\n        <div class="row">\n          <div class="form-group col-lg-12" ng-class="{\'has-error\': vm.deviceTypeForm.messageIdSource.$dirty && vm.deviceTypeForm.deviceType.$invalid}">\n            <label translate>Source</label>\n            <select class="form-control" name="messageIdSource" ng-model="vm.deviceType.c8y_MessageIdConfiguration.source" ng-options="source.value as source.label for source in vm.messageIdSources.values()" required>\n            </select>\n          </div>\n        </div>\n\n        <div class="row" ng-if="vm.deviceType.c8y_MessageIdConfiguration.source === vm.messageIdSources.PAYLOAD.value">\n          <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.deviceTypeForm.messageIdStartBit.$dirty && vm.deviceTypeForm.deviceType.$invalid}">\n            <label>\n              <span translate>Start bit</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'For example, if message type is indicated by the first byte of payload, then enter 0\' | translate}}">\n              </i>\n            </label>\n            <input class="form-control" type="number" name="messageIdStartBit" ng-model="vm.deviceType.c8y_MessageIdConfiguration.messageIdMapping.startBit" ng-min="0" required>\n          </div>\n          <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.deviceTypeForm.messageIdNoBits.$dirty && vm.deviceTypeForm.deviceType.$invalid}">\n            <label>\n              <span translate>Number of bits</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'For example, if message type is indicated by the first byte of payload, then enter 8\' | translate}}">\n              </i>\n            </label>\n            <input class="form-control" type="number" name="messageIdNoBits" ng-model="vm.deviceType.c8y_MessageIdConfiguration.messageIdMapping.noBits" ng-min="1" required>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',e.put("core_deviceDatabase4/detail/message-id-configuration.html",t),e.put("/apps/core/deviceDatabase4/detail/message-id-configuration.html",t),t='<div class="panel panel-clean">\n  <div class="panel-heading">\n    <i c8y-icon="list"></i>\n    <span translate>Options</span>\n  </div>\n  <div class="panel-body">\n    <div class="row" ng-if="vm.options.serverTime">\n      <div class="form-group col-lg-12">\n        <div class="checkbox">\n          <label>\n            <input type="checkbox" name="useServerTime" ng-model="vm.deviceType.c8y_useServerTime">\n            <span translate>Use server time</span>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',e.put("core_deviceDatabase4/detail/options.html",t),e.put("/apps/core/deviceDatabase4/detail/options.html",t),t='<div>\n  <div class="clearfix">\n    <c8y-refresh-btn class="pull-right" style="margin-bottom:20px">\n    </c8y-refresh-btn>\n    <c8y-if-allowed any-role="[\'ROLE_INVENTORY_ADMIN\', \'ROLE_INVENTORY_CREATE\']">\n      <button class="btn btn-link pull-right" ng-click="vm.importDeviceType()">\n        <i c8y-icon="upload"></i>\n        <span translate>Import</span>\n      </button>\n      <button class="btn btn-link pull-right" ng-click="vm.addDeviceType()">\n        <i c8y-icon="plus"></i>\n        <span translate>New</span>\n      </button>\n    </c8y-if-allowed>\n  </div>\n\n  <div class="alert alert-warning" ng-if="vm.deviceTypes.length === 0" translate>\n    No device types found.\n  </div>\n\n  <table class="table table-hover" ng-if="vm.deviceTypes.length > 0">\n    <tr ng-repeat="deviceType in vm.deviceTypes | orderBy:\'name\'">\n      <td class="interact word-break" ng-click="vm.navigateToDetails(deviceType)">\n        {{deviceType.name}}\n      </td>\n      <td class="text-right word-nobreak">\n        <c8y-if-allowed admin-mos="[deviceType.id]">\n          <button class="btn btn-primary btn-xs showOnHover" uib-tooltip="{{\'Export\' | translate}}" ng-click="vm.onClickExport(deviceType)">\n            <i c8y-icon="download"></i>\n          </button>\n          <button class="btn btn-danger btn-xs showOnHover" uib-tooltip="{{\'Remove\' | translate}}" ng-click="vm.onClickDelete(deviceType)" style="margin-left:10px">\n            <i c8y-icon="times"></i>\n          </button>\n        </c8y-if-allowed>\n      </td>\n    </tr>\n  </table>\n\n  <c8y-load-more></c8y-load-more>\n</div>\n',e.put("core_deviceDatabase4/device-type-list.html",t),e.put("/apps/core/deviceDatabase4/device-type-list.html",t),t='<a title="{{match.label}}">\n  <span ng-bind-html="match.label | uibTypeaheadHighlight:query"></span>\n</a>\n',e.put("core_deviceDatabase4/modals/category-typeahead.html",t),e.put("/apps/core/deviceDatabase4/modals/category-typeahead.html",t),t='<div class="modal-header" ng-if="vm.resolve.title">\n  <h3 class="text-truncate" title="{{vm.resolve.title | translate}}">\n    {{vm.resolve.title | translate}}\n  </h3>\n</div>\n<div class="modal-body">\n  <form ng-if="vm.element" class="panel-body" name="vm.elementForm" novalidate>\n    <fieldset style="margin-top: -20px">\n      <div class="legend form-block center">\n        <span translate>General</span>\n      </div>\n\n      <div class="row">\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'name\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.name)}}">\n          <label for="name" translate>Name</label>\n          <input type="text" class="form-control" id="name" name="name" ng-model="vm.element.name" c8y-autocomplete="off" required>\n        </div>\n        <div class="form-group col-lg-6 category-form-group" ng-class="{\'has-error\': vm.invalid(\'category\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.category)}}">\n          <label for="category" translate>Display category</label>\n          <input type="text" class="form-control" id="category" name="category" ng-model="vm.element.category" c8y-autocomplete="off" uib-typeahead="category.name for category in vm.categories | filter:{name:$viewValue}" typeahead-template-url="core_deviceDatabase4/modals/category-typeahead.html">\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div class="legend form-block center">\n        <span translate>Value selection</span>\n        <i c8y-icon="question-circle" uib-tooltip="{{\'Indicate from where the value should be taken\' | translate}}">\n        </i>\n      </div>\n\n      <div class="row">\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'number\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.number)}}">\n          <label for="number" translate>Number</label>\n          <input type="number" class="form-control" id="number" name="number" ng-model="vm.element.number" ng-min="1" ng-max="65536" step="1" required>\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div class="legend form-block center">\n        <span translate>Functionalities</span>\n        <i c8y-icon="question-circle" uib-tooltip="{{\'Choose which actions to perform with the value\' | translate}}"></i>\n      </div>\n\n      <div class="row">\n        <div class="form-group col-lg-6">\n          <div ng-if="vm.features.functionalities.showStatus" class="checkbox">\n            <label>\n              <input type="checkbox" ng-model="vm.element.meta.showStatus" ng-disabled="vm.element.meta.updateStatus">\n              <span translate>Show status (read-only access)</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'Enable showing current value in UI (e.g. on Fieldbus widget)\' | translate}}">\n              </i>\n            </label>\n          </div>\n          <div ng-if="vm.features.functionalities.updateStatus && !vm.element.input" class="checkbox">\n            <label>\n              <input type="checkbox" ng-model="vm.element.meta.updateStatus" ng-change="vm.onUpdateStatusCheckboxClicked()">\n              <span translate>Update status (read/write access)</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'Enable changing current value from UI (e.g. using Fieldbus widget)\' | translate}}">\n              </i>\n            </label>\n          </div>\n          <div class="checkbox">\n            <label>\n              <input type="checkbox" ng-model="vm.element.meta.raiseAlarm">\n              <span translate>Raise alarm</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'Create an alarm if the value is not equal to 0\' | translate}}">\n              </i>\n            </label>\n          </div>\n          <div class="checkbox">\n            <label>\n              <input type="checkbox" ng-model="vm.element.meta.sendEvent">\n              <span translate>Send event</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'Create an event whenever the value is changed\' | translate}}">\n              </i>\n            </label>\n          </div>\n        </div>\n      </div>\n      <div class="row">\n        <div ng-if="vm.element.meta.showStatus" ng-repeat="enumValue in vm.element.meta.enumValues | limitTo:2">\n          <ng-form name="vm.nestedEnumValueValueForm">\n            <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.nestedEnumValueValueForm.$dirty && vm.nestedEnumValueValueForm.$invalid}">\n              <label>\n                <span ng-if="enumValue.value === 0" translate>\n                  Text to show if value is zero\n                </span>\n                <span ng-if="enumValue.value === 1" translate>\n                  Text to show if value is one\n                </span>\n              </label>\n              <input class="form-control" ng-model="enumValue.label" ng-required="vm.element.meta.showStatus">\n            </div>\n          </ng-form>\n        </div>\n      </div>\n      <div class="row" ng-if="vm.element.meta.raiseAlarm">\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'alarmType\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.alarmType)}}">\n          <label for="alarmType" translate>Alarm type</label>\n          <input class="form-control" id="alarmType" name="alarmType" ng-model="vm.element.alarmMapping.type" ng-required="vm.element.meta.raiseAlarm">\n        </div>\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'alarmText\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.alarmText)}}">\n          <label for="alarmText" translate>Alarm text</label>\n          <input class="form-control" name="alarmText" id="alarmText" ng-model="vm.element.alarmMapping.text" ng-required="vm.element.meta.raiseAlarm">\n        </div>\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'alarmSeverity\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.alarmSeverity)}}">\n          <label for="alarmSeverity" translate>Alarm severity</label>\n          <select class="form-control" id="alarmSeverity" name="alarmSeverity" ng-model="vm.element.alarmMapping.severity" ng-options="(severity | translate) for severity in vm.alarmSeverities" ng-required="vm.element.meta.raiseAlarm">\n          </select>\n        </div>\n      </div>\n      <div class="row" ng-if="vm.element.meta.sendEvent">\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'eventType\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.eventType)}}">\n          <label for="eventType" translate>Event type</label>\n          <input class="form-control" id="eventType" name="eventType" ng-model="vm.element.eventMapping.type" ng-required="vm.element.meta.sendEvent">\n        </div>\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'eventText\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.eventText)}}">\n          <label for="eventText" translate>Event text</label>\n          <input class="form-control" id="eventText" name="eventText" ng-model="vm.element.eventMapping.text" ng-required="vm.element.meta.sendEvent">\n        </div>\n      </div>\n    </fieldset>\n  </form>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-disabled="vm.elementForm.$invalid" ng-click="vm.save()" translate>\n    OK\n  </button>\n  <button class="btn btn-default" ng-click="vm.dismiss()" translate>\n    Close\n  </button>\n</div>\n',e.put("core_deviceDatabase4/modals/configure-discrete-io.html",t),e.put("/apps/core/deviceDatabase4/modals/configure-discrete-io.html",t),t='<div class="modal-header" ng-if="vm.resolve.title">\n  <h3 class="text-truncate" title="{{vm.resolve.title | translate}}">\n    {{vm.resolve.title | translate}}\n  </h3>\n</div>\n<div class="modal-body">\n  <form ng-if="vm.element" class="panel-body" name="vm.elementForm" novalidate>\n    <fieldset style="margin-top: -20px" ng-if="vm.features.messageTypeId">\n      <div class="legend form-block center">\n        <span translate>Message type</span>\n        <i c8y-icon="question-circle" uib-tooltip="{{\'Choose from which message type the value should be extracted\' | translate}}">\n        </i>\n      </div>\n\n      <div class="row">\n        <div class="form-group col-lg-4" ng-class="{\'has-error\': vm.invalid(\'messageTypeId\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.messageTypeId)}}">\n          <label for="messageTypeId">\n            {{\'Message ID\' | translate}}\n            <i c8y-icon="question-circle" uib-tooltip="{{\'This will be matched with message ID found in source specified on device type main page\' | translate}}">\n            </i>\n          </label>\n          <input type="number" class="form-control" id="messageTypeId" name="messageTypeId" ng-model="vm.element.messageTypeId" ng-min="0" ng-max="messageTypeIdMax()" required>\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div class="legend form-block center">\n        <span translate>General</span>\n      </div>\n\n      <div class="row">\n        <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'name\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.name)}}">\n          <label for="name" translate>\n            Name\n          </label>\n          <input type="text" class="form-control" id="name" name="name" ng-model="vm.element.name" c8y-autocomplete="off" required>\n        </div>\n        <div class="form-group col-lg-6 category-form-group" ng-class="{\'has-error\': vm.invalid(\'category\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.category)}}">\n          <label for="category" translate>\n            Display category\n          </label>\n          <input class="form-control" id="category" name="category" ng-model="vm.element.category" c8y-autocomplete="off" uib-typeahead="category.name for category in vm.categories | filter:{name: $viewValue}" typeahead-template-url="core_deviceDatabase4/modals/category-typeahead.html">\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div class="legend form-block center">\n        <span translate>Value selection</span>\n        <i c8y-icon="question-circle" uib-tooltip="{{\'Indicate from where the value should be extracted\' | translate}}">\n        </i>\n      </div>\n\n      <div class="row">\n        <div ng-if="vm.features.number" class="form-group col-lg-4" ng-class="{\'has-error\': vm.invalid(\'number\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.number)}}">\n          <label for="number">\n            <span>{{(features.number.label | translate) || (\'Number\' | translate)}}</span>\n          </label>\n          <input ng-if="!vm.features.number.useHex" type="number" class="form-control" id="number" name="number" ng-model="vm.element.number" ng-min="1" ng-max="65536" step="1" required>\n          <input ng-if="vm.features.number.useHex" type="text" class="form-control" id="number" name="number" ng-model="vm.element.number" placeholder="{{\'Hexadecimal number\' | translate}}" required>\n        </div>\n        <div ng-if="vm.features.browsePath" class="form-group col-lg-4" ng-class="{\'has-error\': vm.invalid(\'browsePath\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.browsePath)}}">\n          <label for="browsePath" translate>Browse path</label>\n          <input class="form-control" id="browsePath" name="browsePath" ng-model="vm.element.browsePath" placeholder="{{\'e.g.: 4:Boilers/4:Boiler #1\' | translate}}" required>\n        </div>\n        <div ng-if="vm.features.startBit" class="form-group col-lg-4" ng-class="{\'has-error\': vm.invalid(\'startBit\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.startBit)}}">\n          <label for="startBit" translate>\n            Start bit\n          </label>\n          <input type="number" class="form-control" id="startBit" name="startBit" ng-model="vm.element.startBit" ng-min="0" ng-max="vm.startBitMax()" step="1" required>\n        </div>\n        <div ng-if="vm.features.noBits" class="form-group col-lg-4" ng-class="{\'has-error\': vm.invalid(\'noBits\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.noBits)}}">\n          <label for="noBits" translate>\n            Number of bits\n          </label>\n          <input type="number" class="form-control" id="noBits" name="noBits" ng-model="vm.element.noBits" ng-min="1" ng-max="vm.noBitsMax(vm.element.startBit)" step="1" required>\n        </div>\n        <div ng-if="vm.features.nodeType" class="form-group col-lg-4" uib-tooltip="{{vm.validationHints(vm.elementForm.nodeType)}}">\n          <label for="nodeTypeValue" translate>\n            Node type\n          </label>\n          <select class="form-control" id="nodeTypeValue" name="nodeTypeValue" ng-model="vm.element.nodeType" ng-init="vm.element.nodeType=\'Variable\'" disabled="disabled">\n            <option value="Variable">Variable</option>\n          </select>\n        </div>\n        <div ng-if="vm.features.attributeType" class="form-group col-lg-4" uib-tooltip="{{vm.validationHints(vm.elementForm.attributeType)}}">\n          <label for="attributeType" translate>\n            Attribute type\n          </label>\n          <input class="form-control" id="attributeType" name="attributeType" ng-model="vm.element.attributeType" ng-init="vm.element.attributeType=\'Value\'" disabled="disabled">\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div class="legend form-block center">\n        <span translate>Value normalisation</span>\n        <i c8y-icon="question-circle" uib-tooltip="{{\'Define how the raw value should be transformed before storing in the platform\' | translate}}">\n        </i>\n      </div>\n\n      <div class="row">\n        <div ng-if="vm.features.multiplier" class="form-group col-lg-4" ng-class="{\'has-error\': vm.invalid(\'multiplier\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.multiplier)}}">\n          <label for="multiplier" translate>\n            Multiplier\n          </label>\n          <input type="number" class="form-control" id="multiplier" name="multiplier" ng-model="vm.element.multiplier" ng-min="vm.features.multiplier.min" step="{{vm.features.multiplier.step}}" required>\n        </div>\n        <div ng-if="vm.features.divisor" class="form-group col-lg-4" ng-class="{\'has-error\': vm.invalid(\'divisor\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.divisor)}}">\n          <label for="divisor" translate>\n            Divisor\n          </label>\n          <input type="number" class="form-control" id="divisor" name="divisor" ng-model="vm.element.divisor" ng-min="1" step="1" required>\n        </div>\n        <div ng-if="vm.features.offset" class="form-group col-lg-4" ng-class="{\'has-error\': vm.invalid(\'offset\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.offset)}}">\n          <label for="offset" translate>\n            Offset\n          </label>\n          <input type="number" class="form-control" id="offset" name="offset" ng-model="vm.element.offset" ng-min="vm.features.offset.min" ng-max="vm.features.offset.max" step="{{vm.features.offset.step}}" required>\n        </div>\n        <div ng-if="vm.features.decimalPlaces" class="form-group col-lg-4" ng-class="{\'has-error\': vm.invalid(\'decimalPlaces\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.decimalPlaces)}}">\n          <label for="decimalPlaces" translate>\n            Decimal places\n          </label>\n          <input type="number" class="form-control" id="decimalPlaces" name="decimalPlaces" ng-model="vm.element.decimalPlaces" ng-min="0" ng-max="5" step="1" required>\n        </div>\n        <div class="form-group col-lg-4" ng-class="{\'has-error\': vm.invalid(\'unit\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.unit)}}">\n          <label for="unit" translate>\n            Unit\n          </label>\n          <input type="text" class="form-control" id="unit" name="unit" ng-model="vm.element.unit">\n        </div>\n        <div ng-if="vm.element.meta.updateStatus" class="form-group col-lg-4" ng-class="{\'has-error\': vm.invalid(\'min\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.min, {validateValueInRegisterRange: vm.element.meta.valuesRange.base})}}">\n          <label for="min" translate>\n            Minimum\n          </label>\n          <input type="number" class="form-control" id="min" name="min" ng-model="vm.element.min" ng-min="vm.element.meta.valuesRange.base.min" ng-max="vm.element.meta.valuesRange.custom.max" step="{{vm.element.meta.valuesRange.base.step}}" validate-value-in-register-range="vm.element.meta.valuesRange.base" placeholder="{{vm.getValuePlaceholder(vm.element.meta.valuesRange.base.min)}}" required>\n        </div>\n        <div ng-if="vm.element.meta.updateStatus" class="form-group col-lg-4" ng-class="{\'has-error\': vm.invalid(\'max\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.max, {validateValueInRegisterRange: vm.element.meta.valuesRange.base})}}">\n          <label for="max" translate>\n            Maximum\n          </label>\n          <input type="number" class="form-control" id="max" name="max" ng-model="vm.element.max" ng-min="vm.element.meta.valuesRange.custom.min" ng-max="vm.element.meta.valuesRange.base.max" step="{{vm.element.meta.valuesRange.base.step}}" validate-value-in-register-range="vm.element.meta.valuesRange.base" placeholder="{{vm.getValuePlaceholder(vm.element.meta.valuesRange.base.max)}}" required>\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div class="legend form-block center" translate>\n        Options\n      </div>\n\n      <div class="row">\n        <div class="form-group col-lg-6">\n          <div class="checkbox">\n            <label>\n              <input type="checkbox" ng-model="vm.element.signed">\n              <span translate>Signed</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'Check if the value is signed number\' | translate}}">\n              </i>\n            </label>\n          </div>\n          <div class="checkbox" ng-if="vm.features.options.enumType">\n            <label>\n              <input type="checkbox" ng-model="vm.element.meta.enumType">\n              <span translate>Enumeration type</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'Check to define the mapping of possible values into strings\' | translate}}">\n              </i>\n            </label>\n          </div>\n          <div class="checkbox" ng-if="vm.features.options.bcd">\n            <label>\n              <input type="checkbox" ng-model="vm.element.bcd">\n              <span translate>Packed decimal</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'Check if the value is BCD encoded\' | translate}}">\n              </i>\n            </label>\n          </div>\n          <div class="checkbox" ng-if="vm.features.options.littleEndian">\n            <label>\n              <input type="checkbox" ng-model="vm.element.littleEndian">\n              <span translate>Little-endian</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'Check if the value is represented in little-endian format\' | translate}}">\n              </i>\n            </label>\n          </div>\n        </div>\n      </div>\n      <div class="row" ng-if="vm.element.meta.enumType">\n        <div class="form-group col-lg-12">\n          <label translate>Enumeration values</label>\n          <div ng-repeat="enumValue in vm.element.meta.enumValues">\n            <div class="row">\n              <ng-form name="vm.nestedEnumValueValueForm">\n                <div class="form-group col-lg-4" ng-class="{\'has-error\': vm.nestedEnumValueValueForm.$dirty && vm.nestedEnumValueValueForm.$invalid}" uib-tooltip="{{vm.validationHints(vm.nestedEnumValueValueForm, {validateValueInRegisterRange: vm.element.meta.valuesRange.custom})}}">\n                  <input type="number" class="form-control" ng-model="enumValue.value" ng-min="vm.element.meta.valuesRange.custom.min" ng-max="vm.element.meta.valuesRange.custom.max" step="{{vm.element.meta.valuesRange.custom.step}}" validate-value-in-register-range="vm.element.meta.valuesRange.custom" unique unique-in-array="vm.element.meta.enumValues" unique-prop-name="value" placeholder="{{\'Value\' | translate}}" uib-tooltip="{{\'Value\' | translate}}" required>\n                </div>\n              </ng-form>\n              <ng-form name="vm.nestedEnumValueLabelForm">\n                <div class="form-group col-lg-4" ng-class="{\'has-error\': vm.nestedEnumValueLabelForm.$dirty && vm.nestedEnumValueLabelForm.$invalid}" uib-tooltip="{{vm.validationHints(vm.nestedEnumValueLabelForm)}}">\n                  <input class="form-control" ng-model="enumValue.label" placeholder="{{\'Label\' | translate}}" uib-tooltip="{{\'Label\' | translate}}" required>\n                </div>\n              </ng-form>\n              <a class="btn btn-link pull-right" ng-click="vm.removeEnumValue(vm.element, enumValue)">\n                <i c8y-icon="minus"></i>\n                <span translate>Remove value</span>\n              </a>\n            </div>\n          </div>\n          <div class="row">\n            <a class="btn btn-link left" ng-click="vm.addEnumValue(vm.element)">\n              <i c8y-icon="plus"></i>\n              <span translate>Add value</span>\n            </a>\n          </div>\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div class="legend form-block center">\n        <span translate>Functionalities</span>\n        <i c8y-icon="question-circle" uib-tooltip="{{\'Choose which actions to perform with the value\' | translate}}">\n        </i>\n      </div>\n\n      <div class="row">\n        <div class="form-group col-lg-6">\n          <div class="checkbox" ng-if="vm.features.functionalities.showStatus">\n            <label>\n              <input type="checkbox" ng-model="vm.element.meta.showStatus" ng-disabled="vm.element.meta.updateStatus">\n              <span translate>Show status (read-only access)</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'Enable showing current value in UI (e.g. on Fieldbus widget)\' | translate}}">\n              </i>\n            </label>\n          </div>\n          <div ng-if="vm.features.functionalities.updateStatus && !vm.element.input" class="checkbox">\n            <label>\n              <input type="checkbox" ng-model="vm.element.meta.updateStatus" ng-change="vm.onUpdateStatusCheckboxClicked()">\n              <span translate>Update status (read/write access)</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'Enable changing current value from UI (e.g. using Fieldbus widget)\' | translate}}">\n              </i>\n            </label>\n          </div>\n          <div class="checkbox">\n            <label>\n              <input type="checkbox" ng-model="vm.element.meta.sendMeasurement">\n              <span translate>Send measurement</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'Create a measurement whenever the value is changed\' | translate}}">\n              </i>\n            </label>\n          </div>\n          <div class="checkbox">\n            <label>\n              <input type="checkbox" ng-model="vm.element.meta.raiseAlarm">\n              <span translate>Raise alarm</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'Create an alarm if the value is not equal to 0\' | translate}}">\n              </i>\n            </label>\n          </div>\n          <div class="checkbox">\n            <label>\n              <input type="checkbox" ng-model="vm.element.meta.sendEvent">\n              <span translate>Send event</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'Create an event whenever the value is changed\' | translate}}">\n              </i>\n            </label>\n          </div>\n          <div ng-if="vm.features.functionalities.sendManagedObjectUpdate" class="checkbox">\n            <label>\n              <input type="checkbox" ng-model="vm.element.meta.sendManagedObjectUpdate">\n              <span translate>Update managed object</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'Update a fragment in managed object whenever the value is changed\' | translate}}">\n              </i>\n            </label>\n          </div>\n        </div>\n      </div>\n      <div ng-if="vm.element.meta.sendMeasurement">\n        <div class="row">\n          <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'measurementType\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.measurementType)}}">\n            <label for="measurementType" translate>\n              Measurement type\n            </label>\n            <input class="form-control" id="measurementType" name="measurementType" ng-pattern="vm.PATTERN_VALIDATE_FRAGMENT_SERIES" ng-model="vm.element.measurementMapping.type" ng-required="vm.element.meta.sendMeasurement">\n          </div>\n          <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'measurementSeries\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.measurementSeries)}}">\n            <label for="measurementSeries" translate>\n              Measurement series\n            </label>\n            <input class="form-control" id="measurementSeries" name="measurementSeries" ng-pattern="vm.PATTERN_VALIDATE_FRAGMENT_SERIES" ng-model="vm.element.measurementMapping.series" ng-required="vm.element.meta.sendMeasurement">\n          </div>\n        </div>\n      </div>\n      <div ng-if="vm.element.meta.raiseAlarm">\n        <div class="row">\n          <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'alarmType\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.alarmType)}}">\n            <label for="alarmType" translate>\n              Alarm type\n            </label>\n            <input class="form-control" id="alarmType" name="alarmType" ng-model="vm.element.alarmMapping.type" ng-required="vm.element.meta.raiseAlarm">\n          </div>\n          <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'alarmText\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.alarmText)}}">\n            <label for="alarmText" translate>\n              Alarm text\n            </label>\n            <input class="form-control" id="alarmText" name="alarmText" ng-model="vm.element.alarmMapping.text" ng-required="vm.element.meta.raiseAlarm">\n          </div>\n          <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'alarmSeverity\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.alarmSeverity)}}">\n            <label for="alarmSeverity" translate>\n              Alarm severity\n            </label>\n            <select class="form-control" id="alarmSeverity" name="alarmSeverity" ng-model="vm.element.alarmMapping.severity" ng-options="(severity | translate) for severity in vm.alarmSeverities" ng-required="vm.element.meta.raiseAlarm">\n            </select>\n          </div>\n        </div>\n      </div>\n      <div ng-if="vm.element.meta.sendEvent">\n        <div class="row">\n          <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'eventType\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.eventType)}}">\n            <label for="eventType" translate>\n              Event type\n            </label>\n            <input class="form-control" id="eventType" name="eventType" ng-model="vm.element.eventMapping.type" ng-required="vm.element.meta.sendEvent">\n          </div>\n          <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'eventText\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.eventText)}}">\n            <label for="eventText" translate>\n              Event text\n            </label>\n            <input class="form-control" id="eventText" name="eventText" ng-model="vm.element.eventMapping.text" ng-required="vm.element.meta.sendEvent">\n          </div>\n        </div>\n        <div class="row" ng-if="vm.features.functionalities.sendEvent.fragmentType || vm.features.functionalities.sendEvent.innerType">\n          <div ng-if="vm.features.functionalities.sendEvent.fragmentType" class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'eventFragmentType\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.eventFragmentType)}}">\n            <label for="eventFragmentType" translate>\n              Event fragment\n            </label>\n            <input class="form-control" id="eventFragmentType" name="eventFragmentType" ng-model="vm.element.eventMapping.fragmentType">\n          </div>\n          <div ng-if="vm.features.functionalities.sendEvent.innerType" class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'eventInnerType\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.eventInnerType)}}">\n            <label for="eventInnerType">\n              <span translate>Event property</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'Property nested inside the fragment\' | translate}}">\n              </i>\n            </label>\n            <input class="form-control" id="eventInnerType" name="eventInnerType" ng-model="vm.element.eventMapping.innerType">\n          </div>\n        </div>\n      </div>\n      <div ng-if="vm.element.meta.sendManagedObjectUpdate">\n        <div class="row">\n          <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'managedObjectFragmentType\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.managedObjectFragmentType)}}">\n            <label for="managedObjectFragmentType" translate>\n              Managed object fragment\n            </label>\n            <input class="form-control" id="managedObjectFragmentType" name="managedObjectFragmentType" ng-model="vm.element.managedObjectMapping.fragmentType" ng-required="vm.element.meta.sendManagedObjectUpdate">\n          </div>\n          <div class="form-group col-lg-6" ng-class="{\'has-error\': vm.invalid(\'managedObjectInnerType\')}" uib-tooltip="{{vm.validationHints(vm.elementForm.managedObjectInnerType)}}">\n            <label for="managedObjectInnerType">\n              <span translate>Managed object property</span>\n              <i c8y-icon="question-circle" uib-tooltip="{{\'Property nested inside the fragment\' | translate}}">\n              </i>\n            </label>\n            <input class="form-control" id="managedObjectInnerType" name="managedObjectInnerType" ng-model="vm.element.managedObjectMapping.innerType">\n          </div>\n        </div>\n      </div>\n    </fieldset>\n  </form>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-disabled="vm.elementForm.$invalid" ng-click="vm.save()" translate>\n    OK\n  </button>\n  <button class="btn btn-default" ng-click="vm.dismiss()" translate>\n    Close\n  </button>\n</div>\n',
e.put("core_deviceDatabase4/modals/configure-register.html",t),e.put("/apps/core/deviceDatabase4/modals/configure-register.html",t),t='<div class="modal-header">\n  <h3 translate>Import device type</h3>\n</div>\n<div class="modal-body">\n  <form class="deviceTypesSearchForm">\n    <div class="input-group">\n      <span class="input-group-btn" dropdown>\n        <button class="btn btn-default" disabled="disabled">\n          <i c8y-icon="search"></i>\n        </button>\n      </span>\n      <input type="search" class="form-control" placeholder="{{\'Search device type\' | translate}}&hellip;" ng-model="vm.deviceTypesFilter.text">\n    </div>\n  </form>\n\n  <div class="command-templates-list list-group">\n    <label><span translate>Choose predefined device type</span>:</label>\n    <div ng-repeat="deviceTypeInfo in vm.predefinedDeviceTypeInfos | filter:vm.deviceTypesFilter.text" class="list-group-item interact" ng-class="{\'active\': vm.isPredefinedDeviceTypeInfoSelected(deviceTypeInfo)}" ng-click="vm.onPredefinedDeviceTypeInfoSelected(deviceTypeInfo)">\n      <a class="btn btn-primary btn-xs showOnHover pull-right" uib-tooltip="{{\'Download\' | translate}}" tooltip-append-to-body="true" download="{{vm.downloadFileName(deviceTypeInfo)}}" ng-href="data:application/json;base64,{{vm.downloadFileHref(deviceTypeInfo)}}">\n        <i c8y-icon="download"></i>\n      </a>\n      <span class="list-group-item-heading">\n        <span>{{deviceTypeInfo.name}}</span>\n        <small ng-if="deviceTypeInfo.category" class="text-muted">\n          {{deviceTypeInfo.category}}\n        </small>\n      </span>\n      <span class="list-group-item-text">\n        <small class="text-muted">\n          {{deviceTypeInfo.description}}\n        </small>\n      </span>\n    </div>\n  </div>\n\n  <div class="form-group">\n    <label><span translate>Or load it from file</span>:</label>\n    <div class="input-group" ng-file-select="vm.onCustomDeviceTypeFileSelected($files)">\n      <input class="form-control" ng-model="vm.selection.custom.file.name" placeholder="{{\'Choose file to upload\' | translate}}&hellip;" readonly="readonly" required>\n      <span class="input-group-btn">\n        <button class="btn btn-primary">\n          <span><i c8y-icon="upload"></i></span>\n        </button>\n      </span>\n    </div>\n  </div>\n\n  <form name="vm.importForm">\n    <div class="form-group" ng-class="{\'has-error\': vm.importForm.name.$dirty && vm.importForm.name.$invalid}">\n      <label for="name"><span translate>And save with the following name</span>:</label>\n      <input class="form-control" id="name" name="name" ng-model="vm.selection.newName.value" placeholder="{{\'New device type name\' | translate}}" ng-change="vm.onNewNameEdited()" required>\n    </div>\n  </form>\n</div>\n<div class="modal-footer">\n  <button type="button" class="btn btn-primary" ng-click="vm.import(selectedDeviceType)" ng-disabled="!((vm.selection.predefined.deviceType || vm.selection.custom.deviceType) && vm.importForm.$valid)" translate>\n    Import\n  </button>\n  <button type="button" class="btn btn-default" ng-click="vm.dismiss()" translate>\n    Cancel\n  </button>\n</div>\n',e.put("core_deviceDatabase4/modals/import-device-type.html",t),e.put("/apps/core/deviceDatabase4/modals/import-device-type.html",t),t='<div class="modal-header">\n  <h3>{{\'Select properties\' | translate}}</h3>\n</div>\n<div class="modal-body">\n  <div class="form-group">\n    <input class="form-control" placeholder="{{\'Search property\' | translate}}" ng-model="vm.search.$">\n  </div>\n  <div class="row form-group" style="border-bottom: 1px solid #ddd; vertical-align: bottom">\n    <div class="col-lg-2">\n      <label translate>Show</label>\n    </div>\n    <div class="col-lg-4">\n      <label translate>Label</label>\n    </div>\n    <div class="col-lg-6">\n      <label translate>Property</label>\n    </div>\n  </div>\n  <div class="form-group">\n    <div class="row property" ng-class="{\'bg-info\': vm.isParent(property)}" ng-repeat="property in vm.properties | orderBy:vm.orderByFn | filter:vm.search">\n      <div class="col-lg-2">\n        <input ng-if="!vm.isParent(property)" type="radio" name="property" ng-model="vm.selected" ng-value="property">\n      </div>\n      <div class="col-lg-4">\n        {{property.label}}\n      </div>\n      <div class="col-lg-6">\n        {{property.keyPath.join(\'.\')}}\n      </div>\n    </div>\n    <p ng-if="!vm.properties.length" class="bg-warning" style="padding: 20px" translate>\n      The selected device does not have coil status and register properties.\n    </p>\n  </div>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" type="button" ng-disabled="!vm.selected" ng-click="vm.close({ $value: vm.selected })">\n    {{\'Select\' | translate}}\n  </button>\n  <button class="btn btn-default" type="button" ng-click="vm.dismiss()">\n    {{\'Cancel\' | translate}}\n  </button>\n</div>\n',e.put("core_deviceDatabase4/modals/select-fieldbus-property.html",t),e.put("/apps/core/deviceDatabase4/modals/select-fieldbus-property.html",t)}angular.module("c8y.deviceDatabase4").run(["$templateCache",e])}();