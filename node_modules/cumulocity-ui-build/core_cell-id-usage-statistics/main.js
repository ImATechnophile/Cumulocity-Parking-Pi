/* core_cell-id-usage-statistics 9.3.0 2018-03-26T16:24:30+00:00 796b68a031b1+ (release/9.3.0) tip */
function _asyncToGenerator(t){return function(){var e=t.apply(this,arguments);return new Promise(function(t,n){function s(i,a){try{var r=e[i](a),c=r.value}catch(t){return void n(t)}return r.done?void t(c):Promise.resolve(c).then(function(t){s("next",t)},function(t){s("throw",t)})}return s("next")})}}function _asyncToGenerator(t){return function(){var e=t.apply(this,arguments);return new Promise(function(t,n){function s(i,a){try{var r=e[i](a),c=r.value}catch(t){return void n(t)}return r.done?void t(c):Promise.resolve(c).then(function(t){s("next",t)},function(t){s("throw",t)})}return s("next")})}}!function(){"use strict";angular.module("c8y.cellIdUsageStatistics",[])}(),function(){"use strict";var t=_.identity;angular.module("c8y.cellIdUsageStatistics").constant("cellIdUsageStatisticsConstants",{TENANT_STATS_SERVICE_ENDPOINT:"service/cellid/statistics/summary",SUBTENANTS_STATS_SERVICE_ENDPOINT:"service/cellid/statistics/allTenantsSummary",SUBTENANT_STATS_COLUMNS:{tenantId:{name:"tenantId",header:t("ID"),cell:{template:"{{item.tenantId}}"},filteringByPattern:{itemProperty:"tenantId"},sortingByPath:{itemProperty:"tenantId"}},apiRequests:{name:"apiRequests",header:t("API requests"),cell:{template:"{{item.apiRequests}}"},filteringByMinMax:{itemProperty:"apiRequests"},sortingByPath:{itemProperty:"apiRequests"}},activeDevices:{name:"activeDevices",header:t("Active devices"),cell:{template:"{{item.activeDevices}}"},filteringByMinMax:{itemProperty:"activeDevices"},sortingByPath:{itemProperty:"activeDevices"}}}})}(),function(){"use strict";function t(t,e,n){t.addNavigation({parent:n("Tenants"),name:n("Cell ID usage statistics"),path:"cellid-statistics",icon:"sellsy",showIf:["c8yPermissions",function(t){return t.mustHaveAnyRole(["ROLE_TENANT_STATISTICS_READ"])}]}),e.when("/cellid-statistics",{template:"<c8y-cell-id-usage-statistics></c8y-cell-id-usage-statistics>"})}t.$inject=["c8yNavigatorProvider","c8yViewsProvider","gettext"],angular.module("c8y.cellIdUsageStatistics").config(t)}(),function(){"use strict";function t(t,e,n,s,i){function a(){return[s.getColumn(m.tenantId),s.getColumn(m.apiRequests),s.getColumn(m.activeDevices)]}function r(t){return{tenantId:_.get(t,"tenant"),apiRequests:_.get(t,"statistics.apiRequests"),activeDevices:_.get(t,"statistics.activeDevices")}}var c=function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function n(s){var i;return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.t0=e,n.next=3,t.get(e.url(l),{params:e.timeOrderFilter(e.pageSizeNoTotalFilter(s))});case 3:return n.t1=n.sent,i=n.t0.getResData.call(n.t0,n.t1),n.abrupt("return",r(i));case 6:case"end":return n.stop()}},n,this)}));return function(t){return n.apply(this,arguments)}}(),o=function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function n(s){var i;return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,u();case 2:if(n.sent){n.next=4;break}return n.abrupt("return",[]);case 4:return n.t0=e,n.next=7,t.get(e.url(d),{params:e.timeOrderFilter(e.pageSizeNoTotalFilter(s))});case 7:return n.t1=n.sent,i=n.t0.getResData.call(n.t0,n.t1),n.abrupt("return",_.map(i,r));case 10:case"end":return n.stop()}},n,this)}));return function(t){return n.apply(this,arguments)}}(),u=function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.t0=_,t.next=3,n.list();case 3:return t.t1=t.sent,t.abrupt("return",!t.t0.isEmpty.call(t.t0,t.t1));case 5:case"end":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}(),l=i.TENANT_STATS_SERVICE_ENDPOINT,d=i.SUBTENANTS_STATS_SERVICE_ENDPOINT,m=i.SUBTENANT_STATS_COLUMNS,p={getSubtenantListColumns:a,getTenantStatisticsFor:c,getSubtenantsStatisticsFor:o};return p}t.$inject=["$http","c8yBase","c8yTenant","c8yFilteringSortingCollections","cellIdUsageStatisticsConstants"],angular.module("c8y.cellIdUsageStatistics").factory("cellIdUsageStatisticsService",t)}(),function(){"use strict";function t(t,e,n,s,i,a,r,c,o){function u(){i.changeTitle({title:o("Cell ID usage statistics")})}function l(){var t=n.dateFrom,e=n.dateTo,s=moment().startOf("month").toDate(),i=moment().add(1,"day").toDate();b.dateFrom=r.stringToDate(t)||s,b.dateTo=r.stringToDate(e)||i}function d(){b.subtenantList.columns=c.getSubtenantListColumns()}function m(){b.subtenantList.csvHeaders=_.map(b.subtenantList.columns,function(t){return _.get(t,"header.csv")||_.get(t,"header.text")||_.get(t,"header")})}function p(){var t=v();t.dateFrom&&t.dateTo&&s.search(t)}function v(){return{dateFrom:r.dateToString(b.dateFrom),dateTo:r.dateToString(b.dateTo)}}function g(){s.search({})}function f(){return _.map(b.subtenantList.filteredSortedStatisticsItems,function(t){return _.at(t,["tenantId","apiRequests","activeDevices"])})}function S(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:b.subtenantList.columnsConfig;b.subtenantList.columnsConfig=t;var e=b.subtenantList,n=e.statisticsItems,s=e.columns;return a.filterSort(n,s,t)}var y=function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return u(),t.next=3,T();case 3:case"end":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}(),T=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return l(),e.next=3,h();case 3:d(),m(),b.subtenantList.filteredSortedStatisticsItems=S(),t.$apply();case 7:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}(),h=function(){var t=_asyncToGenerator(regeneratorRuntime.mark(function t(){var n,s,i,a;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return n=v(),t.next=3,e.all({tenantStatistics:c.getTenantStatisticsFor(n),subtenantsStatistics:c.getSubtenantsStatisticsFor(n)});case 3:s=t.sent,i=s.tenantStatistics,a=s.subtenantsStatistics,b.tenantStatistics=i,b.subtenantList.statisticsItems=a;case 8:case"end":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}(),b=this;_.assign(b,{$onInit:y,refresh:T,doFilter:p,clearFilter:g,tenantStatistics:{tenantId:void 0,apiRequests:0,activeDevices:0},subtenantList:{csvHeaders:[],csvData:f,columns:[],columnsConfig:{},onColumnsConfigChanged:function(t){b.subtenantList.filteredSortedStatisticsItems=S(t)},statisticsItems:[],filteredSortedStatisticsItems:[],goToSubtenant:function(t){var e=t.tenantId;s.path("/tenants/"+e)}}})}t.$inject=["$rootScope","$q","$routeParams","$location","c8yTitle","c8yFilteringSortingCollections","c8yUtil","cellIdUsageStatisticsService","gettext"],angular.module("c8y.cellIdUsageStatistics").component("c8yCellIdUsageStatistics",{templateUrl:"core_cell-id-usage-statistics/cell-id-usage-statistics.html",controllerAs:"vm",controller:t})}(),function(){"use strict";function t(t){var e;e='<c8y-ui-action-bar-set>\n  <li class="navbar-form" action-bar-position="left">\n    <form class="form-inline">\n      <label style="padding-right: 5px" translate>Statistic period:</label>\n      <div class="form-group datepicker">\n        <input class="form-control" placeholder="{{\'From`date`\' | translate}}" uib-datepicker-popup ng-model="vm.dateFrom" datepicker-options="{maxDate: vm.dateTo}" is-open="vm.dateFromOpened" ng-click="vm.dateFromOpened=true" style="width: 120px; text-align: center">\n      </div>\n      <div class="form-group datepicker">\n        <input class="form-control" placeholder="{{\'To`date`\' | translate}}" uib-datepicker-popup ng-model="vm.dateTo" datepicker-options="{minDate: vm.dateFrom}" is-open="vm.dateToOpened" ng-click="vm.dateToOpened=true" style="width: 120px; text-align: center">\n      </div>\n      <button type="button" class="btn btn-link" ng-click="vm.doFilter()" title="{{\'Filter\' | translate}}">\n        <i c8y-icon="filter"></i> <span translate>Filter</span>\n      </button>\n      <button type="button" class="btn btn-link" ng-if="vm.dateFrom || vm.dateTo" ng-click="vm.clearFilter()" title="{{\'Clear\' | translate}}">\n        <i c8y-icon="times"></i> <span translate>Clear</span>\n      </button>\n    </form>\n  </li>\n\n  <button class="btn btn-link" c8y-csv-exporter c8y-headers="vm.subtenantList.csvHeaders" c8y-data="vm.subtenantList.csvData()">\n    <i c8y-icon="table"></i> <span translate>Export CSV</span>\n  </button>\n\n  <button type="button" class="btn btn-link" ng-click="vm.refresh()">\n    <i c8y-icon="refresh" ng-class="{\'fa-spin\': refreshLoading}"></i>\n    <span translate>Reload</span>\n  </button>\n</c8y-ui-action-bar-set>\n\n<div class="row">\n  <div ng-if="vm.tenantStatistics.tenantId !== undefined" class="col-sm-6">\n    <div class="card">\n      <div class="card-header">{{vm.tenantStatistics.tenantId}}</div>\n      <hr>\n      <ul class="list-group">\n        <li class="list-group-item">\n          {{vm.tenantStatistics.apiRequests}}\n          <span translate>API requests</span>\n        </li>\n        <li class="list-group-item">\n          {{vm.tenantStatistics.activeDevices}}\n          <span translate>active devices</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <c8y-filtered-sorted-list ng-if="vm.subtenantList.filteredSortedStatisticsItems.length > 0" class="col-sm-6" columns="vm.subtenantList.columns" columns-config="vm.subtenantList.columnsConfig" on-columns-config-changed="vm.subtenantList.onColumnsConfigChanged(columnsConfig)" items="vm.subtenantList.filteredSortedStatisticsItems" on-item-click="vm.subtenantList.goToSubtenant(item)">\n  </c8y-filtered-sorted-list>\n</div>\n',t.put("core_cell-id-usage-statistics/cell-id-usage-statistics.html",e),t.put("/apps/core/cell-id-usage-statistics/cell-id-usage-statistics.html",e)}angular.module("c8y.cellIdUsageStatistics").run(["$templateCache",t])}();