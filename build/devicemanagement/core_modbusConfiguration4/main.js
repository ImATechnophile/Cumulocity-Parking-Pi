/* core_modbusConfiguration4 9.3.0 2018-03-26T16:25:38+00:00 796b68a031b1+ (release/9.3.0) tip */
function _asyncToGenerator(e){return function(){var n=e.apply(this,arguments);return new Promise(function(e,i){function a(t,r){try{var s=n[t](r),o=s.value}catch(e){return void i(e)}return s.done?void e(o):Promise.resolve(o).then(function(e){a("next",e)},function(e){a("throw",e)})}return a("next")})}}function _asyncToGenerator(e){return function(){var n=e.apply(this,arguments);return new Promise(function(e,i){function a(t,r){try{var s=n[t](r),o=s.value}catch(e){return void i(e)}return s.done?void e(o):Promise.resolve(o).then(function(e){a("next",e)},function(e){a("throw",e)})}return a("next")})}}function _asyncToGenerator(e){return function(){var n=e.apply(this,arguments);return new Promise(function(e,i){function a(t,r){try{var s=n[t](r),o=s.value}catch(e){return void i(e)}return s.done?void e(o):Promise.resolve(o).then(function(e){a("next",e)},function(e){a("throw",e)})}return a("next")})}}function _defineProperty(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}!function(){"use strict";angular.module("c8y.modbusConfiguration4",[])}(),function(){"use strict";angular.module("c8y.modbusConfiguration4").constant("modbusConfigurationConstants",{FRAGMENTS:{MODBUS:"c8y_ModbusConfiguration",CANBUS:"c8y_CanConfiguration",OPCUA:"c8y_OPCUAGateway"}})}(),function(){"use strict";function e(e,n,i){function a(e){function n(n,i,a,t,r){var s=this;return _asyncToGenerator(regeneratorRuntime.mark(function o(){var l,d,c;return regeneratorRuntime.wrap(function(s){for(;;)switch(s.prev=s.next){case 0:return s.next=2,n.all({hasApplication:r.isApplicationAvailable(),hasFragment:t.detailCached(i.deviceId).then(a.getResData).then(function(n){return _.has(n,e)})});case 2:return l=s.sent,d=l.hasApplication,c=l.hasFragment,s.abrupt("return",d&&c);case 6:case"end":return s.stop()}},o,s)}))()}return n.$inject=["$q","$routeParams","c8yBase","c8yDevices","c8yFieldbus"],n}var t=n.FRAGMENTS,r="/device/:deviceId";e.when(r,{name:i("Modbus"),icon:"microchip",template:'<c8y-fieldbus-config tab="modbus"></c8y-fieldbus-config>',showIf:a(t.MODBUS)}),e.when(r,{name:i("CAN Bus"),icon:"share-alt",template:'<c8y-fieldbus-config tab="canbus"></c8y-fieldbus-config>',showIf:a(t.CANBUS)}),e.when(r,{name:i("OPCUA"),icon:"cogs",template:'<c8y-fieldbus-config tab="opcua"></c8y-fieldbus-config>',showIf:a(t.OPCUA)})}e.$inject=["c8yViewsProvider","modbusConfigurationConstants","gettext"],angular.module("c8y.modbusConfiguration4").config(e)}(),function(){"use strict";function e(e,n,i,a,t,r,s,o){function l(){T="new"+w.mode+"DeviceForm"}function d(e){return c(),n.invalid(w,T,e)}function c(){var e=w.mode,n=w.fieldErrors;if("TCP"===e||"RTU"===e){var i=w[T],a=i.address;if(a){var t=a.$modelValue;if("TCP"===e){var r=i.ipAddress,s=r.$modelValue;_.isUndefined(t)||a.$setValidity(n.ADDRESS_INVALID,u(t));var o=t&&s&&_.some(w.devices,{address:t,ipAddress:s,protocol:"TCP"});a.$setValidity(n.ADDRESSES_IN_USE,!o),r.$setValidity(n.ADDRESSES_IN_USE,!o)}else if("RTU"===e){var l=t&&_.some(w.devices,{address:t,protocol:"RTU"});a.$setValidity(n.ADDRESS_IN_USE,!l)}}}}function u(e){return e<=247||255===e}function v(e){var i=_.get(w,T+"."+e);return i?n.validationHints(i,w.fieldErrorsToMessages):""}function m(){return _.get(w,T+".$invalid")||_.get(w,"newDevice.adding")}function p(){w.newDevice={name:null,deviceType:null,address:null}}function f(){b(),w.reloadDevices(),i.success(o("New child device has been added!"))}function g(){w.newDevice.adding=!1,i.danger(o("Failed to add new child device."))}function b(){_.unset(w,"newDevice");var e=w[T];e.$setPristine(),document.getElementsByName("vm."+T)[0].reset()}function y(){return h()?function(e){var n=_.get(e,"protocol");return n===w.mode}:function(){return!0}}function C(){var e=w.device,n=w.mode,i=!1;return h()?"TCP"===n?i=s.supportsOperation(e,"c8y_ModbusDevice"):"RTU"===n&&(i=s.supportsOperation(e,"c8y_ModbusDevice")&&e.c8y_SerialConfiguration):A()&&"CAN"===n&&(i=s.supportsOperation(e,"c8y_CanDevice")),i}function h(){return"modbus"===w.tab}function A(){return"canbus"===w.tab}function D(){return"opcua"===w.tab}var R=function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function n(){var i,s,o;return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:if(i=w.mode,s=w.device,o=w.newDevice,o.adding=!0,o.protocol=i,n.prev=3,!h()){n.next=9;break}return n.next=7,a.create(s,o);case 7:n.next=17;break;case 9:if(!A()){n.next=14;break}return n.next=12,t.create(s,o);case 12:n.next=17;break;case 14:if(!D()){n.next=17;break}return n.next=17,r.create(s,o);case 17:f(),n.next=23;break;case 20:n.prev=20,n.t0=n.catch(3),g();case 23:e.$apply();case 24:case"end":return n.stop()}},n,this,[[3,20]])}));return function(){return n.apply(this,arguments)}}(),w=this,T=void 0;_.assign(w,{$onInit:l,shouldShowSection:C,isModbusTab:h,isCanBusTab:A,isOPCUATab:D,invalid:d,getFieldValidationHints:v,isFormInvalid:m,startAddingNewDevice:p,addNewDevice:R,clearNewDevice:b,filterByMode:y})}e.$inject=["$rootScope","c8yBase","c8yAlert","c8yModbusDevice","c8yCanbusDevice","c8yOPCUADevice","c8yDevices","gettext"],angular.module("c8y.modbusConfiguration4").component("c8yFieldbusDeviceList",{templateUrl:"core_modbusConfiguration4/fieldbus-device-list.html",bindings:{tab:"@",mode:"@",fieldErrors:"<",fieldErrorsToMessages:"<",deviceConfigurationOptions:"<",device:"<",devices:"<",reloadDevices:"<",onClickDelete:"<",navigateToDetail:"<"},controllerAs:"vm",controller:e})}(),function(){"use strict";function e(e,n,i,a,t,r,s,o,l,d,c,u,v){function m(e){return x()&&s.supportsOperation(e,"c8y_CanConfiguration")||N()&&s.supportsOperation(e,"c8y_ModbusConfiguration")||F()&&s.supportsOperation(e,"c8y_OPCUAConfiguration")}function p(e){return _.get(e,"c8y_SerialConfiguration",{})}function f(e){var n={};return e&&(N()?n=e.c8y_ModbusConfiguration:x()?n=e.c8y_CanConfiguration:F()&&(e.c8y_OPCUAGateway&&(e.c8y_OPCUAGateway.transmitRate=e.c8y_OPCUAGateway.transmitRate||0,_.unset(e,"c8y_OPCUAGateway.userIdentityPassword")),n=e.c8y_OPCUAGateway)),n}function g(e){var n=C({device:e,fieldbusDeviceFragment:"c8y_ModbusDevice"});return{id:e.id,name:e.name,deviceType:_.get(n,"name"),address:e.c8y_ModbusDevice.address,ipAddress:e.c8y_ModbusDevice.ipAddress,protocol:e.c8y_ModbusDevice.protocol}}function b(e){var n=C({device:e,fieldbusDeviceFragment:"c8y_CanDevice"});return{id:e.id,name:e.name,deviceType:_.get(n,"name")}}function y(e){var n=C({device:e,fieldbusDeviceFragment:"c8y_OPCUADevice"});return{id:e.id,name:e.name,deviceType:_.get(n,"name"),directoryPath:e.c8y_OPCUADevice.browsePath}}function C(e){var n=e.device,i=e.fieldbusDeviceFragment;return _(j.types).find(function(e){var a=e.id;return _.get(n,i+".type")==="/inventory/managedObjects/"+a})}function h(e){a.url("device/"+e.id)}function A(){return N()&&_.get(G,"device.c8y_SerialConfiguration")}function D(e){return t.create({deviceId:e.id,description:u("Set serial configuration"),c8y_SerialConfiguration:e.c8y_SerialConfiguration})}function R(e){var i=n.resolve();return N()&&e.c8y_ModbusConfiguration?i=w(e):x()?i=T(e):F()&&(i=P(e)),i}function w(e){return t.create({deviceId:e.id,description:u("Set modbus configuration"),c8y_ModbusConfiguration:e.c8y_ModbusConfiguration})}function T(e){return t.create({deviceId:e.id,description:u("Set CAN Bus configuration"),c8y_CanConfiguration:e.c8y_CanConfiguration})}function P(e){var n=e.c8y_OPCUAGateway.transmitRate,i=_.merge(_.cloneDeep(e),{c8y_OPCUAGateway:{transmitRate:0===n?void 0:n}});return s.update(_.pick(i,["id","c8y_OPCUAGateway"]))}function O(e,n){return(N()||F())&&S(e),F()&&U(e),r.invalid(G,e,n)}function S(e){var n=G[e],i=n.pollingRate;if(i){var a=n.transmitRate,t=!0,r=!0,s=i.$modelValue<=a.$modelValue;F()&&0===a.$modelValue&&(s=!0),(!_.isInteger(a.$modelValue)||a.$modelValue<=0)&&(t=!1),(!_.isInteger(i.$modelValue)||i.$modelValue<=0)&&(r=!1),a.$setValidity(W.ONLY_NATURAL_NUMBERS_ALLOWED,t),a.$setValidity(W.POLLING_RATE_LARGER_THAN_TRANSMIT_RATE,s),i.$setValidity(W.ONLY_NATURAL_NUMBERS_ALLOWED,r),i.$setValidity(W.POLLING_RATE_LARGER_THAN_TRANSMIT_RATE,s)}}function U(e){var n=G[e],i=n.OPCUAUrl,a=c.validation.opcuaBrowsePath.pattern,t=i.$modelValue;i.$setValidity(W.INVALID_URL,!t||a.test(t))}function N(){return"modbus"===G.tab}function x(){return"canbus"===G.tab}function F(){return"opcua"===G.tab}var I,E=function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function n(){return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,B();case 2:return n.next=4,$();case 4:return n.next=6,k();case 6:e.$apply();case 7:case"end":return n.stop()}},n,this)}));return function(){return n.apply(this,arguments)}}(),B=function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function n(){var i;return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.t0=r,n.next=3,s.detail(q);case 3:n.t1=n.sent,i=n.t0.getResData.call(n.t0,n.t1),N()?_.defaults(i.c8y_SerialConfiguration,{baudRate:19200,dataBits:8,parity:"E",stopBits:1}):x()&&(G.serialConfigurationOptions.baudRates=[1e5,125e3,25e4,5e5,1e6]),G.device=i,e.$apply();case 8:case"end":return n.stop()}},n,this)}));return function(){return n.apply(this,arguments)}}(),$=function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function n(){var i,a;return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return i=G.device,_.assign(G,{hasSerialConfigOperation:s.supportsOperation(i,"c8y_SerialConfiguration"),hasFieldBusConfigOperation:m(i),serialConfiguration:p(i),fieldbusConfiguration:f(i)}),n.next=4,d.getAvailableDeviceTypes();case 4:a=n.sent,j.types=_.filter(a,function(e){var n=e.fieldbusType;return N()&&"modbus"===n||x()&&"canbus"===n||F()&&"opcua"===n}),e.$apply();case 7:case"end":return n.stop()}},n,this)}));return function(){return n.apply(this,arguments)}}(),k=function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function n(){var i;return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,s.childDevices(q);case 2:i=n.sent,G.devices=_.map(i,function(e){var n=void 0;return N()&&e.c8y_ModbusDevice?n=g(e):x()&&e.c8y_CanDevice?n=b(e):F()&&e.c8y_OPCUADevice&&(n=y(e)),n}),e.$apply();case 5:case"end":return n.stop()}},n,this)}));return function(){return n.apply(this,arguments)}}(),M=function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function n(i){return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,o({title:u("Confirm delete?"),body:v.getString('Do you really want to remove device "{{name}}" with id {{id}}?',i),size:"sm",labels:{ok:u("Delete")},status:"danger"});case 3:return n.next=5,s.remove(i);case 5:G.devices=_.without(G.devices,i),l.success(u("Device deleted!")),e.$apply(),n.next=13;break;case 10:n.prev=10,n.t0=n.catch(0),n.t0&&l.danger(n.t0);case 13:case"end":return n.stop()}},n,this,[[0,10]])}));return function(e){return n.apply(this,arguments)}}(),L=function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function n(){return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,D(G.device);case 2:l.success(u("Operation to apply settings has been sent!")),e.$apply();case 4:case"end":return n.stop()}},n,this)}));return function(){return n.apply(this,arguments)}}(),V=function(){var n=_asyncToGenerator(regeneratorRuntime.mark(function n(){return regeneratorRuntime.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,R(G.device);case 2:l.success(u("Operation to apply settings has been sent!")),e.$apply();case 4:case"end":return n.stop()}},n,this)}));return function(){return n.apply(this,arguments)}}(),G=this,q=i.deviceId,H={baudRates:[110,300,600,1200,2400,4800,9600,14400,19200,38400,57600,115200,25e4,460800,5e5,921600,1e6],dataBits:[8],parities:["N","E","O"],stopBits:[1,2]},j={types:[]},W={IS_REQUIRED:"required",ADDRESS_IN_USE:"address-in-use",ADDRESSES_IN_USE:"addresses-in-use",ADDRESS_INVALID:"address-invalid",POLLING_RATE_LARGER_THAN_TRANSMIT_RATE:"polling-rate-larger-than-transmit-rate",ONLY_NATURAL_NUMBERS_ALLOWED:"only-natural-numbers-allowed",IPADDRESS_INVALID_FORMAT:"ip",INVALID_URL:"invalid-url"},Y=(I={},_defineProperty(I,W.IS_REQUIRED,u("This field is required!")),_defineProperty(I,W.ADDRESS_IN_USE,u("This address is already in use!")),_defineProperty(I,W.ADDRESSES_IN_USE,u("These addresses are already in use!")),_defineProperty(I,W.ADDRESS_INVALID,u("Addresses from 248 up to 254 are not allowed.")),_defineProperty(I,W.POLLING_RATE_LARGER_THAN_TRANSMIT_RATE,u("Polling rate should be equal to or smaller than transmit rate!")),_defineProperty(I,W.ONLY_NATURAL_NUMBERS_ALLOWED,u("Only natural numbers allowed!")),_defineProperty(I,W.IPADDRESS_INVALID_FORMAT,u("The IP address format is invalid!")),_defineProperty(I,W.INVALID_URL,u("The URL format is invalid! The only supported protocols are http, https and opc.tcp.")),I);_.assign(G,{$onInit:E,shouldShowSerialPanel:A,isModbusTab:N,isCanBusTab:x,isOPCUATab:F,getFieldValidationHints:_.curryRight(r.validationHints)(Y),serialConfigurationOptions:H,deviceConfigurationOptions:j,fieldErrors:W,fieldErrorsToMessages:Y,saveSerialConfig:L,saveFieldbusConfig:V,invalid:O,reloadDevices:k,onClickDelete:M,navigateToDetail:h})}e.$inject=["$rootScope","$q","$routeParams","$location","c8yDeviceControl","c8yBase","c8yDevices","c8yModal","c8yAlert","c8yDeviceDatabase","c8yConfig","gettext","gettextCatalog"],angular.module("c8y.modbusConfiguration4").component("c8yFieldbusConfig",{templateUrl:"core_modbusConfiguration4/fieldbus-config.html",bindings:{tab:"@"},controllerAs:"vm",controller:e})}(),function(){"use strict";function e(e){var n;n='<div ng-if="vm.isModbusTab() || vm.isCanBusTab()" class="row">\n  <div class="col-lg-4 col-xs-12">\n    <div class="card-group" style="margin-bottom: 0">\n      <div ng-if="vm.shouldShowSerialPanel()" class="col-lg-12 col-sm-6 col-xs-12">\n        <div class="card">\n          <div class="card-header">\n            <h4 class="card-title" translate>Serial communication</h4>\n          </div>\n          <hr>\n          <div class="card-block">\n            <form name="vm.serialCommunicationForm">\n              <div class="form-group" ng-class="{\'has-error\': vm.invalid(\'serialCommunicationForm\', \'baudRate\')}">\n                <label for="serialCommunicationBaudRate" translate>\n                  Baud rate\n                </label>\n                <div class="c8y-select-wrapper">\n                  <select class="form-control" id="serialCommunicationBaudRate" name="baudRate" ng-model="vm.serialConfiguration.baudRate" ng-options="baudRate for baudRate in vm.serialConfigurationOptions.baudRates" ng-disabled="!vm.hasSerialConfigOperation" required>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n              <div ng-if="vm.isModbusTab()" class="form-group" ng-class="{\'has-error\': vm.invalid(\'serialCommunicationForm\', \'dataBits\')}">\n                <label for="dataBits" translate>Data bits</label>\n                <div class="c8y-select-wrapper">\n                  <select class="form-control" id="dataBits" name="dataBits" ng-model="vm.serialConfiguration.dataBits" ng-options="dataBit for dataBit in vm.serialConfigurationOptions.dataBits" ng-disabled="!vm.hasSerialConfigOperation" required>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n              <div ng-if="vm.isModbusTab()" class="form-group" ng-class="{\'has-error\': vm.invalid(\'serialCommunicationForm\', \'parity\')}">\n                <label for="parity" translate>Parity</label>\n                <div class="c8y-select-wrapper">\n                  <select class="form-control" id="parity" name="parity" ng-model="vm.serialConfiguration.parity" ng-options="parity for parity in vm.serialConfigurationOptions.parities" ng-disabled="!vm.hasSerialConfigOperation" required>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n              <div ng-if="vm.isModbusTab()" class="form-group" ng-class="{\'has-error\': vm.invalid(\'serialCommunicationForm\', \'stopBits\')}">\n                <label for="stopBits" translate>Stop bits</label>\n                <div class="c8y-select-wrapper">\n                  <select class="form-control input-border" id="stopBits" name="stopBits" ng-model="vm.serialConfiguration.stopBits" ng-options="stopBit for stopBit in vm.serialConfigurationOptions.stopBits" ng-disabled="!vm.hasSerialConfigOperation" required>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n            </form>\n            <button class="btn btn-primary" ng-if="vm.hasSerialConfigOperation" ng-click="vm.saveSerialConfig()" ng-disabled="vm.serialCommunicationForm.$invalid" translate>\n              Save changes\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div class="col-lg-12 col-sm-6 col-xs-12">\n        <div class="card">\n          <div class="card-header">\n            <h4 class="card-title">\n              <span ng-if="vm.isModbusTab()" translate>\n                Modbus communication\n              </span>\n              <span ng-if="!vm.isModbusTab()" translate>\n                CAN Bus communication\n              </span>\n            </h4>\n          </div>\n          <hr>\n          <div class="card-block">\n            <form name="vm.fieldbusCommunicationForm">\n              <div ng-if="!vm.isModbusTab()" class="form-group" ng-class="{\'has-error\': vm.invalid(\'fieldbusCommunicationForm\', \'baudRate\')}">\n                <label for="fieldbusCommunicationBaudRate" translate>\n                  Baud rate\n                </label>\n                <div class="c8y-select-wrapper">\n                  <select class="form-control" id="fieldbusCommunicationBaudRate" name="baudRate" ng-model="vm.fieldbusConfiguration.baudRate" ng-options="baudRate for baudRate in vm.serialConfigurationOptions.baudRates" ng-disabled="!vm.hasFieldBusConfigOperation" required>\n                  </select>\n                  <span></span>\n                </div>\n              </div>\n              <div class="form-group modbusComInputs" ng-class="{\'has-error\': vm.invalid(\'fieldbusCommunicationForm\', \'transmitRate\')}">\n                <label for="transmitRate" translate>Transmit rate</label>\n                <div class="input-group">\n                  <input class="form-control input-border" type="number" id="transmitRate" name="transmitRate" ng-model="vm.fieldbusConfiguration.transmitRate" ng-disabled="!vm.hasFieldBusConfigOperation" min="1" required uib-tooltip="{{vm.getFieldValidationHints(vm.fieldbusCommunicationForm.transmitRate)}}" aria-describedby="transmitRateUnits">\n                  <span class="input-group-addon units" translate>\n                    seconds\n                  </span>\n                </div>\n              </div>\n              <div ng-if="vm.isModbusTab()" class="form-group modbusComInputs" ng-class="{\'has-error\': vm.invalid(\'fieldbusCommunicationForm\', \'pollingRate\')}">\n                <label for="pollingRate" translate>Polling rate</label>\n                <div class="input-group">\n                  <input class="form-control input-border" type="number" id="pollingRate" name="pollingRate" ng-model="vm.fieldbusConfiguration.pollingRate" ng-disabled="!vm.hasFieldBusConfigOperation" min="1" required uib-tooltip="{{vm.getFieldValidationHints(vm.fieldbusCommunicationForm.pollingRate)}}" aria-describedby="pollingRateUnits">\n                  <span class="input-group-addon units" translate>\n                    seconds\n                  </span>\n                </div>\n              </div>\n            </form>\n            <button ng-if="vm.hasFieldBusConfigOperation" class="btn btn-primary" ng-click="vm.saveFieldbusConfig()" ng-disabled="vm.fieldbusCommunicationForm.$invalid" translate>\n              Save changes\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class="col-lg-8 col-xs-12">\n    <div ng-repeat="mode in [\'TCP\', \'RTU\', \'CAN\']">\n      <c8y-fieldbus-device-list tab="{{vm.tab}}" mode="{{mode}}" field-errors="vm.fieldErrors" field-errors-to-messages="vm.fieldErrorsToMessages" device-configuration-options="vm.deviceConfigurationOptions" device="vm.device" devices="vm.devices" reload-devices="vm.reloadDevices" on-click-delete="vm.onClickDelete" navigate-to-detail="vm.navigateToDetail">\n      </c8y-fieldbus-device-list>\n    </div>\n  </div>\n</div>\n\n<div ng-if="vm.isOPCUATab()" class="modbusConfigPanel">\n  <div class="panel panel-clean panel-border">\n    <div class="panel-heading">\n      <i c8y-icon="hdd-o"></i>\n      <span translate>OPCUA communication</span>\n    </div>\n    <form name="vm.fieldbusCommunicationForm">\n      <div class="row">\n        <div class="form-group col-lg-3" ng-class="{\'has-error\': vm.invalid(\'fieldbusCommunicationForm\', \'OPCUAUrl\')}">\n          <label for="OPCUAUrl" translate>URL</label>\n          <input class="form-control input-border" id="OPCUAUrl" name="OPCUAUrl" ng-model="vm.fieldbusConfiguration.url" required uib-tooltip="{{vm.getFieldValidationHints(vm.fieldbusCommunicationForm.OPCUAUrl)}}">\n        </div>\n        <div class="form-group col-lg-3">\n          <label for="OPCUAUsername" translate>Username</label>\n          <input class="form-control input-border" id="OPCUAUsername" name="OPCUAUsername" ng-model="vm.fieldbusConfiguration.userIdentityName">\n        </div>\n        <div class="form-group col-lg-3">\n          <label for="OPCUAPassword" translate>Password</label>\n          <input class="form-control input-border" type="password" id="OPCUAPassword" name="OPCUAPassword" ng-model="vm.fieldbusConfiguration.userIdentityPassword" c8y-autocomplete="new-password">\n        </div>\n      </div>\n      <div class="row">\n        <div class="form-group col-lg-3 modbusComInputs" ng-class="{\'has-error\': vm.invalid(\'fieldbusCommunicationForm\', \'transmitRate\')}">\n          <label for="transmitRate" translate>Transmit rate</label>\n          <div class="input-group">\n            <input class="form-control input-border" type="number" id="transmitRate" name="transmitRate" ng-model="vm.fieldbusConfiguration.transmitRate" min="0" required aria-describedby="transmitRateUnits" uib-tooltip="{{vm.getFieldValidationHints(vm.fieldbusCommunicationForm.transmitRate)}}">\n            <span class="input-group-addon units" translate>\n              seconds\n            </span>\n          </div>\n        </div>\n\n        <div class="form-group col-lg-3 modbusComInputs" ng-class="{\'has-error\': invalid(\'fieldbusCommunicationForm\', \'pollingRate\')}">\n          <label for="pollingRate" translate>Polling rate</label>\n          <div class="input-group">\n            <input class="form-control input-border" type="number" id="pollingRate" name="pollingRate" ng-model="vm.fieldbusConfiguration.pollingRate" min="1" required aria-describedby="pollingRateUnits" uib-tooltip="{{vm.getFieldValidationHints(vm.fieldbusCommunicationForm.pollingRate)}}">\n            <span class="input-group-addon units" translate>\n              seconds\n            </span>\n          </div>\n        </div>\n      </div>\n    </form>\n    <div ng-if="vm.hasFieldBusConfigOperation" class="saveButton">\n      <button class="btn btn-primary" ng-click="vm.saveFieldbusConfig()" ng-disabled="vm.fieldbusCommunicationForm.$invalid" translate>\n        Save changes\n      </button>\n    </div>\n  </div>\n\n  <hr>\n\n  <c8y-fieldbus-device-list tab="{{vm.tab}}" mode="OPCUA" field-errors="vm.fieldErrors" field-errors-to-messages="vm.fieldErrorsToMessages" device-configuration-options="vm.deviceConfigurationOptions" device="vm.device" devices="vm.devices" reload-devices="vm.reloadDevices" on-click-delete="vm.onClickDelete" navigate-to-detail="vm.navigateToDetail">\n  </c8y-fieldbus-device-list>\n</div>\n\n',e.put("core_modbusConfiguration4/fieldbus-config.html",n),e.put("/apps/core/modbusConfiguration4/fieldbus-config.html",n),n='<div ng-if="(vm.isModbusTab() || vm.isCanBusTab()) &&\n    vm.shouldShowSection()" class="card">\n  <div class="card-header">\n    <h4 class="card-title">{{vm.mode}}</h4>\n  </div>\n  <hr ng-if="filtered.length === 0" style="margin: 0">\n  <div class="list-group">\n    <div ng-if="filtered.length > 0" class="list-group-item hidden-xs">\n      <div class="flex-row">\n        <div ng-if="vm.mode !== \'CAN\'" class="col-sm-3 col-xs-12">\n          <label class="small" translate>Name</label>\n        </div>\n        <div class="col-sm-3 col-xs-12">\n          <label class="small" translate>Device type</label>\n        </div>\n        <div ng-if="vm.mode !== \'CAN\'" class="col-sm-2 col-xs-12">\n          <label class="small" translate>Address</label>\n        </div>\n        <div ng-if="vm.mode === \'TCP\'" class="col-sm-3 col-xs-12">\n          <label class="small" translate>IP address</label>\n        </div>\n      </div>\n    </div>\n    <div class="list-group-item" ng-repeat="device in vm.devices | orderBy:\'-\' | filter:vm.filterByMode() as filtered">\n      <div class="flex-row">\n        <div ng-if="vm.mode !== \'CAN\'" class="col-sm-3 col-xs-12 interact" ng-click="vm.navigateToDetail(device)">\n          <label class="small visible-xs-inline-block" translate>\n            Name\n          </label>\n          {{device.name}}\n        </div>\n        <div class="col-sm-3 col-xs-12">\n          <label class="small visible-xs-inline-block" translate>\n            Device type\n          </label>\n          {{device.deviceType}}\n        </div>\n        <div ng-if="vm.mode !== \'CAN\'" class="col-sm-2 col-xs-12">\n          <label class="small visible-xs-inline-block" translate>\n            Address\n          </label>\n          {{device.address}}\n        </div>\n        <div ng-if="vm.mode === \'TCP\'" class="col-sm-3 col-xs-12">\n          <label class="small visible-xs-inline-block" translate>\n            IP address\n          </label>\n          {{device.ipAddress}}\n        </div>\n        <div class="col-sm-1 col-xs-12 text-right showOnHover">\n          <button class="btn btn-link" title="{{\'Remove\' | translate}}" ng-click="vm.onClickDelete(device)">\n            <i c8y-icon="minus-circle" class="text-danger"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <c8y-load-more ng-repeat-end change-page-size></c8y-load-more>\n\n  <form ng-if="vm.newDevice" class="card-block bg-gray-white" name="vm.new{{vm.mode}}DeviceForm" novalidate>\n    <div ng-if="vm.mode !== \'CAN\'" class="form-group" ng-class="{\'has-error\': vm.invalid(\'name\')}" uib-tooltip="{{vm.getFieldValidationHints(\'name\')}}">\n      <input class="form-control" name="name" placeholder="{{\'Name\' | translate}}" ng-model="vm.newDevice.name" ng-disabled="vm.newDevice.adding" required>\n    </div>\n    <div class="form-group" ng-class="{\'has-error\': vm.invalid(\'deviceType\')}" uib-tooltip="{{vm.getFieldValidationHints(\'deviceType\')}}">\n      <ui-select class="form-control" name="deviceType" ng-model="vm.newDevice.deviceType" ng-disabled="vm.newDevice.adding" required>\n        <ui-select-match placeholder="{{\'Select a device type…\' | translate}}" title="{{$select.selected.name}}" ng-bind="$select.selected.name">\n        </ui-select-match>\n        <ui-select-choices repeat="type in vm.deviceConfigurationOptions.types | orderBy:\'name\' | filter:$select.search">\n          <span title="{{type.name}}">{{type.name}}</span>\n        </ui-select-choices>\n      </ui-select>\n    </div>\n\n    <div ng-if="vm.mode !== \'CAN\'" class="form-group" ng-class="{\'has-error\': vm.invalid(\'address\')}" uib-tooltip="{{vm.getFieldValidationHints(\'address\')}}">\n      <input class="form-control" type="number" name="address" placeholder="{{\'Address\' | translate}}" ng-model="vm.newDevice.address" ng-min="0" ng-max="255" step="1" required ng-disabled="vm.newDevice.adding">\n    </div>\n\n    <div class="form-group" ng-if="vm.mode === \'TCP\'" ng-class="{\'has-error\': vm.invalid(\'ipAddress\')}" uib-tooltip="{{vm.getFieldValidationHints(\'ipAddress\')}}">\n      <input class="form-control" id="ipAddress" name="ipAddress" ng-model="vm.newDevice.ipAddress" placeholder="{{\'IP address\' | translate}}" validate-ip maxlength="15" required ng-disabled="vm.newDevice.adding">\n    </div>\n\n    <button class="btn btn-default" ng-click="vm.clearNewDevice()" ng-disabled="vm.newDevice.adding" translate>\n      Cancel\n    </button>\n\n    <button class="btn btn-primary" ng-click="vm.addNewDevice()" ng-disabled="vm.isFormInvalid()">\n      <span ng-if="!vm.newDevice.adding" translate>Add</span>\n      <span ng-if="vm.newDevice.adding">\n        <i c8y-icon="circle-o-notch" class="fa-spin"></i>\n        <span translate>Adding</span>&hellip;\n      </span>\n    </button>\n  </form>\n\n  <div class="card-block">\n    <button class="btn-add-block" ng-click="vm.startAddingNewDevice()">\n      <i c8y-icon="plus-circle"></i>\n      <span translate>Add {{vm.mode}} device</span>\n    </button>\n  </div>\n</div>\n\n<div ng-if="vm.isOPCUATab()">\n  <button class="btn btn-link pull-right" ng-click="vm.startAddingNewDevice()">\n    <i c8y-icon="plus"></i>\n    <span translate>Add OPCUA device</span>\n  </button>\n  <div class="clearfix"></div>\n  <form ng-if="vm.newDevice" class="panel-body" name="vm.newOPCUADeviceForm" novalidate>\n    <div class="row">\n      <div class="form-group col-lg-3" ng-class="{\'has-error\': vm.invalid(\'name\')}" uib-tooltip="{{vm.getFieldValidationHints(\'name\')}}">\n        <input class="form-control input-border" placeholder="{{\'Name\' | translate}}" name="name" ng-model="vm.newDevice.name" required ng-disabled="vm.newDevice.adding">\n      </div>\n      <div class="form-group col-lg-3" ng-class="{\'has-error\': vm.invalid(\'directoryPath\')}" uib-tooltip="{{vm.getFieldValidationHints(\'directoryPath\')}}">\n        <input class="form-control input-border" placeholder="{{\'Directory path\' | translate}}" name="directoryPath" ng-model="vm.newDevice.directoryPath" required ng-disabled="vm.newDevice.adding">\n      </div>\n      <div class="form-group col-lg-3" ng-class="{\'has-error\': vm.invalid(\'deviceType\')}" uib-tooltip="{{vm.getFieldValidationHints(\'deviceType\')}}">\n        <ui-select class="form-control" name="deviceType" ng-model="vm.newDevice.deviceType" required ng-disabled="vm.newDevice.adding">\n          <ui-select-match title="{{$select.selected.name}}" ng-bind="$select.selected.name">\n          </ui-select-match>\n          <ui-select-choices repeat="type in vm.deviceConfigurationOptions.types | orderBy:\'name\' | filter:$select.search">\n            <span title="{{type.name}}">{{type.name}}</span>\n          </ui-select-choices>\n        </ui-select>\n      </div>\n      <div class="form-group col-lg-3">\n        <button class="btn btn-primary" ng-click="vm.addNewDevice()" ng-disabled="vm.isFormInvalid()">\n          <span ng-if="!vm.newDevice.adding" translate>Add</span>\n          <span ng-if="vm.newDevice.adding">\n            <i c8y-icon="spinner" class="fa-spin"></i>\n            <span translate>Adding</span>&hellip;</span>\n        </button>\n        <button class="btn btn-default" ng-click="vm.clearNewDevice()" ng-disabled="vm.newDevice.adding" translate>\n          Cancel\n        </button>\n      </div>\n    </div>\n  </form>\n\n  <table class="table table-hover">\n    <tr>\n      <th translate>Name</th>\n      <th translate>Directory path</th>\n      <th translate>Device type</th>\n      <th>&nbsp;</th>\n    </tr>\n    <tr ng-repeat="device in vm.devices | filter:vm.filterByMode() | orderBy:\'-\'">\n      <td class="interact" ng-click="vm.navigateToDetail(device)">\n        {{device.name}}\n      </td>\n      <td>{{device.directoryPath}}</td>\n      <td>{{device.deviceType}}</td>\n      <td class="text-right">\n        <button class="btn btn-danger btn-xs showOnHover" title="{{\'Remove\' | translate}}" ng-click="vm.onClickDelete(device)">\n          <i c8y-icon="times"></i>\n        </button>\n      </td>\n    </tr>\n  </table>\n\n  <c8y-load-more ng-repeat-end change-page-size></c8y-load-more>\n</div>\n',
e.put("core_modbusConfiguration4/fieldbus-device-list.html",n),e.put("/apps/core/modbusConfiguration4/fieldbus-device-list.html",n)}angular.module("c8y.modbusConfiguration4").run(["$templateCache",e])}();