/* core_deviceRegistrationActilityProvider 8.21.0 2018-01-30T22:08:30+00:00 ab57d6f7e859+ (release/8.21.0) r8.21.0 */
!function(){"use strict";function e(e){e.add({name:"actility",label:"LoRa",flow:{single:["actility","finish"],multiple:["providers-list","actility","finish"]},registrationCfg:{showIfPermissions:{anyRole:["ROLE_INVENTORY_ADMIN","ROLE_INVENTORY_CREATE"]}}})}e.$inject=["c8yDeviceProvidersProvider"],angular.module("c8y.deviceRegistrationActility",["c8y.deviceRegistration"]).config(e)}(),function(){"use strict";function e(e,i,t,n,c){function r(){n.doResize()}function a(){e.all([s(),l(),o()]).catch(function(e){u.errMsg.push(e.data)}).finally(function(){u.providerSettingsLoaded=!0})}function s(){return t.getDeviceTypes().then(function(e){u.deviceTypes=e,0===e.length&&v(p)})}function l(){return t.getConnectivityPlans().then(d).then(function(e){u.connectivityPlans=e,0===u.connectivityPlans.length&&v(y)})}function o(){return t.getDeviceProfiles().then(function(e){u.deviceProfiles=e,0===e.length&&v(f)})}function d(e){return _.filter(e,function(e){return e.grantedConnections<e.usedConnections})}function v(e){u.errMsg.push({message:e})}function m(){n.disableInteractionWhenRequestInProgress(u,!0),n.setFormData(u.wizardCtrl.data,{device:u.device}),t.createNewDeviceRequest(g(u.device)).then(function(e){n.setSuccessData(u.wizardCtrl.data,e),u.wizardCtrl.goTo("finish")}).catch(function(e){n.setErrorData(u.wizardCtrl.data,e),u.wizardCtrl.goTo("finish")}).finally(function(){n.disableInteractionWhenRequestInProgress(u,!1),i(r,500)})}function g(e){var i=_.pick(e.deviceType,["name","id"]),t=_.cloneDeep(e);return _.unset(t,"deviceType"),_.set(t,"deviceType",i),t}var u=this;_.assign(u,{$onInit:a,save:m,doResize:r,errMsg:[]});var p=c("No device types configured. Create a LoRa device type using device database."),y=c("No connectivity plans with free slots available."),f=c("No device profiles.")}e.$inject=["$q","$timeout","deviceRegistrationActilityProviderService","deviceRegistrationWizardUtils","gettext"],angular.module("c8y.deviceRegistrationActility").component("deviceRegistrationActility",{controllerAs:"vm",templateUrl:"core_deviceRegistrationActilityProvider/deviceRegistrationActility.html",require:{wizardCtrl:"^c8yWizardStep"},bindings:{backStep:"@?"},controller:e})}(),function(){"use strict";function e(e,i,t,n){function c(){return e(o.connectivityPlans).then(t.getResData)}function r(){return n.getAvailableDeviceTypes({type:"c8y_ActilityDeviceType"})}function a(){return e(o.deviceProfiles).then(t.getResData)}function s(i){return e(_.assign({},o.newDeviceRequest,{data:i})).then(t.getResData)}var l={},o={connectivityPlans:{url:"/service/actility-device-provider-agent/connectivityPlans",method:"GET",silentError:!0},newDeviceRequest:{url:"/service/actility-device-provider-agent/newDeviceRequest",method:"POST",silentError:!0},deviceProfiles:{url:"/service/actility-device-provider-agent/deviceProfiles",method:"GET",silentError:!0}};return _.assign(l,{getConnectivityPlans:c,getDeviceTypes:r,createNewDeviceRequest:s,getDeviceProfiles:a}),l}e.$inject=["$http","c8yDeviceProviders","c8yBase","c8yDeviceDatabase"],angular.module("c8y.deviceRegistrationActility").factory("deviceRegistrationActilityProviderService",e)}(),function(){"use strict";function e(e){var i;i='<div class="modal-inner-scroll" style="min-height: 225px">\n  <div ng-form="vm.deviceForm" ng-if="vm.connectivityPlans.length && vm.deviceTypes.length && vm.deviceProfiles.length" class="modal-body">\n    <div ng-init="vm.doResize()"></div>\n    <div class="form-group">\n      <label translate>Device profiles</label>\n      <ui-select name="profile" class="form-control text-left" ng-model="vm.device.deviceProfile" required>\n        <ui-select-match placeholder="{{\'Select device profile\' | translate}}">{{vm.device.deviceProfile.name}}</ui-select-match>\n        <ui-select-choices repeat="dp in vm.deviceProfiles | filter: $select.search track by dp.name | orderBy:\'name\'">\n          <span ng-bind-html="dp.name | highlight: $select.search" title="{{dp.name}}"></span>\n        </ui-select-choices>\n      </ui-select>\n      <c8y-error-feedback field="vm.deviceForm.profile"></c8y-error-feedback>\n    </div>\n    <div class="form-group">\n      <label translate>Device type</label>\n      <ui-select name="type" class="form-control text-left" ng-model="vm.device.deviceType" required>\n        <ui-select-match placeholder="{{\'Select device type\' | translate}}">{{vm.device.deviceType.name}}</ui-select-match>\n        <ui-select-choices repeat="dt in vm.deviceTypes | filter: $select.search track by dt.name | orderBy:\'name\'">\n          <span ng-bind-html="dt.name | highlight: $select.search" title="{{dt.name}}"></span>\n        </ui-select-choices>\n      </ui-select>\n      <c8y-error-feedback field="vm.deviceForm.type"></c8y-error-feedback>\n    </div>\n    <div class="form-group">\n      <label translate>Device EUI</label>\n      <input type="text" name="eui" class="form-control" ng-model="vm.device.devEUI" required/>\n      <c8y-error-feedback field="vm.deviceForm.eui"></c8y-error-feedback>\n    </div>\n    <div class="form-group">\n      <label translate>Application key</label>\n      <input type="text" name="appKey" class="form-control" ng-model="vm.device.applicationKey" required/>\n      <c8y-error-feedback field="vm.deviceForm.appKey"></c8y-error-feedback>\n    </div>\n    <div class="form-group">\n      <label translate>Connectivity plan</label>\n      <ui-select name="connectivityPlan" class="form-control text-left" ng-model="vm.device.connectivityPlan" required>\n        <ui-select-match placeholder="{{\'Select device type\' | translate}}">{{vm.device.connectivityPlan.name}}</ui-select-match>\n        <ui-select-choices repeat="cp in vm.connectivityPlans | filter: $select.search track by cp.name | orderBy:\'name\'">\n          <span ng-bind-html="cp.name | highlight: $select.search" title="{{cp.name}}"></span>\n        </ui-select-choices>\n      </ui-select>\n      <small class="text-muted" style="display: block" translate>Only connectivity plans with free slots are displayed</small>\n      <c8y-error-feedback field="vm.deviceForm.connectivityPlan"></c8y-error-feedback>\n    </div>\n  </div>\n  <div class="text-center" ng-if="!vm.providerSettingsLoaded && !(vm.connectivityPlans.length && vm.deviceTypes.length && vm.deviceProfiles.length)" style="margin: 100px 0 50px 0; height: 150px">\n    <i c8y-icon="circle-o-notch" class="fa-spin"></i>\n    <span translate>Wait while provider settings are loaded&hellip;</span>\n  </div>\n  <div class="alert alert-danger" ng-if="vm.providerSettingsLoaded && !(vm.connectivityPlans.length && vm.deviceTypes.length && vm.deviceProfiles.length)" style="margin: 15px">\n    <div ng-repeat="msg in vm.errMsg">\n      <span>{{msg.message | translateServerMessage}}</span>\n    </div>\n  </div>\n  <div class="c8y-wizard-footer">\n    <button class="btn btn-default" ng-click="vm.wizardCtrl.goTo(vm.backStep)" ng-disabled="vm.inProgress" translate>\n      Back\n    </button>\n    <button class="btn btn-primary" ng-click="vm.save()" ng-disabled="vm.deviceForm.$invalid || vm.errMsg.length || vm.inProgress">\n      <span ng-show="!vm.inProgress" translate>Next</span>\n      <span ng-show="vm.inProgress">\n        <i c8y-icon="circle-o-notch" class="fa-spin"></i>\n      </span>\n    </button>\n  </div>\n</div>\n',e.put("core_deviceRegistrationActilityProvider/deviceRegistrationActility.html",i),e.put("/apps/core/deviceRegistrationActilityProvider/deviceRegistrationActility.html",i)}angular.module("c8y.deviceRegistrationActility").run(["$templateCache",e])}();